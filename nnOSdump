
nnOS:     file format elf32-i386


Disassembly of section .text:

00100000 <print-0xc>:
  100000:	02 b0 ad 1b 00 00    	add    dh,BYTE PTR [eax+0x1bad]
  100006:	00 00                	add    BYTE PTR [eax],al
  100008:	fe 4f 52             	dec    BYTE PTR [edi+0x52]
  10000b:	e4 55                	in     al,0x55

0010000c <print>:
#include "../include/stdio.h"

/*
 *
 */
void print(const char *chr, ...) {
  10000c:	55                   	push   ebp
  10000d:	89 e5                	mov    ebp,esp
  10000f:	83 ec 28             	sub    esp,0x28
	int a = 0;
  100012:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
	int *args = (int *) (&chr + 1);
  100019:	8d 45 08             	lea    eax,[ebp+0x8]
  10001c:	83 c0 04             	add    eax,0x4
  10001f:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax

	while (*chr != 0) {
  100022:	e9 2f 01 00 00       	jmp    100156 <print+0x14a>

		if (*chr == '%') {
  100027:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10002a:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  10002d:	3c 25                	cmp    al,0x25
  10002f:	0f 85 e3 00 00 00    	jne    100118 <print+0x10c>

			chr++;
  100035:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100038:	83 c0 01             	add    eax,0x1
  10003b:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax

			switch (*chr) {
  10003e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100041:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100044:	0f be c0             	movsx  eax,al
  100047:	83 e8 58             	sub    eax,0x58
  10004a:	83 f8 20             	cmp    eax,0x20
  10004d:	0f 87 f2 00 00 00    	ja     100145 <print+0x139>
  100053:	8b 04 85 04 10 10 00 	mov    eax,DWORD PTR [eax*4+0x101004]
  10005a:	ff e0                	jmp    eax
			case 'b':
				printnum(*args, 2, 0);
  10005c:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  10005f:	8b 00                	mov    eax,DWORD PTR [eax]
  100061:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  100068:	00 
  100069:	c7 44 24 04 02 00 00 	mov    DWORD PTR [esp+0x4],0x2
  100070:	00 
  100071:	89 04 24             	mov    DWORD PTR [esp],eax
  100074:	e8 4d 01 00 00       	call   1001c6 <printnum>
				args++;
  100079:	83 45 f0 04          	add    DWORD PTR [ebp-0x10],0x4
				break;
  10007d:	e9 c7 00 00 00       	jmp    100149 <print+0x13d>

			case 'd':
				printnum(*args, 10, 0);
  100082:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  100085:	8b 00                	mov    eax,DWORD PTR [eax]
  100087:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  10008e:	00 
  10008f:	c7 44 24 04 0a 00 00 	mov    DWORD PTR [esp+0x4],0xa
  100096:	00 
  100097:	89 04 24             	mov    DWORD PTR [esp],eax
  10009a:	e8 27 01 00 00       	call   1001c6 <printnum>
				args++;
  10009f:	83 45 f0 04          	add    DWORD PTR [ebp-0x10],0x4
				break;
  1000a3:	e9 a1 00 00 00       	jmp    100149 <print+0x13d>

			case 'o':
				printnum(*args, 8, 0);
  1000a8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  1000ab:	8b 00                	mov    eax,DWORD PTR [eax]
  1000ad:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  1000b4:	00 
  1000b5:	c7 44 24 04 08 00 00 	mov    DWORD PTR [esp+0x4],0x8
  1000bc:	00 
  1000bd:	89 04 24             	mov    DWORD PTR [esp],eax
  1000c0:	e8 01 01 00 00       	call   1001c6 <printnum>
				args++;
  1000c5:	83 45 f0 04          	add    DWORD PTR [ebp-0x10],0x4
				break;
  1000c9:	eb 7e                	jmp    100149 <print+0x13d>

			case 'x':
				printnum(*args, 16, 0);
  1000cb:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  1000ce:	8b 00                	mov    eax,DWORD PTR [eax]
  1000d0:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  1000d7:	00 
  1000d8:	c7 44 24 04 10 00 00 	mov    DWORD PTR [esp+0x4],0x10
  1000df:	00 
  1000e0:	89 04 24             	mov    DWORD PTR [esp],eax
  1000e3:	e8 de 00 00 00       	call   1001c6 <printnum>
				args++;
  1000e8:	83 45 f0 04          	add    DWORD PTR [ebp-0x10],0x4
				break;
  1000ec:	90                   	nop
  1000ed:	eb 5a                	jmp    100149 <print+0x13d>

			case 'X':
				printnum(*args, 16, LARGECHARS);
  1000ef:	0f b6 05 00 10 10 00 	movzx  eax,BYTE PTR ds:0x101000
  1000f6:	0f b6 d0             	movzx  edx,al
  1000f9:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
  1000fc:	8b 00                	mov    eax,DWORD PTR [eax]
  1000fe:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
  100102:	c7 44 24 04 10 00 00 	mov    DWORD PTR [esp+0x4],0x10
  100109:	00 
  10010a:	89 04 24             	mov    DWORD PTR [esp],eax
  10010d:	e8 b4 00 00 00       	call   1001c6 <printnum>
				args++;
  100112:	83 45 f0 04          	add    DWORD PTR [ebp-0x10],0x4
				break;
  100116:	eb 31                	jmp    100149 <print+0x13d>
			}

		} else {
			printchar(*chr, 0xA, a, 0);
  100118:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  10011b:	0f b6 d0             	movzx  edx,al
  10011e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100121:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100124:	0f be c0             	movsx  eax,al
  100127:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
  10012e:	00 
  10012f:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
  100133:	c7 44 24 04 0a 00 00 	mov    DWORD PTR [esp+0x4],0xa
  10013a:	00 
  10013b:	89 04 24             	mov    DWORD PTR [esp],eax
  10013e:	e8 23 00 00 00       	call   100166 <printchar>
  100143:	eb 04                	jmp    100149 <print+0x13d>
				break;

			case 'X':
				printnum(*args, 16, LARGECHARS);
				args++;
				break;
  100145:	90                   	nop
  100146:	eb 01                	jmp    100149 <print+0x13d>
  100148:	90                   	nop
			}

		} else {
			printchar(*chr, 0xA, a, 0);
		}
		a++;
  100149:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
		chr++;
  10014d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100150:	83 c0 01             	add    eax,0x1
  100153:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
 */
void print(const char *chr, ...) {
	int a = 0;
	int *args = (int *) (&chr + 1);

	while (*chr != 0) {
  100156:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100159:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  10015c:	84 c0                	test   al,al
  10015e:	0f 85 c3 fe ff ff    	jne    100027 <print+0x1b>
			printchar(*chr, 0xA, a, 0);
		}
		a++;
		chr++;
	}
}
  100164:	c9                   	leave  
  100165:	c3                   	ret    

00100166 <printchar>:

/*
 *
 */
void printchar(const char chr, byte color, byte x, byte y) {
  100166:	55                   	push   ebp
  100167:	89 e5                	mov    ebp,esp
  100169:	53                   	push   ebx
  10016a:	83 ec 20             	sub    esp,0x20
  10016d:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
  100170:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
  100173:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
  100176:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
  100179:	88 5d e8             	mov    BYTE PTR [ebp-0x18],bl
  10017c:	88 4d e4             	mov    BYTE PTR [ebp-0x1c],cl
  10017f:	88 55 e0             	mov    BYTE PTR [ebp-0x20],dl
  100182:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al
	uint16 *off = (uint16*) 0xB8000;
  100185:	c7 45 f8 00 80 0b 00 	mov    DWORD PTR [ebp-0x8],0xb8000

	off += (uint16) y * 80 + x;
  10018c:	0f b6 55 dc          	movzx  edx,BYTE PTR [ebp-0x24]
  100190:	89 d0                	mov    eax,edx
  100192:	c1 e0 02             	shl    eax,0x2
  100195:	01 d0                	add    eax,edx
  100197:	c1 e0 04             	shl    eax,0x4
  10019a:	89 c2                	mov    edx,eax
  10019c:	0f b6 45 e0          	movzx  eax,BYTE PTR [ebp-0x20]
  1001a0:	8d 04 02             	lea    eax,[edx+eax*1]
  1001a3:	01 c0                	add    eax,eax
  1001a5:	01 45 f8             	add    DWORD PTR [ebp-0x8],eax

	*off = (((uint16) color) << 8) | chr;
  1001a8:	0f b6 45 e4          	movzx  eax,BYTE PTR [ebp-0x1c]
  1001ac:	c1 e0 08             	shl    eax,0x8
  1001af:	89 c2                	mov    edx,eax
  1001b1:	66 0f be 45 e8       	movsx  ax,BYTE PTR [ebp-0x18]
  1001b6:	09 d0                	or     eax,edx
  1001b8:	89 c2                	mov    edx,eax
  1001ba:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
  1001bd:	66 89 10             	mov    WORD PTR [eax],dx
}
  1001c0:	83 c4 20             	add    esp,0x20
  1001c3:	5b                   	pop    ebx
  1001c4:	5d                   	pop    ebp
  1001c5:	c3                   	ret    

001001c6 <printnum>:

/*
 *
 */
void printnum(int num, uint16 base, byte flag) {
  1001c6:	55                   	push   ebp
  1001c7:	89 e5                	mov    ebp,esp
  1001c9:	81 ec 8c 00 00 00    	sub    esp,0x8c
  1001cf:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
  1001d2:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  1001d5:	66 89 55 8c          	mov    WORD PTR [ebp-0x74],dx
  1001d9:	88 45 88             	mov    BYTE PTR [ebp-0x78],al

	const char *digits;
	static const char small_digits[] = "0123456789abcdefghijklmnopqrstuvwxyz";
	static const char large_digits[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

	if (flag & LARGECHARS)
  1001dc:	0f b6 05 00 10 10 00 	movzx  eax,BYTE PTR ds:0x101000
  1001e3:	22 45 88             	and    al,BYTE PTR [ebp-0x78]
  1001e6:	84 c0                	test   al,al
  1001e8:	74 09                	je     1001f3 <printnum+0x2d>
		digits = large_digits;
  1001ea:	c7 45 fc a0 10 10 00 	mov    DWORD PTR [ebp-0x4],0x1010a0
  1001f1:	eb 07                	jmp    1001fa <printnum+0x34>
	else
		digits = small_digits;
  1001f3:	c7 45 fc e0 10 10 00 	mov    DWORD PTR [ebp-0x4],0x1010e0

	if (base < 2 || base > 36)
  1001fa:	66 83 7d 8c 01       	cmp    WORD PTR [ebp-0x74],0x1
  1001ff:	0f 86 ab 00 00 00    	jbe    1002b0 <printnum+0xea>
  100205:	66 83 7d 8c 24       	cmp    WORD PTR [ebp-0x74],0x24
  10020a:	0f 87 a3 00 00 00    	ja     1002b3 <printnum+0xed>
		return;

	int i = 0;
  100210:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
	char out[100];

	if (num == 0) {
  100217:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  10021b:	75 46                	jne    100263 <printnum+0x9d>
		out[i++] = '0';
  10021d:	8d 45 90             	lea    eax,[ebp-0x70]
  100220:	03 45 f8             	add    eax,DWORD PTR [ebp-0x8]
  100223:	c6 00 30             	mov    BYTE PTR [eax],0x30
  100226:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
  10022a:	eb 3d                	jmp    100269 <printnum+0xa3>
	} else
		while (num != 0) {
			out[i++] = digits[num % base];
  10022c:	0f b7 4d 8c          	movzx  ecx,WORD PTR [ebp-0x74]
  100230:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100233:	89 c2                	mov    edx,eax
  100235:	c1 fa 1f             	sar    edx,0x1f
  100238:	f7 f9                	idiv   ecx
  10023a:	89 d0                	mov    eax,edx
  10023c:	03 45 fc             	add    eax,DWORD PTR [ebp-0x4]
  10023f:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  100242:	8d 45 90             	lea    eax,[ebp-0x70]
  100245:	03 45 f8             	add    eax,DWORD PTR [ebp-0x8]
  100248:	88 10                	mov    BYTE PTR [eax],dl
  10024a:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
			num = num / base;
  10024e:	0f b7 45 8c          	movzx  eax,WORD PTR [ebp-0x74]
  100252:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
  100255:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100258:	89 c2                	mov    edx,eax
  10025a:	c1 fa 1f             	sar    edx,0x1f
  10025d:	f7 7d 84             	idiv   DWORD PTR [ebp-0x7c]
  100260:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
	char out[100];

	if (num == 0) {
		out[i++] = '0';
	} else
		while (num != 0) {
  100263:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100267:	75 c3                	jne    10022c <printnum+0x66>
			out[i++] = digits[num % base];
			num = num / base;
		}

	int a = 0;
  100269:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
	while (i != 0) {
  100270:	eb 36                	jmp    1002a8 <printnum+0xe2>
		i--;
  100272:	83 6d f8 01          	sub    DWORD PTR [ebp-0x8],0x1
		printchar(out[i], 0xA, a++, 1);
  100276:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100279:	0f b6 d0             	movzx  edx,al
  10027c:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
  100280:	8d 45 90             	lea    eax,[ebp-0x70]
  100283:	03 45 f8             	add    eax,DWORD PTR [ebp-0x8]
  100286:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100289:	0f be c0             	movsx  eax,al
  10028c:	c7 44 24 0c 01 00 00 	mov    DWORD PTR [esp+0xc],0x1
  100293:	00 
  100294:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
  100298:	c7 44 24 04 0a 00 00 	mov    DWORD PTR [esp+0x4],0xa
  10029f:	00 
  1002a0:	89 04 24             	mov    DWORD PTR [esp],eax
  1002a3:	e8 be fe ff ff       	call   100166 <printchar>
			out[i++] = digits[num % base];
			num = num / base;
		}

	int a = 0;
	while (i != 0) {
  1002a8:	83 7d f8 00          	cmp    DWORD PTR [ebp-0x8],0x0
  1002ac:	75 c4                	jne    100272 <printnum+0xac>
  1002ae:	eb 04                	jmp    1002b4 <printnum+0xee>
		digits = large_digits;
	else
		digits = small_digits;

	if (base < 2 || base > 36)
		return;
  1002b0:	90                   	nop
  1002b1:	eb 01                	jmp    1002b4 <printnum+0xee>
  1002b3:	90                   	nop
	while (i != 0) {
		i--;
		printchar(out[i], 0xA, a++, 1);
	}

}
  1002b4:	c9                   	leave  
  1002b5:	c3                   	ret    
	...

001002b8 <outb>:

/*
 *
 */
static inline void outb(uint16 port, uint8 val)
{
  1002b8:	55                   	push   ebp
  1002b9:	89 e5                	mov    ebp,esp
  1002bb:	83 ec 08             	sub    esp,0x8
  1002be:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  1002c1:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1002c4:	66 89 55 fc          	mov    WORD PTR [ebp-0x4],dx
  1002c8:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al
   __asm__ __volatile__ (
  1002cb:	0f b6 45 f8          	movzx  eax,BYTE PTR [ebp-0x8]
  1002cf:	0f b7 55 fc          	movzx  edx,WORD PTR [ebp-0x4]
  1002d3:	ee                   	out    dx,al
   "outb %b0, %w1"
   :
   : "a"(val), "d"(port));
}
  1002d4:	c9                   	leave  
  1002d5:	c3                   	ret    

001002d6 <dprint>:


/*
 *
 */
void dprint(const char *chr, ...) {
  1002d6:	55                   	push   ebp
  1002d7:	89 e5                	mov    ebp,esp
  1002d9:	83 ec 28             	sub    esp,0x28

	int *args = (int *) (&chr + 1);
  1002dc:	8d 45 08             	lea    eax,[ebp+0x8]
  1002df:	83 c0 04             	add    eax,0x4
  1002e2:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax

	while (*chr != 0) {
  1002e5:	e9 29 01 00 00       	jmp    100413 <dprint+0x13d>

		if (*chr == '%') {
  1002ea:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1002ed:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  1002f0:	3c 25                	cmp    al,0x25
  1002f2:	0f 85 e3 00 00 00    	jne    1003db <dprint+0x105>

			chr++;
  1002f8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1002fb:	83 c0 01             	add    eax,0x1
  1002fe:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax

			switch (*chr) {
  100301:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100304:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100307:	0f be c0             	movsx  eax,al
  10030a:	83 e8 58             	sub    eax,0x58
  10030d:	83 f8 20             	cmp    eax,0x20
  100310:	0f 87 f0 00 00 00    	ja     100406 <dprint+0x130>
  100316:	8b 04 85 24 11 10 00 	mov    eax,DWORD PTR [eax*4+0x101124]
  10031d:	ff e0                	jmp    eax
			case 'b':
				dprintnum(*args, 2, 0);
  10031f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100322:	8b 00                	mov    eax,DWORD PTR [eax]
  100324:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  10032b:	00 
  10032c:	c7 44 24 04 02 00 00 	mov    DWORD PTR [esp+0x4],0x2
  100333:	00 
  100334:	89 04 24             	mov    DWORD PTR [esp],eax
  100337:	e8 47 01 00 00       	call   100483 <dprintnum>
				args++;
  10033c:	83 45 f4 04          	add    DWORD PTR [ebp-0xc],0x4
				break;
  100340:	e9 c5 00 00 00       	jmp    10040a <dprint+0x134>

			case 'd':
				dprintnum(*args, 10, 0);
  100345:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100348:	8b 00                	mov    eax,DWORD PTR [eax]
  10034a:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  100351:	00 
  100352:	c7 44 24 04 0a 00 00 	mov    DWORD PTR [esp+0x4],0xa
  100359:	00 
  10035a:	89 04 24             	mov    DWORD PTR [esp],eax
  10035d:	e8 21 01 00 00       	call   100483 <dprintnum>
				args++;
  100362:	83 45 f4 04          	add    DWORD PTR [ebp-0xc],0x4
				break;
  100366:	e9 9f 00 00 00       	jmp    10040a <dprint+0x134>

			case 'o':
				dprintnum(*args, 8, 0);
  10036b:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  10036e:	8b 00                	mov    eax,DWORD PTR [eax]
  100370:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  100377:	00 
  100378:	c7 44 24 04 08 00 00 	mov    DWORD PTR [esp+0x4],0x8
  10037f:	00 
  100380:	89 04 24             	mov    DWORD PTR [esp],eax
  100383:	e8 fb 00 00 00       	call   100483 <dprintnum>
				args++;
  100388:	83 45 f4 04          	add    DWORD PTR [ebp-0xc],0x4
				break;
  10038c:	eb 7c                	jmp    10040a <dprint+0x134>

			case 'x':
				dprintnum(*args, 16, 0);
  10038e:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  100391:	8b 00                	mov    eax,DWORD PTR [eax]
  100393:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  10039a:	00 
  10039b:	c7 44 24 04 10 00 00 	mov    DWORD PTR [esp+0x4],0x10
  1003a2:	00 
  1003a3:	89 04 24             	mov    DWORD PTR [esp],eax
  1003a6:	e8 d8 00 00 00       	call   100483 <dprintnum>
				args++;
  1003ab:	83 45 f4 04          	add    DWORD PTR [ebp-0xc],0x4
				break;
  1003af:	90                   	nop
  1003b0:	eb 58                	jmp    10040a <dprint+0x134>

			case 'X':
				dprintnum(*args, 16, DLARGECHARS);
  1003b2:	0f b6 05 20 11 10 00 	movzx  eax,BYTE PTR ds:0x101120
  1003b9:	0f b6 d0             	movzx  edx,al
  1003bc:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
  1003bf:	8b 00                	mov    eax,DWORD PTR [eax]
  1003c1:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
  1003c5:	c7 44 24 04 10 00 00 	mov    DWORD PTR [esp+0x4],0x10
  1003cc:	00 
  1003cd:	89 04 24             	mov    DWORD PTR [esp],eax
  1003d0:	e8 ae 00 00 00       	call   100483 <dprintnum>
				args++;
  1003d5:	83 45 f4 04          	add    DWORD PTR [ebp-0xc],0x4
				break;
  1003d9:	eb 2f                	jmp    10040a <dprint+0x134>
			}

		} else {
			dprintchar(*chr, 0, 0, 0);
  1003db:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1003de:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  1003e1:	0f be c0             	movsx  eax,al
  1003e4:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
  1003eb:	00 
  1003ec:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  1003f3:	00 
  1003f4:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  1003fb:	00 
  1003fc:	89 04 24             	mov    DWORD PTR [esp],eax
  1003ff:	e8 43 00 00 00       	call   100447 <dprintchar>
  100404:	eb 04                	jmp    10040a <dprint+0x134>
				break;

			case 'X':
				dprintnum(*args, 16, DLARGECHARS);
				args++;
				break;
  100406:	90                   	nop
  100407:	eb 01                	jmp    10040a <dprint+0x134>
  100409:	90                   	nop

		} else {
			dprintchar(*chr, 0, 0, 0);
		}

		chr++;
  10040a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10040d:	83 c0 01             	add    eax,0x1
  100410:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax
 */
void dprint(const char *chr, ...) {

	int *args = (int *) (&chr + 1);

	while (*chr != 0) {
  100413:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100416:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100419:	84 c0                	test   al,al
  10041b:	0f 85 c9 fe ff ff    	jne    1002ea <dprint+0x14>
		}

		chr++;
	}

	dprintchar('\n', 0, 0, 0);
  100421:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
  100428:	00 
  100429:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  100430:	00 
  100431:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  100438:	00 
  100439:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [esp],0xa
  100440:	e8 02 00 00 00       	call   100447 <dprintchar>
}
  100445:	c9                   	leave  
  100446:	c3                   	ret    

00100447 <dprintchar>:

/*
 *
 */
void dprintchar(const char chr, byte color, byte x, byte y) {
  100447:	55                   	push   ebp
  100448:	89 e5                	mov    ebp,esp
  10044a:	53                   	push   ebx
  10044b:	83 ec 18             	sub    esp,0x18
  10044e:	8b 5d 08             	mov    ebx,DWORD PTR [ebp+0x8]
  100451:	8b 4d 0c             	mov    ecx,DWORD PTR [ebp+0xc]
  100454:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
  100457:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
  10045a:	88 5d f8             	mov    BYTE PTR [ebp-0x8],bl
  10045d:	88 4d f4             	mov    BYTE PTR [ebp-0xc],cl
  100460:	88 55 f0             	mov    BYTE PTR [ebp-0x10],dl
  100463:	88 45 ec             	mov    BYTE PTR [ebp-0x14],al

	outb(0x3F8, chr);
  100466:	0f b6 45 f8          	movzx  eax,BYTE PTR [ebp-0x8]
  10046a:	0f b6 c0             	movzx  eax,al
  10046d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  100471:	c7 04 24 f8 03 00 00 	mov    DWORD PTR [esp],0x3f8
  100478:	e8 3b fe ff ff       	call   1002b8 <outb>
}
  10047d:	83 c4 18             	add    esp,0x18
  100480:	5b                   	pop    ebx
  100481:	5d                   	pop    ebp
  100482:	c3                   	ret    

00100483 <dprintnum>:

/*
 *
 */
void dprintnum(int num, uint16 base, byte flag) {
  100483:	55                   	push   ebp
  100484:	89 e5                	mov    ebp,esp
  100486:	81 ec 8c 00 00 00    	sub    esp,0x8c
  10048c:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
  10048f:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  100492:	66 89 55 8c          	mov    WORD PTR [ebp-0x74],dx
  100496:	88 45 88             	mov    BYTE PTR [ebp-0x78],al

	const char *digits;
	static const char small_digits[] = "0123456789abcdefghijklmnopqrstuvwxyz";
	static const char large_digits[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

	if (flag & DLARGECHARS)
  100499:	0f b6 05 20 11 10 00 	movzx  eax,BYTE PTR ds:0x101120
  1004a0:	22 45 88             	and    al,BYTE PTR [ebp-0x78]
  1004a3:	84 c0                	test   al,al
  1004a5:	74 09                	je     1004b0 <dprintnum+0x2d>
		digits = large_digits;
  1004a7:	c7 45 fc c0 11 10 00 	mov    DWORD PTR [ebp-0x4],0x1011c0
  1004ae:	eb 07                	jmp    1004b7 <dprintnum+0x34>
	else
		digits = small_digits;
  1004b0:	c7 45 fc 00 12 10 00 	mov    DWORD PTR [ebp-0x4],0x101200

	if (base < 2 || base > 36)
  1004b7:	66 83 7d 8c 01       	cmp    WORD PTR [ebp-0x74],0x1
  1004bc:	0f 86 9e 00 00 00    	jbe    100560 <dprintnum+0xdd>
  1004c2:	66 83 7d 8c 24       	cmp    WORD PTR [ebp-0x74],0x24
  1004c7:	0f 87 96 00 00 00    	ja     100563 <dprintnum+0xe0>
		return;

	int i = 0;
  1004cd:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
	char out[100];

	if (num == 0) {
  1004d4:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  1004d8:	75 46                	jne    100520 <dprintnum+0x9d>
		out[i] = '0';
  1004da:	8d 45 94             	lea    eax,[ebp-0x6c]
  1004dd:	03 45 f8             	add    eax,DWORD PTR [ebp-0x8]
  1004e0:	c6 00 30             	mov    BYTE PTR [eax],0x30
		i++;
  1004e3:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
			out[i] = digits[num % base];
			i++;
			num = num / base;
		}

	while (i != 0) {
  1004e7:	eb 6f                	jmp    100558 <dprintnum+0xd5>
	if (num == 0) {
		out[i] = '0';
		i++;
	} else
		while (num != 0) {
			out[i] = digits[num % base];
  1004e9:	0f b7 4d 8c          	movzx  ecx,WORD PTR [ebp-0x74]
  1004ed:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1004f0:	89 c2                	mov    edx,eax
  1004f2:	c1 fa 1f             	sar    edx,0x1f
  1004f5:	f7 f9                	idiv   ecx
  1004f7:	89 d0                	mov    eax,edx
  1004f9:	03 45 fc             	add    eax,DWORD PTR [ebp-0x4]
  1004fc:	0f b6 10             	movzx  edx,BYTE PTR [eax]
  1004ff:	8d 45 94             	lea    eax,[ebp-0x6c]
  100502:	03 45 f8             	add    eax,DWORD PTR [ebp-0x8]
  100505:	88 10                	mov    BYTE PTR [eax],dl
			i++;
  100507:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
			num = num / base;
  10050b:	0f b7 45 8c          	movzx  eax,WORD PTR [ebp-0x74]
  10050f:	89 45 84             	mov    DWORD PTR [ebp-0x7c],eax
  100512:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100515:	89 c2                	mov    edx,eax
  100517:	c1 fa 1f             	sar    edx,0x1f
  10051a:	f7 7d 84             	idiv   DWORD PTR [ebp-0x7c]
  10051d:	89 45 08             	mov    DWORD PTR [ebp+0x8],eax

	if (num == 0) {
		out[i] = '0';
		i++;
	} else
		while (num != 0) {
  100520:	83 7d 08 00          	cmp    DWORD PTR [ebp+0x8],0x0
  100524:	75 c3                	jne    1004e9 <dprintnum+0x66>
			out[i] = digits[num % base];
			i++;
			num = num / base;
		}

	while (i != 0) {
  100526:	eb 30                	jmp    100558 <dprintnum+0xd5>
		i--;
  100528:	83 6d f8 01          	sub    DWORD PTR [ebp-0x8],0x1
		dprintchar(out[i], 0, 0, 0);
  10052c:	8d 45 94             	lea    eax,[ebp-0x6c]
  10052f:	03 45 f8             	add    eax,DWORD PTR [ebp-0x8]
  100532:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100535:	0f be c0             	movsx  eax,al
  100538:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
  10053f:	00 
  100540:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  100547:	00 
  100548:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  10054f:	00 
  100550:	89 04 24             	mov    DWORD PTR [esp],eax
  100553:	e8 ef fe ff ff       	call   100447 <dprintchar>
			out[i] = digits[num % base];
			i++;
			num = num / base;
		}

	while (i != 0) {
  100558:	83 7d f8 00          	cmp    DWORD PTR [ebp-0x8],0x0
  10055c:	75 ca                	jne    100528 <dprintnum+0xa5>
  10055e:	eb 04                	jmp    100564 <dprintnum+0xe1>
		digits = large_digits;
	else
		digits = small_digits;

	if (base < 2 || base > 36)
		return;
  100560:	90                   	nop
  100561:	eb 01                	jmp    100564 <dprintnum+0xe1>
  100563:	90                   	nop

	while (i != 0) {
		i--;
		dprintchar(out[i], 0, 0, 0);
	}
}
  100564:	c9                   	leave  
  100565:	c3                   	ret    
	...

00100568 <inb>:

/*
 *
 */
static inline uint8 inb(uint16 port)
{
  100568:	55                   	push   ebp
  100569:	89 e5                	mov    ebp,esp
  10056b:	53                   	push   ebx
  10056c:	83 ec 18             	sub    esp,0x18
  10056f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100572:	66 89 45 e8          	mov    WORD PTR [ebp-0x18],ax
   uint8 return_val;
   __asm__ __volatile__ (
  100576:	0f b7 45 e8          	movzx  eax,WORD PTR [ebp-0x18]
  10057a:	66 89 45 e6          	mov    WORD PTR [ebp-0x1a],ax
  10057e:	0f b7 55 e6          	movzx  edx,WORD PTR [ebp-0x1a]
  100582:	ec                   	in     al,dx
  100583:	89 c3                	mov    ebx,eax
  100585:	88 5d fb             	mov    BYTE PTR [ebp-0x5],bl
   "inb %1,%0"
   : "=a"(return_val)
   : "d"(port));

   return return_val;
  100588:	0f b6 45 fb          	movzx  eax,BYTE PTR [ebp-0x5]
}
  10058c:	83 c4 18             	add    esp,0x18
  10058f:	5b                   	pop    ebx
  100590:	5d                   	pop    ebp
  100591:	c3                   	ret    

00100592 <outb>:

/*
 *
 */
static inline void outb(uint16 port, uint8 val)
{
  100592:	55                   	push   ebp
  100593:	89 e5                	mov    ebp,esp
  100595:	83 ec 08             	sub    esp,0x8
  100598:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  10059b:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  10059e:	66 89 55 fc          	mov    WORD PTR [ebp-0x4],dx
  1005a2:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al
   __asm__ __volatile__ (
  1005a5:	0f b6 45 f8          	movzx  eax,BYTE PTR [ebp-0x8]
  1005a9:	0f b7 55 fc          	movzx  edx,WORD PTR [ebp-0x4]
  1005ad:	ee                   	out    dx,al
   "outb %b0, %w1"
   :
   : "a"(val), "d"(port));
}
  1005ae:	c9                   	leave  
  1005af:	c3                   	ret    

001005b0 <SerialPort_Initialize>:

/*
 *
 */
void SerialPort_Initialize(SerialPort *self, uint16 base, uint16 baud,
		byte parity, byte bits) {
  1005b0:	55                   	push   ebp
  1005b1:	89 e5                	mov    ebp,esp
  1005b3:	53                   	push   ebx
  1005b4:	83 ec 2c             	sub    esp,0x2c
  1005b7:	8b 5d 0c             	mov    ebx,DWORD PTR [ebp+0xc]
  1005ba:	8b 4d 10             	mov    ecx,DWORD PTR [ebp+0x10]
  1005bd:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
  1005c0:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
  1005c3:	66 89 5d e8          	mov    WORD PTR [ebp-0x18],bx
  1005c7:	66 89 4d e4          	mov    WORD PTR [ebp-0x1c],cx
  1005cb:	88 55 e0             	mov    BYTE PTR [ebp-0x20],dl
  1005ce:	88 45 dc             	mov    BYTE PTR [ebp-0x24],al

	// Store configuration
	self->m_base = base;
  1005d1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1005d4:	0f b7 55 e8          	movzx  edx,WORD PTR [ebp-0x18]
  1005d8:	66 89 10             	mov    WORD PTR [eax],dx
	self->m_baud = baud;
  1005db:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1005de:	0f b7 55 e4          	movzx  edx,WORD PTR [ebp-0x1c]
  1005e2:	66 89 50 02          	mov    WORD PTR [eax+0x2],dx
	self->m_parity = parity;
  1005e6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1005e9:	0f b6 55 e0          	movzx  edx,BYTE PTR [ebp-0x20]
  1005ed:	88 50 04             	mov    BYTE PTR [eax+0x4],dl
	self->m_bits = bits;
  1005f0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1005f3:	0f b6 55 dc          	movzx  edx,BYTE PTR [ebp-0x24]
  1005f7:	88 50 05             	mov    BYTE PTR [eax+0x5],dl
	union {
		uint8 b[2];
		uint16 w;
	} divisor;

	divisor.w = 115200 / baud;
  1005fa:	0f b7 45 e4          	movzx  eax,WORD PTR [ebp-0x1c]
  1005fe:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
  100601:	b8 00 c2 01 00       	mov    eax,0x1c200
  100606:	89 c2                	mov    edx,eax
  100608:	c1 fa 1f             	sar    edx,0x1f
  10060b:	f7 7d d8             	idiv   DWORD PTR [ebp-0x28]
  10060e:	66 89 45 fa          	mov    WORD PTR [ebp-0x6],ax

	// Disable all interrupts
	outb(self->m_base + IER, 0x00);
  100612:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100615:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100618:	83 c0 01             	add    eax,0x1
  10061b:	0f b7 c0             	movzx  eax,ax
  10061e:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  100625:	00 
  100626:	89 04 24             	mov    DWORD PTR [esp],eax
  100629:	e8 64 ff ff ff       	call   100592 <outb>

	// Set DLAP bit
	outb(self->m_base + LCR, 0x80);
  10062e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100631:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100634:	83 c0 03             	add    eax,0x3
  100637:	0f b7 c0             	movzx  eax,ax
  10063a:	c7 44 24 04 80 00 00 	mov    DWORD PTR [esp+0x4],0x80
  100641:	00 
  100642:	89 04 24             	mov    DWORD PTR [esp],eax
  100645:	e8 48 ff ff ff       	call   100592 <outb>

	// Set divisor (low)
	//outb(self->base, divisor.b[0]);
	outb(self->m_base, 0x03);
  10064a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10064d:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100650:	0f b7 c0             	movzx  eax,ax
  100653:	c7 44 24 04 03 00 00 	mov    DWORD PTR [esp+0x4],0x3
  10065a:	00 
  10065b:	89 04 24             	mov    DWORD PTR [esp],eax
  10065e:	e8 2f ff ff ff       	call   100592 <outb>

	// Set divisor (high)
	//outb(self->base + 1, divisor.b[1]);
	outb(self->m_base + 1, 0x00);
  100663:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100666:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100669:	83 c0 01             	add    eax,0x1
  10066c:	0f b7 c0             	movzx  eax,ax
  10066f:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  100676:	00 
  100677:	89 04 24             	mov    DWORD PTR [esp],eax
  10067a:	e8 13 ff ff ff       	call   100592 <outb>

	// Set amount of bits, parity, .. and reset DLAB
	//outb(self->base + LCR, ((parity & 0x7) << 3) | ((bits - 5) & 0x3));
	outb(self->m_base + LCR, 0x03);
  10067f:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100682:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100685:	83 c0 03             	add    eax,0x3
  100688:	0f b7 c0             	movzx  eax,ax
  10068b:	c7 44 24 04 03 00 00 	mov    DWORD PTR [esp+0x4],0x3
  100692:	00 
  100693:	89 04 24             	mov    DWORD PTR [esp],eax
  100696:	e8 f7 fe ff ff       	call   100592 <outb>

	// Complete initialization
	outb(base + FCR, 0xC7);
  10069b:	0f b7 45 e8          	movzx  eax,WORD PTR [ebp-0x18]
  10069f:	83 c0 02             	add    eax,0x2
  1006a2:	0f b7 c0             	movzx  eax,ax
  1006a5:	c7 44 24 04 c7 00 00 	mov    DWORD PTR [esp+0x4],0xc7
  1006ac:	00 
  1006ad:	89 04 24             	mov    DWORD PTR [esp],eax
  1006b0:	e8 dd fe ff ff       	call   100592 <outb>
	outb(base + MCR, 0x0B);
  1006b5:	0f b7 45 e8          	movzx  eax,WORD PTR [ebp-0x18]
  1006b9:	83 c0 04             	add    eax,0x4
  1006bc:	0f b7 c0             	movzx  eax,ax
  1006bf:	c7 44 24 04 0b 00 00 	mov    DWORD PTR [esp+0x4],0xb
  1006c6:	00 
  1006c7:	89 04 24             	mov    DWORD PTR [esp],eax
  1006ca:	e8 c3 fe ff ff       	call   100592 <outb>
}
  1006cf:	83 c4 2c             	add    esp,0x2c
  1006d2:	5b                   	pop    ebx
  1006d3:	5d                   	pop    ebp
  1006d4:	c3                   	ret    

001006d5 <SerialPort_Read>:

/*
 *
 */
uint8 SerialPort_Read(SerialPort *self) {
  1006d5:	55                   	push   ebp
  1006d6:	89 e5                	mov    ebp,esp
  1006d8:	83 ec 18             	sub    esp,0x18
	while (SerialPort_Received(self)) { /* Do nothing */
  1006db:	90                   	nop
  1006dc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1006df:	89 04 24             	mov    DWORD PTR [esp],eax
  1006e2:	e8 4e 00 00 00       	call   100735 <SerialPort_Received>
  1006e7:	84 c0                	test   al,al
  1006e9:	75 f1                	jne    1006dc <SerialPort_Read+0x7>
	}

	return inb(self->m_base);
  1006eb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1006ee:	0f b7 00             	movzx  eax,WORD PTR [eax]
  1006f1:	0f b7 c0             	movzx  eax,ax
  1006f4:	89 04 24             	mov    DWORD PTR [esp],eax
  1006f7:	e8 6c fe ff ff       	call   100568 <inb>
}
  1006fc:	c9                   	leave  
  1006fd:	c3                   	ret    

001006fe <SerialPort_Write>:

/*
 *
 */
void SerialPort_Write(SerialPort *self, byte bits) {
  1006fe:	55                   	push   ebp
  1006ff:	89 e5                	mov    ebp,esp
  100701:	83 ec 28             	sub    esp,0x28
  100704:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100707:	88 45 f4             	mov    BYTE PTR [ebp-0xc],al
	while (SerialPort_TransmitEmpty(self) == 0) { /* Do nothing */
  10070a:	90                   	nop
  10070b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10070e:	89 04 24             	mov    DWORD PTR [esp],eax
  100711:	e8 3e 00 00 00       	call   100754 <SerialPort_TransmitEmpty>
  100716:	84 c0                	test   al,al
  100718:	74 f1                	je     10070b <SerialPort_Write+0xd>
	}

	outb(self->m_base, bits);
  10071a:	0f b6 55 f4          	movzx  edx,BYTE PTR [ebp-0xc]
  10071e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100721:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100724:	0f b7 c0             	movzx  eax,ax
  100727:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
  10072b:	89 04 24             	mov    DWORD PTR [esp],eax
  10072e:	e8 5f fe ff ff       	call   100592 <outb>
}
  100733:	c9                   	leave  
  100734:	c3                   	ret    

00100735 <SerialPort_Received>:

/*
 *
 */
uint8 SerialPort_Received(SerialPort *self) {
  100735:	55                   	push   ebp
  100736:	89 e5                	mov    ebp,esp
  100738:	83 ec 04             	sub    esp,0x4
	return inb(self->m_base + LSR) & 0x1;
  10073b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10073e:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100741:	83 c0 05             	add    eax,0x5
  100744:	0f b7 c0             	movzx  eax,ax
  100747:	89 04 24             	mov    DWORD PTR [esp],eax
  10074a:	e8 19 fe ff ff       	call   100568 <inb>
  10074f:	83 e0 01             	and    eax,0x1
}
  100752:	c9                   	leave  
  100753:	c3                   	ret    

00100754 <SerialPort_TransmitEmpty>:

/*
 *
 */
uint8 SerialPort_TransmitEmpty(SerialPort *self) {
  100754:	55                   	push   ebp
  100755:	89 e5                	mov    ebp,esp
  100757:	83 ec 04             	sub    esp,0x4
	return inb(self->m_base + LSR) & 0x20;
  10075a:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10075d:	0f b7 00             	movzx  eax,WORD PTR [eax]
  100760:	83 c0 05             	add    eax,0x5
  100763:	0f b7 c0             	movzx  eax,ax
  100766:	89 04 24             	mov    DWORD PTR [esp],eax
  100769:	e8 fa fd ff ff       	call   100568 <inb>
  10076e:	83 e0 20             	and    eax,0x20
}
  100771:	c9                   	leave  
  100772:	c3                   	ret    
	...

00100780 <Gdt_Flush>:
  100780:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
  100784:	0f 01 10             	lgdtd  [eax]
  100787:	66 b8 10 00          	mov    ax,0x10
  10078b:	8e d8                	mov    ds,eax
  10078d:	8e c0                	mov    es,eax
  10078f:	8e e0                	mov    fs,eax
  100791:	8e e8                	mov    gs,eax
  100793:	8e d0                	mov    ss,eax
  100795:	ea 9c 07 10 00 08 00 	jmp    0x8:0x10079c

0010079c <Gdt_Flush.flush>:
  10079c:	c3                   	ret    

0010079d <Idt_Flush>:
  10079d:	8b 44 24 04          	mov    eax,DWORD PTR [esp+0x4]
  1007a1:	0f 01 18             	lidtd  [eax]
  1007a4:	c3                   	ret    
  1007a5:	00 00                	add    BYTE PTR [eax],al
	...

001007a8 <Gdt_Init>:
#include "../include/GlobalDescriptorTable.h"




void Gdt_Init() {
  1007a8:	55                   	push   ebp
  1007a9:	89 e5                	mov    ebp,esp
  1007ab:	83 ec 08             	sub    esp,0x8

	Gdt_InstallEntries();
  1007ae:	e8 86 00 00 00       	call   100839 <Gdt_InstallEntries>
}
  1007b3:	c9                   	leave  
  1007b4:	c3                   	ret    

001007b5 <Gdt_SetEntry>:

/*
 *
 */
static void Gdt_SetEntry(uint32 index, uint32 base, uint32 limit, uint8 access,
		uint8 gran) {
  1007b5:	55                   	push   ebp
  1007b6:	89 e5                	mov    ebp,esp
  1007b8:	83 ec 08             	sub    esp,0x8
  1007bb:	8b 55 14             	mov    edx,DWORD PTR [ebp+0x14]
  1007be:	8b 45 18             	mov    eax,DWORD PTR [ebp+0x18]
  1007c1:	88 55 fc             	mov    BYTE PTR [ebp-0x4],dl
  1007c4:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al

	gdt.entry[index].limit_low = (limit & 0xFFFF);
  1007c7:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  1007ca:	89 c2                	mov    edx,eax
  1007cc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1007cf:	66 89 14 c5 00 20 10 	mov    WORD PTR [eax*8+0x102000],dx
  1007d6:	00 

	gdt.entry[index].base_low = (base & 0xFFFF);
  1007d7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1007da:	89 c2                	mov    edx,eax
  1007dc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1007df:	66 89 14 c5 02 20 10 	mov    WORD PTR [eax*8+0x102002],dx
  1007e6:	00 

	gdt.entry[index].base_middle = (base >> 16) & 0xFF;
  1007e7:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  1007ea:	c1 e8 10             	shr    eax,0x10
  1007ed:	89 c2                	mov    edx,eax
  1007ef:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1007f2:	88 14 c5 04 20 10 00 	mov    BYTE PTR [eax*8+0x102004],dl

	gdt.entry[index].access = access;
  1007f9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1007fc:	0f b6 55 fc          	movzx  edx,BYTE PTR [ebp-0x4]
  100800:	88 14 c5 05 20 10 00 	mov    BYTE PTR [eax*8+0x102005],dl

	gdt.entry[index].granularity = ((limit >> 16) & 0x0F) | ((gran << 4) & 0xF0);
  100807:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  10080a:	c1 e8 10             	shr    eax,0x10
  10080d:	89 c2                	mov    edx,eax
  10080f:	83 e2 0f             	and    edx,0xf
  100812:	0f b6 45 f8          	movzx  eax,BYTE PTR [ebp-0x8]
  100816:	c1 e0 04             	shl    eax,0x4
  100819:	09 c2                	or     edx,eax
  10081b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10081e:	88 14 c5 06 20 10 00 	mov    BYTE PTR [eax*8+0x102006],dl

	gdt.entry[index].base_high = (base >> 24) & 0xFF;
  100825:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100828:	c1 e8 18             	shr    eax,0x18
  10082b:	89 c2                	mov    edx,eax
  10082d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100830:	88 14 c5 07 20 10 00 	mov    BYTE PTR [eax*8+0x102007],dl
}
  100837:	c9                   	leave  
  100838:	c3                   	ret    

00100839 <Gdt_InstallEntries>:

/*
 *
 */
static void Gdt_InstallEntries() {
  100839:	55                   	push   ebp
  10083a:	89 e5                	mov    ebp,esp
  10083c:	83 ec 28             	sub    esp,0x28

	dprint("[GDT] Initializing GDT");
  10083f:	c7 04 24 29 12 10 00 	mov    DWORD PTR [esp],0x101229
  100846:	e8 8b fa ff ff       	call   1002d6 <dprint>

	gdt_ptr.limit = (GDT_ENTRIES * sizeof(gdt_entry)) - 1;
  10084b:	66 c7 05 28 20 10 00 	mov    WORD PTR ds:0x102028,0x27
  100852:	27 00 
	gdt_ptr.base = (int) &gdt.entry[0];
  100854:	b8 00 20 10 00       	mov    eax,0x102000
  100859:	a3 2a 20 10 00       	mov    ds:0x10202a,eax

	Gdt_SetEntry(0, 0, 0, 0, 0);
  10085e:	c7 44 24 10 00 00 00 	mov    DWORD PTR [esp+0x10],0x0
  100865:	00 
  100866:	c7 44 24 0c 00 00 00 	mov    DWORD PTR [esp+0xc],0x0
  10086d:	00 
  10086e:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  100875:	00 
  100876:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  10087d:	00 
  10087e:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
  100885:	e8 2b ff ff ff       	call   1007b5 <Gdt_SetEntry>
	Gdt_SetEntry(1, 0, 0xFFFFFFFF, GDT_ACC_R0_CODE, GDT_FLG);
  10088a:	c7 44 24 10 0c 00 00 	mov    DWORD PTR [esp+0x10],0xc
  100891:	00 
  100892:	c7 44 24 0c 9a 00 00 	mov    DWORD PTR [esp+0xc],0x9a
  100899:	00 
  10089a:	c7 44 24 08 ff ff ff 	mov    DWORD PTR [esp+0x8],0xffffffff
  1008a1:	ff 
  1008a2:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  1008a9:	00 
  1008aa:	c7 04 24 01 00 00 00 	mov    DWORD PTR [esp],0x1
  1008b1:	e8 ff fe ff ff       	call   1007b5 <Gdt_SetEntry>
	Gdt_SetEntry(2, 0, 0xFFFFFFFF, GDT_ACC_R0_DATA, GDT_FLG);
  1008b6:	c7 44 24 10 0c 00 00 	mov    DWORD PTR [esp+0x10],0xc
  1008bd:	00 
  1008be:	c7 44 24 0c 92 00 00 	mov    DWORD PTR [esp+0xc],0x92
  1008c5:	00 
  1008c6:	c7 44 24 08 ff ff ff 	mov    DWORD PTR [esp+0x8],0xffffffff
  1008cd:	ff 
  1008ce:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  1008d5:	00 
  1008d6:	c7 04 24 02 00 00 00 	mov    DWORD PTR [esp],0x2
  1008dd:	e8 d3 fe ff ff       	call   1007b5 <Gdt_SetEntry>
	Gdt_SetEntry(3, 0, 0xFFFFFFFF, GDT_ACC_R3_CODE, GDT_FLG);
  1008e2:	c7 44 24 10 0c 00 00 	mov    DWORD PTR [esp+0x10],0xc
  1008e9:	00 
  1008ea:	c7 44 24 0c fa 00 00 	mov    DWORD PTR [esp+0xc],0xfa
  1008f1:	00 
  1008f2:	c7 44 24 08 ff ff ff 	mov    DWORD PTR [esp+0x8],0xffffffff
  1008f9:	ff 
  1008fa:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  100901:	00 
  100902:	c7 04 24 03 00 00 00 	mov    DWORD PTR [esp],0x3
  100909:	e8 a7 fe ff ff       	call   1007b5 <Gdt_SetEntry>
	Gdt_SetEntry(4, 0, 0xFFFFFFFF, GDT_ACC_R3_DATA, GDT_FLG);
  10090e:	c7 44 24 10 0c 00 00 	mov    DWORD PTR [esp+0x10],0xc
  100915:	00 
  100916:	c7 44 24 0c f2 00 00 	mov    DWORD PTR [esp+0xc],0xf2
  10091d:	00 
  10091e:	c7 44 24 08 ff ff ff 	mov    DWORD PTR [esp+0x8],0xffffffff
  100925:	ff 
  100926:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
  10092d:	00 
  10092e:	c7 04 24 04 00 00 00 	mov    DWORD PTR [esp],0x4
  100935:	e8 7b fe ff ff       	call   1007b5 <Gdt_SetEntry>

	dprint("[GDT] sizeof gdt_entry %d Bytes", sizeof(gdt_entry));
  10093a:	c7 44 24 04 08 00 00 	mov    DWORD PTR [esp+0x4],0x8
  100941:	00 
  100942:	c7 04 24 40 12 10 00 	mov    DWORD PTR [esp],0x101240
  100949:	e8 88 f9 ff ff       	call   1002d6 <dprint>
	dprint("[GDT] gdt_ptr.base 0x%X", gdt_ptr.base);
  10094e:	a1 2a 20 10 00       	mov    eax,ds:0x10202a
  100953:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  100957:	c7 04 24 60 12 10 00 	mov    DWORD PTR [esp],0x101260
  10095e:	e8 73 f9 ff ff       	call   1002d6 <dprint>
	dprint("[GDT] gdt_ptr.limit 0x%X (GDT size %d Bytes)", gdt_ptr.limit,
			gdt_ptr.limit + 1);
  100963:	0f b7 05 28 20 10 00 	movzx  eax,WORD PTR ds:0x102028
	Gdt_SetEntry(3, 0, 0xFFFFFFFF, GDT_ACC_R3_CODE, GDT_FLG);
	Gdt_SetEntry(4, 0, 0xFFFFFFFF, GDT_ACC_R3_DATA, GDT_FLG);

	dprint("[GDT] sizeof gdt_entry %d Bytes", sizeof(gdt_entry));
	dprint("[GDT] gdt_ptr.base 0x%X", gdt_ptr.base);
	dprint("[GDT] gdt_ptr.limit 0x%X (GDT size %d Bytes)", gdt_ptr.limit,
  10096a:	0f b7 c0             	movzx  eax,ax
  10096d:	8d 50 01             	lea    edx,[eax+0x1]
  100970:	0f b7 05 28 20 10 00 	movzx  eax,WORD PTR ds:0x102028
  100977:	0f b7 c0             	movzx  eax,ax
  10097a:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
  10097e:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  100982:	c7 04 24 78 12 10 00 	mov    DWORD PTR [esp],0x101278
  100989:	e8 48 f9 ff ff       	call   1002d6 <dprint>
			gdt_ptr.limit + 1);
	dprint("[GDT] entry 1 0x%X", &gdt.entry[0]);
  10098e:	c7 44 24 04 00 20 10 	mov    DWORD PTR [esp+0x4],0x102000
  100995:	00 
  100996:	c7 04 24 a5 12 10 00 	mov    DWORD PTR [esp],0x1012a5
  10099d:	e8 34 f9 ff ff       	call   1002d6 <dprint>
	dprint("[GDT] entry 2 0x%X", &gdt.entry[1]);
  1009a2:	c7 44 24 04 08 20 10 	mov    DWORD PTR [esp+0x4],0x102008
  1009a9:	00 
  1009aa:	c7 04 24 b8 12 10 00 	mov    DWORD PTR [esp],0x1012b8
  1009b1:	e8 20 f9 ff ff       	call   1002d6 <dprint>
	dprint("[GDT] entry 3 0x%X", &gdt.entry[2]);
  1009b6:	c7 44 24 04 10 20 10 	mov    DWORD PTR [esp+0x4],0x102010
  1009bd:	00 
  1009be:	c7 04 24 cb 12 10 00 	mov    DWORD PTR [esp],0x1012cb
  1009c5:	e8 0c f9 ff ff       	call   1002d6 <dprint>
	dprint("[GDT] entry 4 0x%X", &gdt.entry[3]);
  1009ca:	c7 44 24 04 18 20 10 	mov    DWORD PTR [esp+0x4],0x102018
  1009d1:	00 
  1009d2:	c7 04 24 de 12 10 00 	mov    DWORD PTR [esp],0x1012de
  1009d9:	e8 f8 f8 ff ff       	call   1002d6 <dprint>
	dprint("[GDT] entry 5 0x%X", &gdt.entry[4]);
  1009de:	c7 44 24 04 20 20 10 	mov    DWORD PTR [esp+0x4],0x102020
  1009e5:	00 
  1009e6:	c7 04 24 f1 12 10 00 	mov    DWORD PTR [esp],0x1012f1
  1009ed:	e8 e4 f8 ff ff       	call   1002d6 <dprint>

	Gdt_Flush((uint32) &gdt_ptr);
  1009f2:	b8 28 20 10 00       	mov    eax,0x102028
  1009f7:	89 04 24             	mov    DWORD PTR [esp],eax
  1009fa:	e8 81 fd ff ff       	call   100780 <Gdt_Flush>

	dprint("[GDT] Returning from Gdt_Flush()");
  1009ff:	c7 04 24 04 13 10 00 	mov    DWORD PTR [esp],0x101304
  100a06:	e8 cb f8 ff ff       	call   1002d6 <dprint>
}
  100a0b:	c9                   	leave  
  100a0c:	c3                   	ret    
  100a0d:	00 00                	add    BYTE PTR [eax],al
	...

00100a10 <_start>:
  100a10:	bc 30 40 10 00       	mov    esp,0x104030
  100a15:	e8 b2 00 00 00       	call   100acc <startup>

00100a1a <_stop>:
  100a1a:	fa                   	cli    
  100a1b:	f4                   	hlt    
  100a1c:	eb fc                	jmp    100a1a <_stop>
	...

00100a20 <Idt_Init>:

/*
 *
 */
void Idt_Init()
{
  100a20:	55                   	push   ebp
  100a21:	89 e5                	mov    ebp,esp
  100a23:	83 ec 08             	sub    esp,0x8
	Idt_InstallEntries();
  100a26:	e8 6a 00 00 00       	call   100a95 <Idt_InstallEntries>
}
  100a2b:	c9                   	leave  
  100a2c:	c3                   	ret    

00100a2d <Idt_SetEntry>:

/*
 *
 */
static void Idt_SetEntry(uint8 index, uint32 base, uint16 sel, uint16 flags)
{
  100a2d:	55                   	push   ebp
  100a2e:	89 e5                	mov    ebp,esp
  100a30:	83 ec 0c             	sub    esp,0xc
  100a33:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
  100a36:	8b 55 10             	mov    edx,DWORD PTR [ebp+0x10]
  100a39:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
  100a3c:	88 4d fc             	mov    BYTE PTR [ebp-0x4],cl
  100a3f:	66 89 55 f8          	mov    WORD PTR [ebp-0x8],dx
  100a43:	66 89 45 f4          	mov    WORD PTR [ebp-0xc],ax
	idt.entry[index].base_lo = base & 0xFFFF;
  100a47:	0f b6 45 fc          	movzx  eax,BYTE PTR [ebp-0x4]
  100a4b:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
  100a4e:	66 89 14 c5 40 40 10 	mov    WORD PTR [eax*8+0x104040],dx
  100a55:	00 

	idt.entry[index].sel = sel;
  100a56:	0f b6 45 fc          	movzx  eax,BYTE PTR [ebp-0x4]
  100a5a:	0f b7 55 f8          	movzx  edx,WORD PTR [ebp-0x8]
  100a5e:	66 89 14 c5 42 40 10 	mov    WORD PTR [eax*8+0x104042],dx
  100a65:	00 

	idt.entry[index].ist = 0;
  100a66:	0f b6 45 fc          	movzx  eax,BYTE PTR [ebp-0x4]
  100a6a:	c6 04 c5 44 40 10 00 	mov    BYTE PTR [eax*8+0x104044],0x0
  100a71:	00 

	idt.entry[index].flags = flags;
  100a72:	0f b6 45 fc          	movzx  eax,BYTE PTR [ebp-0x4]
  100a76:	0f b7 55 f4          	movzx  edx,WORD PTR [ebp-0xc]
  100a7a:	88 14 c5 45 40 10 00 	mov    BYTE PTR [eax*8+0x104045],dl

	idt.entry[index].base_hi = (base >> 16) & 0xFFFF;
  100a81:	0f b6 45 fc          	movzx  eax,BYTE PTR [ebp-0x4]
  100a85:	8b 55 0c             	mov    edx,DWORD PTR [ebp+0xc]
  100a88:	c1 ea 10             	shr    edx,0x10
  100a8b:	66 89 14 c5 46 40 10 	mov    WORD PTR [eax*8+0x104046],dx
  100a92:	00 
}
  100a93:	c9                   	leave  
  100a94:	c3                   	ret    

00100a95 <Idt_InstallEntries>:

/*
 *
 */
static void Idt_InstallEntries()
{
  100a95:	55                   	push   ebp
  100a96:	89 e5                	mov    ebp,esp
  100a98:	83 ec 18             	sub    esp,0x18
	dprint("[IDT] Initializing IDT");
  100a9b:	c7 04 24 26 13 10 00 	mov    DWORD PTR [esp],0x101326
  100aa2:	e8 2f f8 ff ff       	call   1002d6 <dprint>

	idt_ptr.limit = (IDT_ENTRIES * sizeof(idt_entry)) - 1;
  100aa7:	66 c7 05 40 48 10 00 	mov    WORD PTR ds:0x104840,0x7ff
  100aae:	ff 07 
	idt_ptr.base = (int) &idt.entry[0];
  100ab0:	b8 40 40 10 00       	mov    eax,0x104040
  100ab5:	a3 42 48 10 00       	mov    ds:0x104842,eax

	// memset(&idt, 0, sizeof(idt_entry) * IDT_ENTRIES);

	// Idt_SetEntry(0, (uint32)isr0, 0x08, 0x8E);

	Idt_Flush((uint32) &idt_ptr);
  100aba:	b8 40 48 10 00       	mov    eax,0x104840
  100abf:	89 04 24             	mov    DWORD PTR [esp],eax
  100ac2:	e8 d6 fc ff ff       	call   10079d <Idt_Flush>
}
  100ac7:	c9                   	leave  
  100ac8:	c3                   	ret    
  100ac9:	00 00                	add    BYTE PTR [eax],al
	...

00100acc <startup>:
#include "../../../arch/x86/common/include/InterruptDescriptorTable.h"

/*
 * startup is called in boot.S and starts up nnOS
 */
void startup(void) {
  100acc:	55                   	push   ebp
  100acd:	89 e5                	mov    ebp,esp
  100acf:	83 ec 28             	sub    esp,0x28

	dprint("");
  100ad2:	c7 04 24 3f 13 10 00 	mov    DWORD PTR [esp],0x10133f
  100ad9:	e8 f8 f7 ff ff       	call   1002d6 <dprint>
	dprint("[DEBUG] Debug-Mode");
  100ade:	c7 04 24 40 13 10 00 	mov    DWORD PTR [esp],0x101340
  100ae5:	e8 ec f7 ff ff       	call   1002d6 <dprint>

	Terminal tm;
	Terminal_Initialize(&tm, LIGHTGREEN, BLACK);
  100aea:	c7 44 24 08 00 00 00 	mov    DWORD PTR [esp+0x8],0x0
  100af1:	00 
  100af2:	c7 44 24 04 0a 00 00 	mov    DWORD PTR [esp+0x4],0xa
  100af9:	00 
  100afa:	8d 45 ec             	lea    eax,[ebp-0x14]
  100afd:	89 04 24             	mov    DWORD PTR [esp],eax
  100b00:	e8 45 00 00 00       	call   100b4a <Terminal_Initialize>

	Gdt_Init();
  100b05:	e8 9e fc ff ff       	call   1007a8 <Gdt_Init>
	Idt_Init();
  100b0a:	e8 11 ff ff ff       	call   100a20 <Idt_Init>

	dprint("end reached and still alive..");
  100b0f:	c7 04 24 53 13 10 00 	mov    DWORD PTR [esp],0x101353
  100b16:	e8 bb f7 ff ff       	call   1002d6 <dprint>
	print("end reached and still alive..");
  100b1b:	c7 04 24 53 13 10 00 	mov    DWORD PTR [esp],0x101353
  100b22:	e8 e5 f4 ff ff       	call   10000c <print>

}
  100b27:	c9                   	leave  
  100b28:	c3                   	ret    
  100b29:	00 00                	add    BYTE PTR [eax],al
	...

00100b2c <outb>:

/*
 *
 */
static inline void outb(uint16 port, uint8 val)
{
  100b2c:	55                   	push   ebp
  100b2d:	89 e5                	mov    ebp,esp
  100b2f:	83 ec 08             	sub    esp,0x8
  100b32:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  100b35:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100b38:	66 89 55 fc          	mov    WORD PTR [ebp-0x4],dx
  100b3c:	88 45 f8             	mov    BYTE PTR [ebp-0x8],al
   __asm__ __volatile__ (
  100b3f:	0f b6 45 f8          	movzx  eax,BYTE PTR [ebp-0x8]
  100b43:	0f b7 55 fc          	movzx  edx,WORD PTR [ebp-0x4]
  100b47:	ee                   	out    dx,al
   "outb %b0, %w1"
   :
   : "a"(val), "d"(port));
}
  100b48:	c9                   	leave  
  100b49:	c3                   	ret    

00100b4a <Terminal_Initialize>:

/*
 *
 */
void Terminal_Initialize(Terminal *self, COLOR fontcolor, COLOR bgcolor)
{
  100b4a:	55                   	push   ebp
  100b4b:	89 e5                	mov    ebp,esp
  100b4d:	83 ec 18             	sub    esp,0x18
	self->m_position.x = 0;
  100b50:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100b53:	c6 00 00             	mov    BYTE PTR [eax],0x0
	self->m_position.y = 24;
  100b56:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100b59:	c6 40 01 18          	mov    BYTE PTR [eax+0x1],0x18
	self->m_fontcolor = fontcolor;
  100b5d:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  100b60:	89 c2                	mov    edx,eax
  100b62:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100b65:	88 50 08             	mov    BYTE PTR [eax+0x8],dl
	self->m_bgcolor = bgcolor;
  100b68:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  100b6b:	89 c2                	mov    edx,eax
  100b6d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100b70:	88 50 09             	mov    BYTE PTR [eax+0x9],dl

	Terminal_ClearContent(self);
  100b73:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100b76:	89 04 24             	mov    DWORD PTR [esp],eax
  100b79:	e8 0d 00 00 00       	call   100b8b <Terminal_ClearContent>
	Terminal_UpdateCursor(self);
  100b7e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100b81:	89 04 24             	mov    DWORD PTR [esp],eax
  100b84:	e8 69 00 00 00       	call   100bf2 <Terminal_UpdateCursor>
}
  100b89:	c9                   	leave  
  100b8a:	c3                   	ret    

00100b8b <Terminal_ClearContent>:

/*
 *
 */
void Terminal_ClearContent(Terminal *self)
{
  100b8b:	55                   	push   ebp
  100b8c:	89 e5                	mov    ebp,esp
  100b8e:	83 ec 10             	sub    esp,0x10
	int x, y;

	// Clear screen
	for(x = 0; x < MAXCOLS; x++) {
  100b91:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [ebp-0x4],0x0
  100b98:	eb 50                	jmp    100bea <Terminal_ClearContent+0x5f>
		for(y = 0; y < MAXROWDISPLAY; y++) {
  100b9a:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [ebp-0x8],0x0
  100ba1:	eb 3d                	jmp    100be0 <Terminal_ClearContent+0x55>
			self->m_content = ((uint16*) TERMINALBASE) + y * 80 + x;
  100ba3:	8b 55 f8             	mov    edx,DWORD PTR [ebp-0x8]
  100ba6:	89 d0                	mov    eax,edx
  100ba8:	c1 e0 02             	shl    eax,0x2
  100bab:	01 d0                	add    eax,edx
  100bad:	c1 e0 04             	shl    eax,0x4
  100bb0:	89 c2                	mov    edx,eax
  100bb2:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
  100bb5:	8d 04 02             	lea    eax,[edx+eax*1]
  100bb8:	01 c0                	add    eax,eax
  100bba:	8d 90 00 80 0b 00    	lea    edx,[eax+0xb8000]
  100bc0:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100bc3:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
			*self->m_content = (((uint16)self->m_fontcolor) << 8);
  100bc6:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100bc9:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
  100bcc:	8b 55 08             	mov    edx,DWORD PTR [ebp+0x8]
  100bcf:	0f b6 52 08          	movzx  edx,BYTE PTR [edx+0x8]
  100bd3:	0f b6 d2             	movzx  edx,dl
  100bd6:	c1 e2 08             	shl    edx,0x8
  100bd9:	66 89 10             	mov    WORD PTR [eax],dx
{
	int x, y;

	// Clear screen
	for(x = 0; x < MAXCOLS; x++) {
		for(y = 0; y < MAXROWDISPLAY; y++) {
  100bdc:	83 45 f8 01          	add    DWORD PTR [ebp-0x8],0x1
  100be0:	83 7d f8 18          	cmp    DWORD PTR [ebp-0x8],0x18
  100be4:	7e bd                	jle    100ba3 <Terminal_ClearContent+0x18>
void Terminal_ClearContent(Terminal *self)
{
	int x, y;

	// Clear screen
	for(x = 0; x < MAXCOLS; x++) {
  100be6:	83 45 fc 01          	add    DWORD PTR [ebp-0x4],0x1
  100bea:	83 7d fc 4f          	cmp    DWORD PTR [ebp-0x4],0x4f
  100bee:	7e aa                	jle    100b9a <Terminal_ClearContent+0xf>
		for(y = 0; y < MAXROWDISPLAY; y++) {
			self->m_content = ((uint16*) TERMINALBASE) + y * 80 + x;
			*self->m_content = (((uint16)self->m_fontcolor) << 8);
		}
	}
}
  100bf0:	c9                   	leave  
  100bf1:	c3                   	ret    

00100bf2 <Terminal_UpdateCursor>:

/*
 *
 */
void Terminal_UpdateCursor(Terminal *self)
{
  100bf2:	55                   	push   ebp
  100bf3:	89 e5                	mov    ebp,esp
  100bf5:	83 ec 18             	sub    esp,0x18
	unsigned short pos =  self->m_position.y * 80 + self->m_position.x;
  100bf8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100bfb:	0f b6 40 01          	movzx  eax,BYTE PTR [eax+0x1]
  100bff:	0f b6 d0             	movzx  edx,al
  100c02:	89 d0                	mov    eax,edx
  100c04:	c1 e0 02             	shl    eax,0x2
  100c07:	01 d0                	add    eax,edx
  100c09:	c1 e0 04             	shl    eax,0x4
  100c0c:	89 c2                	mov    edx,eax
  100c0e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  100c11:	0f b6 00             	movzx  eax,BYTE PTR [eax]
  100c14:	0f b6 c0             	movzx  eax,al
  100c17:	8d 04 02             	lea    eax,[edx+eax*1]
  100c1a:	66 89 45 fe          	mov    WORD PTR [ebp-0x2],ax

	// Cursor high-port to VGA index-register
	outb(0x3D4, 14);
  100c1e:	c7 44 24 04 0e 00 00 	mov    DWORD PTR [esp+0x4],0xe
  100c25:	00 
  100c26:	c7 04 24 d4 03 00 00 	mov    DWORD PTR [esp],0x3d4
  100c2d:	e8 fa fe ff ff       	call   100b2c <outb>
	outb(0x3D5, (byte)(pos >> 8) & 0xFF);
  100c32:	0f b7 45 fe          	movzx  eax,WORD PTR [ebp-0x2]
  100c36:	66 c1 e8 08          	shr    ax,0x8
  100c3a:	0f b6 c0             	movzx  eax,al
  100c3d:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  100c41:	c7 04 24 d5 03 00 00 	mov    DWORD PTR [esp],0x3d5
  100c48:	e8 df fe ff ff       	call   100b2c <outb>

	// Cursor low-port to VGA index-register
	outb(0x3D4, 15);
  100c4d:	c7 44 24 04 0f 00 00 	mov    DWORD PTR [esp+0x4],0xf
  100c54:	00 
  100c55:	c7 04 24 d4 03 00 00 	mov    DWORD PTR [esp],0x3d4
  100c5c:	e8 cb fe ff ff       	call   100b2c <outb>
	outb(0x3D5, (byte)(pos & 0xFF));
  100c61:	0f b7 45 fe          	movzx  eax,WORD PTR [ebp-0x2]
  100c65:	0f b6 c0             	movzx  eax,al
  100c68:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  100c6c:	c7 04 24 d5 03 00 00 	mov    DWORD PTR [esp],0x3d5
  100c73:	e8 b4 fe ff ff       	call   100b2c <outb>
}
  100c78:	c9                   	leave  
  100c79:	c3                   	ret    

Disassembly of section .rodata:

00101000 <LARGECHARS>:
  101000:	01 00                	add    DWORD PTR [eax],eax
  101002:	00 00                	add    BYTE PTR [eax],al
  101004:	ef                   	out    dx,eax
  101005:	00 10                	add    BYTE PTR [eax],dl
  101007:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10100a:	10 00                	adc    BYTE PTR [eax],al
  10100c:	48                   	dec    eax
  10100d:	01 10                	add    DWORD PTR [eax],edx
  10100f:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  101012:	10 00                	adc    BYTE PTR [eax],al
  101014:	48                   	dec    eax
  101015:	01 10                	add    DWORD PTR [eax],edx
  101017:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10101a:	10 00                	adc    BYTE PTR [eax],al
  10101c:	48                   	dec    eax
  10101d:	01 10                	add    DWORD PTR [eax],edx
  10101f:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  101022:	10 00                	adc    BYTE PTR [eax],al
  101024:	48                   	dec    eax
  101025:	01 10                	add    DWORD PTR [eax],edx
  101027:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10102a:	10 00                	adc    BYTE PTR [eax],al
  10102c:	5c                   	pop    esp
  10102d:	00 10                	add    BYTE PTR [eax],dl
  10102f:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  101032:	10 00                	adc    BYTE PTR [eax],al
  101034:	82                   	(bad)  
  101035:	00 10                	add    BYTE PTR [eax],dl
  101037:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10103a:	10 00                	adc    BYTE PTR [eax],al
  10103c:	48                   	dec    eax
  10103d:	01 10                	add    DWORD PTR [eax],edx
  10103f:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  101042:	10 00                	adc    BYTE PTR [eax],al
  101044:	48                   	dec    eax
  101045:	01 10                	add    DWORD PTR [eax],edx
  101047:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10104a:	10 00                	adc    BYTE PTR [eax],al
  10104c:	48                   	dec    eax
  10104d:	01 10                	add    DWORD PTR [eax],edx
  10104f:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  101052:	10 00                	adc    BYTE PTR [eax],al
  101054:	48                   	dec    eax
  101055:	01 10                	add    DWORD PTR [eax],edx
  101057:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10105a:	10 00                	adc    BYTE PTR [eax],al
  10105c:	48                   	dec    eax
  10105d:	01 10                	add    DWORD PTR [eax],edx
  10105f:	00 a8 00 10 00 48    	add    BYTE PTR [eax+0x48001000],ch
  101065:	01 10                	add    DWORD PTR [eax],edx
  101067:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10106a:	10 00                	adc    BYTE PTR [eax],al
  10106c:	48                   	dec    eax
  10106d:	01 10                	add    DWORD PTR [eax],edx
  10106f:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  101072:	10 00                	adc    BYTE PTR [eax],al
  101074:	48                   	dec    eax
  101075:	01 10                	add    DWORD PTR [eax],edx
  101077:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  10107a:	10 00                	adc    BYTE PTR [eax],al
  10107c:	48                   	dec    eax
  10107d:	01 10                	add    DWORD PTR [eax],edx
  10107f:	00 48 01             	add    BYTE PTR [eax+0x1],cl
  101082:	10 00                	adc    BYTE PTR [eax],al
  101084:	cb                   	retf   
  101085:	00 10                	add    BYTE PTR [eax],dl
	...

001010a0 <large_digits.1283>:
  1010a0:	30 31                	xor    BYTE PTR [ecx],dh
  1010a2:	32 33                	xor    dh,BYTE PTR [ebx]
  1010a4:	34 35                	xor    al,0x35
  1010a6:	36                   	ss
  1010a7:	37                   	aaa    
  1010a8:	38 39                	cmp    BYTE PTR [ecx],bh
  1010aa:	41                   	inc    ecx
  1010ab:	42                   	inc    edx
  1010ac:	43                   	inc    ebx
  1010ad:	44                   	inc    esp
  1010ae:	45                   	inc    ebp
  1010af:	46                   	inc    esi
  1010b0:	47                   	inc    edi
  1010b1:	48                   	dec    eax
  1010b2:	49                   	dec    ecx
  1010b3:	4a                   	dec    edx
  1010b4:	4b                   	dec    ebx
  1010b5:	4c                   	dec    esp
  1010b6:	4d                   	dec    ebp
  1010b7:	4e                   	dec    esi
  1010b8:	4f                   	dec    edi
  1010b9:	50                   	push   eax
  1010ba:	51                   	push   ecx
  1010bb:	52                   	push   edx
  1010bc:	53                   	push   ebx
  1010bd:	54                   	push   esp
  1010be:	55                   	push   ebp
  1010bf:	56                   	push   esi
  1010c0:	57                   	push   edi
  1010c1:	58                   	pop    eax
  1010c2:	59                   	pop    ecx
  1010c3:	5a                   	pop    edx
	...

001010e0 <small_digits.1282>:
  1010e0:	30 31                	xor    BYTE PTR [ecx],dh
  1010e2:	32 33                	xor    dh,BYTE PTR [ebx]
  1010e4:	34 35                	xor    al,0x35
  1010e6:	36                   	ss
  1010e7:	37                   	aaa    
  1010e8:	38 39                	cmp    BYTE PTR [ecx],bh
  1010ea:	61                   	popa   
  1010eb:	62 63 64             	bound  esp,QWORD PTR [ebx+0x64]
  1010ee:	65                   	gs
  1010ef:	66 67 68 69 6a       	addr16 pushw 0x6a69
  1010f4:	6b 6c 6d 6e 6f       	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  1010f9:	70 71                	jo     10116c <DLARGECHARS+0x4c>
  1010fb:	72 73                	jb     101170 <DLARGECHARS+0x50>
  1010fd:	74 75                	je     101174 <DLARGECHARS+0x54>
  1010ff:	76 77                	jbe    101178 <DLARGECHARS+0x58>
  101101:	78 79                	js     10117c <DLARGECHARS+0x5c>
  101103:	7a 00                	jp     101105 <small_digits.1282+0x25>
	...

00101120 <DLARGECHARS>:
  101120:	01 00                	add    DWORD PTR [eax],eax
  101122:	00 00                	add    BYTE PTR [eax],al
  101124:	b2 03                	mov    dl,0x3
  101126:	10 00                	adc    BYTE PTR [eax],al
  101128:	09 04 10             	or     DWORD PTR [eax+edx*1],eax
  10112b:	00 09                	add    BYTE PTR [ecx],cl
  10112d:	04 10                	add    al,0x10
  10112f:	00 09                	add    BYTE PTR [ecx],cl
  101131:	04 10                	add    al,0x10
  101133:	00 09                	add    BYTE PTR [ecx],cl
  101135:	04 10                	add    al,0x10
  101137:	00 09                	add    BYTE PTR [ecx],cl
  101139:	04 10                	add    al,0x10
  10113b:	00 09                	add    BYTE PTR [ecx],cl
  10113d:	04 10                	add    al,0x10
  10113f:	00 09                	add    BYTE PTR [ecx],cl
  101141:	04 10                	add    al,0x10
  101143:	00 09                	add    BYTE PTR [ecx],cl
  101145:	04 10                	add    al,0x10
  101147:	00 09                	add    BYTE PTR [ecx],cl
  101149:	04 10                	add    al,0x10
  10114b:	00 1f                	add    BYTE PTR [edi],bl
  10114d:	03 10                	add    edx,DWORD PTR [eax]
  10114f:	00 09                	add    BYTE PTR [ecx],cl
  101151:	04 10                	add    al,0x10
  101153:	00 45 03             	add    BYTE PTR [ebp+0x3],al
  101156:	10 00                	adc    BYTE PTR [eax],al
  101158:	09 04 10             	or     DWORD PTR [eax+edx*1],eax
  10115b:	00 09                	add    BYTE PTR [ecx],cl
  10115d:	04 10                	add    al,0x10
  10115f:	00 09                	add    BYTE PTR [ecx],cl
  101161:	04 10                	add    al,0x10
  101163:	00 09                	add    BYTE PTR [ecx],cl
  101165:	04 10                	add    al,0x10
  101167:	00 09                	add    BYTE PTR [ecx],cl
  101169:	04 10                	add    al,0x10
  10116b:	00 09                	add    BYTE PTR [ecx],cl
  10116d:	04 10                	add    al,0x10
  10116f:	00 09                	add    BYTE PTR [ecx],cl
  101171:	04 10                	add    al,0x10
  101173:	00 09                	add    BYTE PTR [ecx],cl
  101175:	04 10                	add    al,0x10
  101177:	00 09                	add    BYTE PTR [ecx],cl
  101179:	04 10                	add    al,0x10
  10117b:	00 09                	add    BYTE PTR [ecx],cl
  10117d:	04 10                	add    al,0x10
  10117f:	00 6b 03             	add    BYTE PTR [ebx+0x3],ch
  101182:	10 00                	adc    BYTE PTR [eax],al
  101184:	09 04 10             	or     DWORD PTR [eax+edx*1],eax
  101187:	00 09                	add    BYTE PTR [ecx],cl
  101189:	04 10                	add    al,0x10
  10118b:	00 09                	add    BYTE PTR [ecx],cl
  10118d:	04 10                	add    al,0x10
  10118f:	00 09                	add    BYTE PTR [ecx],cl
  101191:	04 10                	add    al,0x10
  101193:	00 09                	add    BYTE PTR [ecx],cl
  101195:	04 10                	add    al,0x10
  101197:	00 09                	add    BYTE PTR [ecx],cl
  101199:	04 10                	add    al,0x10
  10119b:	00 09                	add    BYTE PTR [ecx],cl
  10119d:	04 10                	add    al,0x10
  10119f:	00 09                	add    BYTE PTR [ecx],cl
  1011a1:	04 10                	add    al,0x10
  1011a3:	00 8e 03 10 00 00    	add    BYTE PTR [esi+0x1003],cl
	...

001011c0 <large_digits.1289>:
  1011c0:	30 31                	xor    BYTE PTR [ecx],dh
  1011c2:	32 33                	xor    dh,BYTE PTR [ebx]
  1011c4:	34 35                	xor    al,0x35
  1011c6:	36                   	ss
  1011c7:	37                   	aaa    
  1011c8:	38 39                	cmp    BYTE PTR [ecx],bh
  1011ca:	41                   	inc    ecx
  1011cb:	42                   	inc    edx
  1011cc:	43                   	inc    ebx
  1011cd:	44                   	inc    esp
  1011ce:	45                   	inc    ebp
  1011cf:	46                   	inc    esi
  1011d0:	47                   	inc    edi
  1011d1:	48                   	dec    eax
  1011d2:	49                   	dec    ecx
  1011d3:	4a                   	dec    edx
  1011d4:	4b                   	dec    ebx
  1011d5:	4c                   	dec    esp
  1011d6:	4d                   	dec    ebp
  1011d7:	4e                   	dec    esi
  1011d8:	4f                   	dec    edi
  1011d9:	50                   	push   eax
  1011da:	51                   	push   ecx
  1011db:	52                   	push   edx
  1011dc:	53                   	push   ebx
  1011dd:	54                   	push   esp
  1011de:	55                   	push   ebp
  1011df:	56                   	push   esi
  1011e0:	57                   	push   edi
  1011e1:	58                   	pop    eax
  1011e2:	59                   	pop    ecx
  1011e3:	5a                   	pop    edx
	...

00101200 <small_digits.1288>:
  101200:	30 31                	xor    BYTE PTR [ecx],dh
  101202:	32 33                	xor    dh,BYTE PTR [ebx]
  101204:	34 35                	xor    al,0x35
  101206:	36                   	ss
  101207:	37                   	aaa    
  101208:	38 39                	cmp    BYTE PTR [ecx],bh
  10120a:	61                   	popa   
  10120b:	62 63 64             	bound  esp,QWORD PTR [ebx+0x64]
  10120e:	65                   	gs
  10120f:	66 67 68 69 6a       	addr16 pushw 0x6a69
  101214:	6b 6c 6d 6e 6f       	imul   ebp,DWORD PTR [ebp+ebp*2+0x6e],0x6f
  101219:	70 71                	jo     10128c <DLARGECHARS+0x64>
  10121b:	72 73                	jb     101290 <DLARGECHARS+0x68>
  10121d:	74 75                	je     101294 <DLARGECHARS+0x6c>
  10121f:	76 77                	jbe    101298 <DLARGECHARS+0x70>
  101221:	78 79                	js     10129c <DLARGECHARS+0x74>
  101223:	7a 00                	jp     101225 <small_digits.1288+0x25>
  101225:	00 00                	add    BYTE PTR [eax],al
	...

00101228 <DLARGECHARS>:
  101228:	01 5b 47             	add    DWORD PTR [ebx+0x47],ebx
  10122b:	44                   	inc    esp
  10122c:	54                   	push   esp
  10122d:	5d                   	pop    ebp
  10122e:	20 49 6e             	and    BYTE PTR [ecx+0x6e],cl
  101231:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x697a696c
  101238:	69 
  101239:	6e                   	outs   dx,BYTE PTR ds:[esi]
  10123a:	67 20 47 44          	and    BYTE PTR [bx+0x44],al
  10123e:	54                   	push   esp
  10123f:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  101242:	44                   	inc    esp
  101243:	54                   	push   esp
  101244:	5d                   	pop    ebp
  101245:	20 73 69             	and    BYTE PTR [ebx+0x69],dh
  101248:	7a 65                	jp     1012af <DLARGECHARS+0x87>
  10124a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  10124b:	66                   	data16
  10124c:	20 67 64             	and    BYTE PTR [edi+0x64],ah
  10124f:	74 5f                	je     1012b0 <DLARGECHARS+0x88>
  101251:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  101253:	74 72                	je     1012c7 <DLARGECHARS+0x9f>
  101255:	79 20                	jns    101277 <DLARGECHARS+0x4f>
  101257:	25 64 20 42 79       	and    eax,0x79422064
  10125c:	74 65                	je     1012c3 <DLARGECHARS+0x9b>
  10125e:	73 00                	jae    101260 <DLARGECHARS+0x38>
  101260:	5b                   	pop    ebx
  101261:	47                   	inc    edi
  101262:	44                   	inc    esp
  101263:	54                   	push   esp
  101264:	5d                   	pop    ebp
  101265:	20 67 64             	and    BYTE PTR [edi+0x64],ah
  101268:	74 5f                	je     1012c9 <DLARGECHARS+0xa1>
  10126a:	70 74                	jo     1012e0 <DLARGECHARS+0xb8>
  10126c:	72 2e                	jb     10129c <DLARGECHARS+0x74>
  10126e:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
  101271:	65 20 30             	and    BYTE PTR gs:[eax],dh
  101274:	78 25                	js     10129b <DLARGECHARS+0x73>
  101276:	58                   	pop    eax
  101277:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  10127a:	44                   	inc    esp
  10127b:	54                   	push   esp
  10127c:	5d                   	pop    ebp
  10127d:	20 67 64             	and    BYTE PTR [edi+0x64],ah
  101280:	74 5f                	je     1012e1 <DLARGECHARS+0xb9>
  101282:	70 74                	jo     1012f8 <DLARGECHARS+0xd0>
  101284:	72 2e                	jb     1012b4 <DLARGECHARS+0x8c>
  101286:	6c                   	ins    BYTE PTR es:[edi],dx
  101287:	69 6d 69 74 20 30 78 	imul   ebp,DWORD PTR [ebp+0x69],0x78302074
  10128e:	25 58 20 28 47       	and    eax,0x47282058
  101293:	44                   	inc    esp
  101294:	54                   	push   esp
  101295:	20 73 69             	and    BYTE PTR [ebx+0x69],dh
  101298:	7a 65                	jp     1012ff <DLARGECHARS+0xd7>
  10129a:	20 25 64 20 42 79    	and    BYTE PTR ds:0x79422064,ah
  1012a0:	74 65                	je     101307 <DLARGECHARS+0xdf>
  1012a2:	73 29                	jae    1012cd <DLARGECHARS+0xa5>
  1012a4:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  1012a7:	44                   	inc    esp
  1012a8:	54                   	push   esp
  1012a9:	5d                   	pop    ebp
  1012aa:	20 65 6e             	and    BYTE PTR [ebp+0x6e],ah
  1012ad:	74 72                	je     101321 <DLARGECHARS+0xf9>
  1012af:	79 20                	jns    1012d1 <DLARGECHARS+0xa9>
  1012b1:	31 20                	xor    DWORD PTR [eax],esp
  1012b3:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
  1012b6:	58                   	pop    eax
  1012b7:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  1012ba:	44                   	inc    esp
  1012bb:	54                   	push   esp
  1012bc:	5d                   	pop    ebp
  1012bd:	20 65 6e             	and    BYTE PTR [ebp+0x6e],ah
  1012c0:	74 72                	je     101334 <DLARGECHARS+0xf>
  1012c2:	79 20                	jns    1012e4 <DLARGECHARS+0xbc>
  1012c4:	32 20                	xor    ah,BYTE PTR [eax]
  1012c6:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
  1012c9:	58                   	pop    eax
  1012ca:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  1012cd:	44                   	inc    esp
  1012ce:	54                   	push   esp
  1012cf:	5d                   	pop    ebp
  1012d0:	20 65 6e             	and    BYTE PTR [ebp+0x6e],ah
  1012d3:	74 72                	je     101347 <LARGECHARS+0x9>
  1012d5:	79 20                	jns    1012f7 <DLARGECHARS+0xcf>
  1012d7:	33 20                	xor    esp,DWORD PTR [eax]
  1012d9:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
  1012dc:	58                   	pop    eax
  1012dd:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  1012e0:	44                   	inc    esp
  1012e1:	54                   	push   esp
  1012e2:	5d                   	pop    ebp
  1012e3:	20 65 6e             	and    BYTE PTR [ebp+0x6e],ah
  1012e6:	74 72                	je     10135a <LARGECHARS+0x1c>
  1012e8:	79 20                	jns    10130a <DLARGECHARS+0xe2>
  1012ea:	34 20                	xor    al,0x20
  1012ec:	30 78 25             	xor    BYTE PTR [eax+0x25],bh
  1012ef:	58                   	pop    eax
  1012f0:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  1012f3:	44                   	inc    esp
  1012f4:	54                   	push   esp
  1012f5:	5d                   	pop    ebp
  1012f6:	20 65 6e             	and    BYTE PTR [ebp+0x6e],ah
  1012f9:	74 72                	je     10136d <LARGECHARS+0x2f>
  1012fb:	79 20                	jns    10131d <DLARGECHARS+0xf5>
  1012fd:	35 20 30 78 25       	xor    eax,0x25783020
  101302:	58                   	pop    eax
  101303:	00 5b 47             	add    BYTE PTR [ebx+0x47],bl
  101306:	44                   	inc    esp
  101307:	54                   	push   esp
  101308:	5d                   	pop    ebp
  101309:	20 52 65             	and    BYTE PTR [edx+0x65],dl
  10130c:	74 75                	je     101383 <DLARGECHARS+0x11>
  10130e:	72 6e                	jb     10137e <DLARGECHARS+0xc>
  101310:	69 6e 67 20 66 72 6f 	imul   ebp,DWORD PTR [esi+0x67],0x6f726620
  101317:	6d                   	ins    DWORD PTR es:[edi],dx
  101318:	20 47 64             	and    BYTE PTR [edi+0x64],al
  10131b:	74 5f                	je     10137c <DLARGECHARS+0xa>
  10131d:	46                   	inc    esi
  10131e:	6c                   	ins    BYTE PTR es:[edi],dx
  10131f:	75 73                	jne    101394 <DLARGECHARS+0x22>
  101321:	68 28 29 00 01       	push   0x1002928

00101325 <DLARGECHARS>:
  101325:	01 5b 49             	add    DWORD PTR [ebx+0x49],ebx
  101328:	44                   	inc    esp
  101329:	54                   	push   esp
  10132a:	5d                   	pop    ebp
  10132b:	20 49 6e             	and    BYTE PTR [ecx+0x6e],cl
  10132e:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x697a696c
  101335:	69 
  101336:	6e                   	outs   dx,BYTE PTR ds:[esi]
  101337:	67 20 49 44          	and    BYTE PTR [bx+di+0x44],cl
  10133b:	54                   	push   esp
	...

0010133d <DLARGECHARS>:
  10133d:	01 01                	add    DWORD PTR [ecx],eax

0010133e <LARGECHARS>:
  10133e:	01 00                	add    DWORD PTR [eax],eax
  101340:	5b                   	pop    ebx
  101341:	44                   	inc    esp
  101342:	45                   	inc    ebp
  101343:	42                   	inc    edx
  101344:	55                   	push   ebp
  101345:	47                   	inc    edi
  101346:	5d                   	pop    ebp
  101347:	20 44 65 62          	and    BYTE PTR [ebp+eiz*2+0x62],al
  10134b:	75 67                	jne    1013b4 <DLARGECHARS+0x42>
  10134d:	2d 4d 6f 64 65       	sub    eax,0x65646f4d
  101352:	00 65 6e             	add    BYTE PTR [ebp+0x6e],ah
  101355:	64 20 72 65          	and    BYTE PTR fs:[edx+0x65],dh
  101359:	61                   	popa   
  10135a:	63 68 65             	arpl   WORD PTR [eax+0x65],bp
  10135d:	64 20 61 6e          	and    BYTE PTR fs:[ecx+0x6e],ah
  101361:	64 20 73 74          	and    BYTE PTR fs:[ebx+0x74],dh
  101365:	69 6c 6c 20 61 6c 69 	imul   ebp,DWORD PTR [esp+ebp*2+0x20],0x76696c61
  10136c:	76 
  10136d:	65 2e 2e 00 01       	gs cs add BYTE PTR cs:gs:[ecx],al

00101371 <DLARGECHARS>:
  101371:	01 01                	add    DWORD PTR [ecx],eax

00101372 <DLARGECHARS>:
  101372:	01                   	.byte 0x1

Disassembly of section .bss:

00102000 <gdt>:
	...

00102028 <gdt_ptr>:
	...

00104030 <kernel_stack>:
	...

00104040 <idt>:
	...

00104840 <idt_ptr>:
	...

00104860 <gdt>:
	...

00104888 <gdt_ptr>:
	...

001048a0 <idt>:
	...

001050a0 <idt_ptr>:
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
   8:	0e                   	push   cs
   9:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   b:	11 01                	adc    DWORD PTR [ecx],eax
   d:	12 01                	adc    al,BYTE PTR [ecx]
   f:	10 06                	adc    BYTE PTR [esi],al
  11:	00 00                	add    BYTE PTR [eax],al
  13:	02 16                	add    dl,BYTE PTR [esi]
  15:	00 03                	add    BYTE PTR [ebx],al
  17:	0e                   	push   cs
  18:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  1a:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  1c:	49                   	dec    ecx
  1d:	13 00                	adc    eax,DWORD PTR [eax]
  1f:	00 03                	add    BYTE PTR [ebx],al
  21:	24 00                	and    al,0x0
  23:	0b 0b                	or     ecx,DWORD PTR [ebx]
  25:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  28:	0e                   	push   cs
  29:	00 00                	add    BYTE PTR [eax],al
  2b:	04 24                	add    al,0x24
  2d:	00 0b                	add    BYTE PTR [ebx],cl
  2f:	0b 3e                	or     edi,DWORD PTR [esi]
  31:	0b 03                	or     eax,DWORD PTR [ebx]
  33:	08 00                	or     BYTE PTR [eax],al
  35:	00 05 2e 01 3f 0c    	add    BYTE PTR ds:0xc3f012e,al
  3b:	03 0e                	add    ecx,DWORD PTR [esi]
  3d:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  3f:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  41:	27                   	daa    
  42:	0c 11                	or     al,0x11
  44:	01 12                	add    DWORD PTR [edx],edx
  46:	01 40 06             	add    DWORD PTR [eax+0x6],eax
  49:	01 13                	add    DWORD PTR [ebx],edx
  4b:	00 00                	add    BYTE PTR [eax],al
  4d:	06                   	push   es
  4e:	05 00 03 08 3a       	add    eax,0x3a080300
  53:	0b 3b                	or     edi,DWORD PTR [ebx]
  55:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  58:	02 0a                	add    cl,BYTE PTR [edx]
  5a:	00 00                	add    BYTE PTR [eax],al
  5c:	07                   	pop    es
  5d:	18 00                	sbb    BYTE PTR [eax],al
  5f:	00 00                	add    BYTE PTR [eax],al
  61:	08 34 00             	or     BYTE PTR [eax+eax*1],dh
  64:	03 08                	add    ecx,DWORD PTR [eax]
  66:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  68:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  6a:	49                   	dec    ecx
  6b:	13 02                	adc    eax,DWORD PTR [edx]
  6d:	0a 00                	or     al,BYTE PTR [eax]
  6f:	00 09                	add    BYTE PTR [ecx],cl
  71:	34 00                	xor    al,0x0
  73:	03 0e                	add    ecx,DWORD PTR [esi]
  75:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  77:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  79:	49                   	dec    ecx
  7a:	13 02                	adc    eax,DWORD PTR [edx]
  7c:	0a 00                	or     al,BYTE PTR [eax]
  7e:	00 0a                	add    BYTE PTR [edx],cl
  80:	0f 00 0b             	str    WORD PTR [ebx]
  83:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  86:	00 00                	add    BYTE PTR [eax],al
  88:	0b 26                	or     esp,DWORD PTR [esi]
  8a:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
  8d:	00 00                	add    BYTE PTR [eax],al
  8f:	0c 05                	or     al,0x5
  91:	00 03                	add    BYTE PTR [ebx],al
  93:	0e                   	push   cs
  94:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  96:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  98:	49                   	dec    ecx
  99:	13 02                	adc    eax,DWORD PTR [edx]
  9b:	0a 00                	or     al,BYTE PTR [eax]
  9d:	00 0d 01 01 49 13    	add    BYTE PTR ds:0x13490101,cl
  a3:	01 13                	add    DWORD PTR [ebx],edx
  a5:	00 00                	add    BYTE PTR [eax],al
  a7:	0e                   	push   cs
  a8:	21 00                	and    DWORD PTR [eax],eax
  aa:	49                   	dec    ecx
  ab:	13 2f                	adc    ebp,DWORD PTR [edi]
  ad:	0b 00                	or     eax,DWORD PTR [eax]
  af:	00 00                	add    BYTE PTR [eax],al
  b1:	01 11                	add    DWORD PTR [ecx],edx
  b3:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
  b9:	0e                   	push   cs
  ba:	1b 0e                	sbb    ecx,DWORD PTR [esi]
  bc:	11 01                	adc    DWORD PTR [ecx],eax
  be:	12 01                	adc    al,BYTE PTR [ecx]
  c0:	10 06                	adc    BYTE PTR [esi],al
  c2:	00 00                	add    BYTE PTR [eax],al
  c4:	02 16                	add    dl,BYTE PTR [esi]
  c6:	00 03                	add    BYTE PTR [ebx],al
  c8:	0e                   	push   cs
  c9:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  cb:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  cd:	49                   	dec    ecx
  ce:	13 00                	adc    eax,DWORD PTR [eax]
  d0:	00 03                	add    BYTE PTR [ebx],al
  d2:	24 00                	and    al,0x0
  d4:	0b 0b                	or     ecx,DWORD PTR [ebx]
  d6:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  d9:	0e                   	push   cs
  da:	00 00                	add    BYTE PTR [eax],al
  dc:	04 24                	add    al,0x24
  de:	00 0b                	add    BYTE PTR [ebx],cl
  e0:	0b 3e                	or     edi,DWORD PTR [esi]
  e2:	0b 03                	or     eax,DWORD PTR [ebx]
  e4:	08 00                	or     BYTE PTR [eax],al
  e6:	00 05 2e 01 03 0e    	add    BYTE PTR ds:0xe03012e,al
  ec:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  ee:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  f0:	27                   	daa    
  f1:	0c 11                	or     al,0x11
  f3:	01 12                	add    DWORD PTR [edx],edx
  f5:	01 40 06             	add    DWORD PTR [eax+0x6],eax
  f8:	01 13                	add    DWORD PTR [ebx],edx
  fa:	00 00                	add    BYTE PTR [eax],al
  fc:	06                   	push   es
  fd:	05 00 03 0e 3a       	add    eax,0x3a0e0300
 102:	0b 3b                	or     edi,DWORD PTR [ebx]
 104:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 107:	02 0a                	add    cl,BYTE PTR [edx]
 109:	00 00                	add    BYTE PTR [eax],al
 10b:	07                   	pop    es
 10c:	05 00 03 08 3a       	add    eax,0x3a080300
 111:	0b 3b                	or     edi,DWORD PTR [ebx]
 113:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 116:	02 0a                	add    cl,BYTE PTR [edx]
 118:	00 00                	add    BYTE PTR [eax],al
 11a:	08 2e                	or     BYTE PTR [esi],ch
 11c:	01 3f                	add    DWORD PTR [edi],edi
 11e:	0c 03                	or     al,0x3
 120:	0e                   	push   cs
 121:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 123:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 125:	27                   	daa    
 126:	0c 11                	or     al,0x11
 128:	01 12                	add    DWORD PTR [edx],edx
 12a:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 12d:	01 13                	add    DWORD PTR [ebx],edx
 12f:	00 00                	add    BYTE PTR [eax],al
 131:	09 18                	or     DWORD PTR [eax],ebx
 133:	00 00                	add    BYTE PTR [eax],al
 135:	00 0a                	add    BYTE PTR [edx],cl
 137:	34 00                	xor    al,0x0
 139:	03 0e                	add    ecx,DWORD PTR [esi]
 13b:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 13d:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 13f:	49                   	dec    ecx
 140:	13 02                	adc    eax,DWORD PTR [edx]
 142:	0a 00                	or     al,BYTE PTR [eax]
 144:	00 0b                	add    BYTE PTR [ebx],cl
 146:	0f 00 0b             	str    WORD PTR [ebx]
 149:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 14c:	00 00                	add    BYTE PTR [eax],al
 14e:	0c 26                	or     al,0x26
 150:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
 153:	00 00                	add    BYTE PTR [eax],al
 155:	0d 34 00 03 08       	or     eax,0x8030034
 15a:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 15c:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 15e:	49                   	dec    ecx
 15f:	13 02                	adc    eax,DWORD PTR [edx]
 161:	0a 00                	or     al,BYTE PTR [eax]
 163:	00 0e                	add    BYTE PTR [esi],cl
 165:	01 01                	add    DWORD PTR [ecx],eax
 167:	49                   	dec    ecx
 168:	13 01                	adc    eax,DWORD PTR [ecx]
 16a:	13 00                	adc    eax,DWORD PTR [eax]
 16c:	00 0f                	add    BYTE PTR [edi],cl
 16e:	21 00                	and    DWORD PTR [eax],eax
 170:	49                   	dec    ecx
 171:	13 2f                	adc    ebp,DWORD PTR [edi]
 173:	0b 00                	or     eax,DWORD PTR [eax]
 175:	00 00                	add    BYTE PTR [eax],al
 177:	01 11                	add    DWORD PTR [ecx],edx
 179:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
 17f:	0e                   	push   cs
 180:	1b 0e                	sbb    ecx,DWORD PTR [esi]
 182:	11 01                	adc    DWORD PTR [ecx],eax
 184:	12 01                	adc    al,BYTE PTR [ecx]
 186:	10 06                	adc    BYTE PTR [esi],al
 188:	00 00                	add    BYTE PTR [eax],al
 18a:	02 16                	add    dl,BYTE PTR [esi]
 18c:	00 03                	add    BYTE PTR [ebx],al
 18e:	0e                   	push   cs
 18f:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 191:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 193:	49                   	dec    ecx
 194:	13 00                	adc    eax,DWORD PTR [eax]
 196:	00 03                	add    BYTE PTR [ebx],al
 198:	24 00                	and    al,0x0
 19a:	0b 0b                	or     ecx,DWORD PTR [ebx]
 19c:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
 19f:	0e                   	push   cs
 1a0:	00 00                	add    BYTE PTR [eax],al
 1a2:	04 24                	add    al,0x24
 1a4:	00 0b                	add    BYTE PTR [ebx],cl
 1a6:	0b 3e                	or     edi,DWORD PTR [esi]
 1a8:	0b 03                	or     eax,DWORD PTR [ebx]
 1aa:	08 00                	or     BYTE PTR [eax],al
 1ac:	00 05 13 01 0b 0b    	add    BYTE PTR ds:0xb0b0113,al
 1b2:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 1b4:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 1b6:	01 13                	add    DWORD PTR [ebx],edx
 1b8:	00 00                	add    BYTE PTR [eax],al
 1ba:	06                   	push   es
 1bb:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
 1c0:	0b 3b                	or     edi,DWORD PTR [ebx]
 1c2:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 1c5:	38 0a                	cmp    BYTE PTR [edx],cl
 1c7:	00 00                	add    BYTE PTR [eax],al
 1c9:	07                   	pop    es
 1ca:	2e 01 03             	add    DWORD PTR cs:[ebx],eax
 1cd:	08 3a                	or     BYTE PTR [edx],bh
 1cf:	0b 3b                	or     edi,DWORD PTR [ebx]
 1d1:	0b 27                	or     esp,DWORD PTR [edi]
 1d3:	0c 49                	or     al,0x49
 1d5:	13 11                	adc    edx,DWORD PTR [ecx]
 1d7:	01 12                	add    DWORD PTR [edx],edx
 1d9:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 1dc:	01 13                	add    DWORD PTR [ebx],edx
 1de:	00 00                	add    BYTE PTR [eax],al
 1e0:	08 05 00 03 0e 3a    	or     BYTE PTR ds:0x3a0e0300,al
 1e6:	0b 3b                	or     edi,DWORD PTR [ebx]
 1e8:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 1eb:	02 0a                	add    cl,BYTE PTR [edx]
 1ed:	00 00                	add    BYTE PTR [eax],al
 1ef:	09 34 00             	or     DWORD PTR [eax+eax*1],esi
 1f2:	03 0e                	add    ecx,DWORD PTR [esi]
 1f4:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 1f6:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 1f8:	49                   	dec    ecx
 1f9:	13 02                	adc    eax,DWORD PTR [edx]
 1fb:	0a 00                	or     al,BYTE PTR [eax]
 1fd:	00 0a                	add    BYTE PTR [edx],cl
 1ff:	2e 01 03             	add    DWORD PTR cs:[ebx],eax
 202:	0e                   	push   cs
 203:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 205:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 207:	27                   	daa    
 208:	0c 11                	or     al,0x11
 20a:	01 12                	add    DWORD PTR [edx],edx
 20c:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 20f:	01 13                	add    DWORD PTR [ebx],edx
 211:	00 00                	add    BYTE PTR [eax],al
 213:	0b 05 00 03 08 3a    	or     eax,DWORD PTR ds:0x3a080300
 219:	0b 3b                	or     edi,DWORD PTR [ebx]
 21b:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 21e:	02 0a                	add    cl,BYTE PTR [edx]
 220:	00 00                	add    BYTE PTR [eax],al
 222:	0c 2e                	or     al,0x2e
 224:	01 3f                	add    DWORD PTR [edi],edi
 226:	0c 03                	or     al,0x3
 228:	0e                   	push   cs
 229:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 22b:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 22d:	27                   	daa    
 22e:	0c 11                	or     al,0x11
 230:	01 12                	add    DWORD PTR [edx],edx
 232:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 235:	01 13                	add    DWORD PTR [ebx],edx
 237:	00 00                	add    BYTE PTR [eax],al
 239:	0d 17 01 0b 0b       	or     eax,0xb0b0117
 23e:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 240:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 242:	01 13                	add    DWORD PTR [ebx],edx
 244:	00 00                	add    BYTE PTR [eax],al
 246:	0e                   	push   cs
 247:	0d 00 03 08 3a       	or     eax,0x3a080300
 24c:	0b 3b                	or     edi,DWORD PTR [ebx]
 24e:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 251:	00 00                	add    BYTE PTR [eax],al
 253:	0f                   	(bad)  
 254:	0f 00 0b             	str    WORD PTR [ebx]
 257:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 25a:	00 00                	add    BYTE PTR [eax],al
 25c:	10 01                	adc    BYTE PTR [ecx],al
 25e:	01 49 13             	add    DWORD PTR [ecx+0x13],ecx
 261:	01 13                	add    DWORD PTR [ebx],edx
 263:	00 00                	add    BYTE PTR [eax],al
 265:	11 21                	adc    DWORD PTR [ecx],esp
 267:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
 26a:	2f                   	das    
 26b:	0b 00                	or     eax,DWORD PTR [eax]
 26d:	00 12                	add    BYTE PTR [edx],dl
 26f:	2e 01 3f             	add    DWORD PTR cs:[edi],edi
 272:	0c 03                	or     al,0x3
 274:	0e                   	push   cs
 275:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 277:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 279:	27                   	daa    
 27a:	0c 49                	or     al,0x49
 27c:	13 11                	adc    edx,DWORD PTR [ecx]
 27e:	01 12                	add    DWORD PTR [edx],edx
 280:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 283:	01 13                	add    DWORD PTR [ebx],edx
 285:	00 00                	add    BYTE PTR [eax],al
 287:	13 2e                	adc    ebp,DWORD PTR [esi]
 289:	01 3f                	add    DWORD PTR [edi],edi
 28b:	0c 03                	or     al,0x3
 28d:	0e                   	push   cs
 28e:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 290:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 292:	27                   	daa    
 293:	0c 49                	or     al,0x49
 295:	13 11                	adc    edx,DWORD PTR [ecx]
 297:	01 12                	add    DWORD PTR [edx],edx
 299:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 29c:	00 00                	add    BYTE PTR [eax],al
 29e:	00 01                	add    BYTE PTR [ecx],al
 2a0:	11 01                	adc    DWORD PTR [ecx],eax
 2a2:	25 0e 13 0b 03       	and    eax,0x30b130e
 2a7:	0e                   	push   cs
 2a8:	1b 0e                	sbb    ecx,DWORD PTR [esi]
 2aa:	11 01                	adc    DWORD PTR [ecx],eax
 2ac:	12 01                	adc    al,BYTE PTR [ecx]
 2ae:	10 06                	adc    BYTE PTR [esi],al
 2b0:	00 00                	add    BYTE PTR [eax],al
 2b2:	02 16                	add    dl,BYTE PTR [esi]
 2b4:	00 03                	add    BYTE PTR [ebx],al
 2b6:	0e                   	push   cs
 2b7:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 2b9:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 2bb:	49                   	dec    ecx
 2bc:	13 00                	adc    eax,DWORD PTR [eax]
 2be:	00 03                	add    BYTE PTR [ebx],al
 2c0:	24 00                	and    al,0x0
 2c2:	0b 0b                	or     ecx,DWORD PTR [ebx]
 2c4:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
 2c7:	0e                   	push   cs
 2c8:	00 00                	add    BYTE PTR [eax],al
 2ca:	04 24                	add    al,0x24
 2cc:	00 0b                	add    BYTE PTR [ebx],cl
 2ce:	0b 3e                	or     edi,DWORD PTR [esi]
 2d0:	0b 03                	or     eax,DWORD PTR [ebx]
 2d2:	08 00                	or     BYTE PTR [eax],al
 2d4:	00 05 13 01 03 0e    	add    BYTE PTR ds:0xe030113,al
 2da:	0b 0b                	or     ecx,DWORD PTR [ebx]
 2dc:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 2de:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 2e0:	01 13                	add    DWORD PTR [ebx],edx
 2e2:	00 00                	add    BYTE PTR [eax],al
 2e4:	06                   	push   es
 2e5:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
 2ea:	0b 3b                	or     edi,DWORD PTR [ebx]
 2ec:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 2ef:	38 0a                	cmp    BYTE PTR [edx],cl
 2f1:	00 00                	add    BYTE PTR [eax],al
 2f3:	07                   	pop    es
 2f4:	01 01                	add    DWORD PTR [ecx],eax
 2f6:	49                   	dec    ecx
 2f7:	13 01                	adc    eax,DWORD PTR [ecx]
 2f9:	13 00                	adc    eax,DWORD PTR [eax]
 2fb:	00 08                	add    BYTE PTR [eax],cl
 2fd:	21 00                	and    DWORD PTR [eax],eax
 2ff:	49                   	dec    ecx
 300:	13 2f                	adc    ebp,DWORD PTR [edi]
 302:	0b 00                	or     eax,DWORD PTR [eax]
 304:	00 09                	add    BYTE PTR [ecx],cl
 306:	2e 00 3f             	add    BYTE PTR cs:[edi],bh
 309:	0c 03                	or     al,0x3
 30b:	0e                   	push   cs
 30c:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 30e:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 310:	11 01                	adc    DWORD PTR [ecx],eax
 312:	12 01                	adc    al,BYTE PTR [ecx]
 314:	40                   	inc    eax
 315:	06                   	push   es
 316:	00 00                	add    BYTE PTR [eax],al
 318:	0a 2e                	or     ch,BYTE PTR [esi]
 31a:	01 03                	add    DWORD PTR [ebx],eax
 31c:	0e                   	push   cs
 31d:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 31f:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 321:	27                   	daa    
 322:	0c 11                	or     al,0x11
 324:	01 12                	add    DWORD PTR [edx],edx
 326:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 329:	01 13                	add    DWORD PTR [ebx],edx
 32b:	00 00                	add    BYTE PTR [eax],al
 32d:	0b 05 00 03 0e 3a    	or     eax,DWORD PTR ds:0x3a0e0300
 333:	0b 3b                	or     edi,DWORD PTR [ebx]
 335:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 338:	02 0a                	add    cl,BYTE PTR [edx]
 33a:	00 00                	add    BYTE PTR [eax],al
 33c:	0c 2e                	or     al,0x2e
 33e:	00 03                	add    BYTE PTR [ebx],al
 340:	0e                   	push   cs
 341:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 343:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 345:	11 01                	adc    DWORD PTR [ecx],eax
 347:	12 01                	adc    al,BYTE PTR [ecx]
 349:	40                   	inc    eax
 34a:	06                   	push   es
 34b:	00 00                	add    BYTE PTR [eax],al
 34d:	0d 34 00 03 0e       	or     eax,0xe030034
 352:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 354:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 356:	49                   	dec    ecx
 357:	13 02                	adc    eax,DWORD PTR [edx]
 359:	0a 00                	or     al,BYTE PTR [eax]
 35b:	00 0e                	add    BYTE PTR [esi],cl
 35d:	26 00 49 13          	add    BYTE PTR es:[ecx+0x13],cl
 361:	00 00                	add    BYTE PTR [eax],al
 363:	0f 34                	sysenter 
 365:	00 03                	add    BYTE PTR [ebx],al
 367:	08 3a                	or     BYTE PTR [edx],bh
 369:	0b 3b                	or     edi,DWORD PTR [ebx]
 36b:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 36e:	02 0a                	add    cl,BYTE PTR [edx]
 370:	00 00                	add    BYTE PTR [eax],al
 372:	00 01                	add    BYTE PTR [ecx],al
 374:	11 01                	adc    DWORD PTR [ecx],eax
 376:	25 0e 13 0b 03       	and    eax,0x30b130e
 37b:	0e                   	push   cs
 37c:	1b 0e                	sbb    ecx,DWORD PTR [esi]
 37e:	11 01                	adc    DWORD PTR [ecx],eax
 380:	12 01                	adc    al,BYTE PTR [ecx]
 382:	10 06                	adc    BYTE PTR [esi],al
 384:	00 00                	add    BYTE PTR [eax],al
 386:	02 16                	add    dl,BYTE PTR [esi]
 388:	00 03                	add    BYTE PTR [ebx],al
 38a:	0e                   	push   cs
 38b:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 38d:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 38f:	49                   	dec    ecx
 390:	13 00                	adc    eax,DWORD PTR [eax]
 392:	00 03                	add    BYTE PTR [ebx],al
 394:	24 00                	and    al,0x0
 396:	0b 0b                	or     ecx,DWORD PTR [ebx]
 398:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
 39b:	0e                   	push   cs
 39c:	00 00                	add    BYTE PTR [eax],al
 39e:	04 24                	add    al,0x24
 3a0:	00 0b                	add    BYTE PTR [ebx],cl
 3a2:	0b 3e                	or     edi,DWORD PTR [esi]
 3a4:	0b 03                	or     eax,DWORD PTR [ebx]
 3a6:	08 00                	or     BYTE PTR [eax],al
 3a8:	00 05 13 01 03 0e    	add    BYTE PTR ds:0xe030113,al
 3ae:	0b 0b                	or     ecx,DWORD PTR [ebx]
 3b0:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 3b2:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 3b4:	01 13                	add    DWORD PTR [ebx],edx
 3b6:	00 00                	add    BYTE PTR [eax],al
 3b8:	06                   	push   es
 3b9:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
 3be:	0b 3b                	or     edi,DWORD PTR [ebx]
 3c0:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 3c3:	38 0a                	cmp    BYTE PTR [edx],cl
 3c5:	00 00                	add    BYTE PTR [eax],al
 3c7:	07                   	pop    es
 3c8:	0d 00 03 08 3a       	or     eax,0x3a080300
 3cd:	0b 3b                	or     edi,DWORD PTR [ebx]
 3cf:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 3d2:	38 0a                	cmp    BYTE PTR [edx],cl
 3d4:	00 00                	add    BYTE PTR [eax],al
 3d6:	08 13                	or     BYTE PTR [ebx],dl
 3d8:	01 03                	add    DWORD PTR [ebx],eax
 3da:	0e                   	push   cs
 3db:	0b 05 3a 0b 3b 0b    	or     eax,DWORD PTR ds:0xb3b0b3a
 3e1:	01 13                	add    DWORD PTR [ebx],edx
 3e3:	00 00                	add    BYTE PTR [eax],al
 3e5:	09 01                	or     DWORD PTR [ecx],eax
 3e7:	01 49 13             	add    DWORD PTR [ecx+0x13],ecx
 3ea:	01 13                	add    DWORD PTR [ebx],edx
 3ec:	00 00                	add    BYTE PTR [eax],al
 3ee:	0a 21                	or     ah,BYTE PTR [ecx]
 3f0:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
 3f3:	2f                   	das    
 3f4:	0b 00                	or     eax,DWORD PTR [eax]
 3f6:	00 0b                	add    BYTE PTR [ebx],cl
 3f8:	2e 00 3f             	add    BYTE PTR cs:[edi],bh
 3fb:	0c 03                	or     al,0x3
 3fd:	0e                   	push   cs
 3fe:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 400:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 402:	11 01                	adc    DWORD PTR [ecx],eax
 404:	12 01                	adc    al,BYTE PTR [ecx]
 406:	40                   	inc    eax
 407:	06                   	push   es
 408:	00 00                	add    BYTE PTR [eax],al
 40a:	0c 2e                	or     al,0x2e
 40c:	01 03                	add    DWORD PTR [ebx],eax
 40e:	0e                   	push   cs
 40f:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 411:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 413:	27                   	daa    
 414:	0c 11                	or     al,0x11
 416:	01 12                	add    DWORD PTR [edx],edx
 418:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 41b:	01 13                	add    DWORD PTR [ebx],edx
 41d:	00 00                	add    BYTE PTR [eax],al
 41f:	0d 05 00 03 0e       	or     eax,0xe030005
 424:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 426:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 428:	49                   	dec    ecx
 429:	13 02                	adc    eax,DWORD PTR [edx]
 42b:	0a 00                	or     al,BYTE PTR [eax]
 42d:	00 0e                	add    BYTE PTR [esi],cl
 42f:	05 00 03 08 3a       	add    eax,0x3a080300
 434:	0b 3b                	or     edi,DWORD PTR [ebx]
 436:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 439:	02 0a                	add    cl,BYTE PTR [edx]
 43b:	00 00                	add    BYTE PTR [eax],al
 43d:	0f 2e 00             	ucomiss xmm0,DWORD PTR [eax]
 440:	03 0e                	add    ecx,DWORD PTR [esi]
 442:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 444:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 446:	11 01                	adc    DWORD PTR [ecx],eax
 448:	12 01                	adc    al,BYTE PTR [ecx]
 44a:	40                   	inc    eax
 44b:	06                   	push   es
 44c:	00 00                	add    BYTE PTR [eax],al
 44e:	10 34 00             	adc    BYTE PTR [eax+eax*1],dh
 451:	03 0e                	add    ecx,DWORD PTR [esi]
 453:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 455:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 457:	49                   	dec    ecx
 458:	13 02                	adc    eax,DWORD PTR [edx]
 45a:	0a 00                	or     al,BYTE PTR [eax]
 45c:	00 11                	add    BYTE PTR [ecx],dl
 45e:	26 00 49 13          	add    BYTE PTR es:[ecx+0x13],cl
 462:	00 00                	add    BYTE PTR [eax],al
 464:	12 34 00             	adc    dh,BYTE PTR [eax+eax*1]
 467:	03 08                	add    ecx,DWORD PTR [eax]
 469:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 46b:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 46d:	49                   	dec    ecx
 46e:	13 02                	adc    eax,DWORD PTR [edx]
 470:	0a 00                	or     al,BYTE PTR [eax]
 472:	00 00                	add    BYTE PTR [eax],al
 474:	01 11                	add    DWORD PTR [ecx],edx
 476:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
 47c:	0e                   	push   cs
 47d:	1b 0e                	sbb    ecx,DWORD PTR [esi]
 47f:	11 01                	adc    DWORD PTR [ecx],eax
 481:	12 01                	adc    al,BYTE PTR [ecx]
 483:	10 06                	adc    BYTE PTR [esi],al
 485:	00 00                	add    BYTE PTR [eax],al
 487:	02 16                	add    dl,BYTE PTR [esi]
 489:	00 03                	add    BYTE PTR [ebx],al
 48b:	0e                   	push   cs
 48c:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 48e:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 490:	49                   	dec    ecx
 491:	13 00                	adc    eax,DWORD PTR [eax]
 493:	00 03                	add    BYTE PTR [ebx],al
 495:	24 00                	and    al,0x0
 497:	0b 0b                	or     ecx,DWORD PTR [ebx]
 499:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
 49c:	0e                   	push   cs
 49d:	00 00                	add    BYTE PTR [eax],al
 49f:	04 24                	add    al,0x24
 4a1:	00 0b                	add    BYTE PTR [ebx],cl
 4a3:	0b 3e                	or     edi,DWORD PTR [esi]
 4a5:	0b 03                	or     eax,DWORD PTR [ebx]
 4a7:	08 00                	or     BYTE PTR [eax],al
 4a9:	00 05 13 01 0b 0b    	add    BYTE PTR ds:0xb0b0113,al
 4af:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 4b1:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 4b3:	01 13                	add    DWORD PTR [ebx],edx
 4b5:	00 00                	add    BYTE PTR [eax],al
 4b7:	06                   	push   es
 4b8:	0d 00 03 08 3a       	or     eax,0x3a080300
 4bd:	0b 3b                	or     edi,DWORD PTR [ebx]
 4bf:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 4c2:	38 0a                	cmp    BYTE PTR [edx],cl
 4c4:	00 00                	add    BYTE PTR [eax],al
 4c6:	07                   	pop    es
 4c7:	04 01                	add    al,0x1
 4c9:	0b 0b                	or     ecx,DWORD PTR [ebx]
 4cb:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 4cd:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 4cf:	01 13                	add    DWORD PTR [ebx],edx
 4d1:	00 00                	add    BYTE PTR [eax],al
 4d3:	08 28                	or     BYTE PTR [eax],ch
 4d5:	00 03                	add    BYTE PTR [ebx],al
 4d7:	0e                   	push   cs
 4d8:	1c 0d                	sbb    al,0xd
 4da:	00 00                	add    BYTE PTR [eax],al
 4dc:	09 28                	or     DWORD PTR [eax],ebp
 4de:	00 03                	add    BYTE PTR [ebx],al
 4e0:	08 1c 0d 00 00 0a 0d 	or     BYTE PTR [ecx*1+0xd0a0000],bl
 4e7:	00 03                	add    BYTE PTR [ebx],al
 4e9:	0e                   	push   cs
 4ea:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 4ec:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 4ee:	49                   	dec    ecx
 4ef:	13 38                	adc    edi,DWORD PTR [eax]
 4f1:	0a 00                	or     al,BYTE PTR [eax]
 4f3:	00 0b                	add    BYTE PTR [ebx],cl
 4f5:	0f 00 0b             	str    WORD PTR [ebx]
 4f8:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 4fb:	00 00                	add    BYTE PTR [eax],al
 4fd:	0c 13                	or     al,0x13
 4ff:	01 03                	add    DWORD PTR [ebx],eax
 501:	0e                   	push   cs
 502:	0b 0b                	or     ecx,DWORD PTR [ebx]
 504:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 506:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 508:	01 13                	add    DWORD PTR [ebx],edx
 50a:	00 00                	add    BYTE PTR [eax],al
 50c:	0d 01 01 49 13       	or     eax,0x13490101
 511:	01 13                	add    DWORD PTR [ebx],edx
 513:	00 00                	add    BYTE PTR [eax],al
 515:	0e                   	push   cs
 516:	21 00                	and    DWORD PTR [eax],eax
 518:	49                   	dec    ecx
 519:	13 2f                	adc    ebp,DWORD PTR [edi]
 51b:	0b 00                	or     eax,DWORD PTR [eax]
 51d:	00 0f                	add    BYTE PTR [edi],cl
 51f:	13 01                	adc    eax,DWORD PTR [ecx]
 521:	03 0e                	add    ecx,DWORD PTR [esi]
 523:	0b 05 3a 0b 3b 0b    	or     eax,DWORD PTR ds:0xb3b0b3a
 529:	01 13                	add    DWORD PTR [ebx],edx
 52b:	00 00                	add    BYTE PTR [eax],al
 52d:	10 2e                	adc    BYTE PTR [esi],ch
 52f:	01 3f                	add    DWORD PTR [edi],edi
 531:	0c 03                	or     al,0x3
 533:	0e                   	push   cs
 534:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 536:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 538:	27                   	daa    
 539:	0c 11                	or     al,0x11
 53b:	01 12                	add    DWORD PTR [edx],edx
 53d:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 540:	01 13                	add    DWORD PTR [ebx],edx
 542:	00 00                	add    BYTE PTR [eax],al
 544:	11 34 00             	adc    DWORD PTR [eax+eax*1],esi
 547:	03 08                	add    ecx,DWORD PTR [eax]
 549:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 54b:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 54d:	49                   	dec    ecx
 54e:	13 02                	adc    eax,DWORD PTR [edx]
 550:	0a 00                	or     al,BYTE PTR [eax]
 552:	00 12                	add    BYTE PTR [edx],dl
 554:	34 00                	xor    al,0x0
 556:	03 0e                	add    ecx,DWORD PTR [esi]
 558:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 55a:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 55c:	49                   	dec    ecx
 55d:	13 02                	adc    eax,DWORD PTR [edx]
 55f:	0a 00                	or     al,BYTE PTR [eax]
 561:	00 13                	add    BYTE PTR [ebx],dl
 563:	26 00 49 13          	add    BYTE PTR es:[ecx+0x13],cl
 567:	00 00                	add    BYTE PTR [eax],al
 569:	00 01                	add    BYTE PTR [ecx],al
 56b:	11 01                	adc    DWORD PTR [ecx],eax
 56d:	25 0e 13 0b 03       	and    eax,0x30b130e
 572:	0e                   	push   cs
 573:	1b 0e                	sbb    ecx,DWORD PTR [esi]
 575:	11 01                	adc    DWORD PTR [ecx],eax
 577:	12 01                	adc    al,BYTE PTR [ecx]
 579:	10 06                	adc    BYTE PTR [esi],al
 57b:	00 00                	add    BYTE PTR [eax],al
 57d:	02 16                	add    dl,BYTE PTR [esi]
 57f:	00 03                	add    BYTE PTR [ebx],al
 581:	0e                   	push   cs
 582:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 584:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 586:	49                   	dec    ecx
 587:	13 00                	adc    eax,DWORD PTR [eax]
 589:	00 03                	add    BYTE PTR [ebx],al
 58b:	24 00                	and    al,0x0
 58d:	0b 0b                	or     ecx,DWORD PTR [ebx]
 58f:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
 592:	0e                   	push   cs
 593:	00 00                	add    BYTE PTR [eax],al
 595:	04 24                	add    al,0x24
 597:	00 0b                	add    BYTE PTR [ebx],cl
 599:	0b 3e                	or     edi,DWORD PTR [esi]
 59b:	0b 03                	or     eax,DWORD PTR [ebx]
 59d:	08 00                	or     BYTE PTR [eax],al
 59f:	00 05 34 00 03 0e    	add    BYTE PTR ds:0xe030034,al
 5a5:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 5a7:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 5a9:	49                   	dec    ecx
 5aa:	13 02                	adc    eax,DWORD PTR [edx]
 5ac:	0a 00                	or     al,BYTE PTR [eax]
 5ae:	00 06                	add    BYTE PTR [esi],al
 5b0:	26 00 49 13          	add    BYTE PTR es:[ecx+0x13],cl
 5b4:	00 00                	add    BYTE PTR [eax],al
 5b6:	00 01                	add    BYTE PTR [ecx],al
 5b8:	11 01                	adc    DWORD PTR [ecx],eax
 5ba:	25 0e 13 0b 03       	and    eax,0x30b130e
 5bf:	0e                   	push   cs
 5c0:	1b 0e                	sbb    ecx,DWORD PTR [esi]
 5c2:	11 01                	adc    DWORD PTR [ecx],eax
 5c4:	12 01                	adc    al,BYTE PTR [ecx]
 5c6:	10 06                	adc    BYTE PTR [esi],al
 5c8:	00 00                	add    BYTE PTR [eax],al
 5ca:	02 16                	add    dl,BYTE PTR [esi]
 5cc:	00 03                	add    BYTE PTR [ebx],al
 5ce:	0e                   	push   cs
 5cf:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 5d1:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 5d3:	49                   	dec    ecx
 5d4:	13 00                	adc    eax,DWORD PTR [eax]
 5d6:	00 03                	add    BYTE PTR [ebx],al
 5d8:	24 00                	and    al,0x0
 5da:	0b 0b                	or     ecx,DWORD PTR [ebx]
 5dc:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
 5df:	0e                   	push   cs
 5e0:	00 00                	add    BYTE PTR [eax],al
 5e2:	04 24                	add    al,0x24
 5e4:	00 0b                	add    BYTE PTR [ebx],cl
 5e6:	0b 3e                	or     edi,DWORD PTR [esi]
 5e8:	0b 03                	or     eax,DWORD PTR [ebx]
 5ea:	08 00                	or     BYTE PTR [eax],al
 5ec:	00 05 13 01 0b 0b    	add    BYTE PTR ds:0xb0b0113,al
 5f2:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 5f4:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 5f6:	01 13                	add    DWORD PTR [ebx],edx
 5f8:	00 00                	add    BYTE PTR [eax],al
 5fa:	06                   	push   es
 5fb:	0d 00 03 08 3a       	or     eax,0x3a080300
 600:	0b 3b                	or     edi,DWORD PTR [ebx]
 602:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 605:	38 0a                	cmp    BYTE PTR [edx],cl
 607:	00 00                	add    BYTE PTR [eax],al
 609:	07                   	pop    es
 60a:	04 01                	add    al,0x1
 60c:	0b 0b                	or     ecx,DWORD PTR [ebx]
 60e:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 610:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 612:	01 13                	add    DWORD PTR [ebx],edx
 614:	00 00                	add    BYTE PTR [eax],al
 616:	08 28                	or     BYTE PTR [eax],ch
 618:	00 03                	add    BYTE PTR [ebx],al
 61a:	0e                   	push   cs
 61b:	1c 0d                	sbb    al,0xd
 61d:	00 00                	add    BYTE PTR [eax],al
 61f:	09 28                	or     DWORD PTR [eax],ebp
 621:	00 03                	add    BYTE PTR [ebx],al
 623:	08 1c 0d 00 00 0a 0d 	or     BYTE PTR [ecx*1+0xd0a0000],bl
 62a:	00 03                	add    BYTE PTR [ebx],al
 62c:	0e                   	push   cs
 62d:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 62f:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 631:	49                   	dec    ecx
 632:	13 38                	adc    edi,DWORD PTR [eax]
 634:	0a 00                	or     al,BYTE PTR [eax]
 636:	00 0b                	add    BYTE PTR [ebx],cl
 638:	0f 00 0b             	str    WORD PTR [ebx]
 63b:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 63e:	00 00                	add    BYTE PTR [eax],al
 640:	0c 2e                	or     al,0x2e
 642:	01 03                	add    DWORD PTR [ebx],eax
 644:	0e                   	push   cs
 645:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 647:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 649:	27                   	daa    
 64a:	0c 11                	or     al,0x11
 64c:	01 12                	add    DWORD PTR [edx],edx
 64e:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 651:	01 13                	add    DWORD PTR [ebx],edx
 653:	00 00                	add    BYTE PTR [eax],al
 655:	0d 05 00 03 0e       	or     eax,0xe030005
 65a:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 65c:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 65e:	49                   	dec    ecx
 65f:	13 02                	adc    eax,DWORD PTR [edx]
 661:	0a 00                	or     al,BYTE PTR [eax]
 663:	00 0e                	add    BYTE PTR [esi],cl
 665:	05 00 03 08 3a       	add    eax,0x3a080300
 66a:	0b 3b                	or     edi,DWORD PTR [ebx]
 66c:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 66f:	02 0a                	add    cl,BYTE PTR [edx]
 671:	00 00                	add    BYTE PTR [eax],al
 673:	0f 2e 01             	ucomiss xmm0,DWORD PTR [ecx]
 676:	3f                   	aas    
 677:	0c 03                	or     al,0x3
 679:	0e                   	push   cs
 67a:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 67c:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 67e:	27                   	daa    
 67f:	0c 11                	or     al,0x11
 681:	01 12                	add    DWORD PTR [edx],edx
 683:	01 40 06             	add    DWORD PTR [eax+0x6],eax
 686:	01 13                	add    DWORD PTR [ebx],edx
 688:	00 00                	add    BYTE PTR [eax],al
 68a:	10 34 00             	adc    BYTE PTR [eax+eax*1],dh
 68d:	03 08                	add    ecx,DWORD PTR [eax]
 68f:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 691:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 693:	49                   	dec    ecx
 694:	13 02                	adc    eax,DWORD PTR [edx]
 696:	0a 00                	or     al,BYTE PTR [eax]
 698:	00 11                	add    BYTE PTR [ecx],dl
 69a:	34 00                	xor    al,0x0
 69c:	03 0e                	add    ecx,DWORD PTR [esi]
 69e:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 6a0:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 6a2:	49                   	dec    ecx
 6a3:	13 02                	adc    eax,DWORD PTR [edx]
 6a5:	0a 00                	or     al,BYTE PTR [eax]
 6a7:	00 12                	add    BYTE PTR [edx],dl
 6a9:	26 00 49 13          	add    BYTE PTR es:[ecx+0x13],cl
 6ad:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0a 02                	or     al,BYTE PTR [edx]
       2:	00 00                	add    BYTE PTR [eax],al
       4:	02 00                	add    al,BYTE PTR [eax]
       6:	00 00                	add    BYTE PTR [eax],al
       8:	00 00                	add    BYTE PTR [eax],al
       a:	04 01                	add    al,0x1
       c:	00 00                	add    BYTE PTR [eax],al
       e:	00 00                	add    BYTE PTR [eax],al
      10:	01 3f                	add    DWORD PTR [edi],edi
      12:	00 00                	add    BYTE PTR [eax],al
      14:	00 a3 00 00 00 0c    	add    BYTE PTR [ebx+0xc000000],ah
      1a:	00 10                	add    BYTE PTR [eax],dl
      1c:	00 b6 02 10 00 00    	add    BYTE PTR [esi+0x1002],dh
      22:	00 00                	add    BYTE PTR [eax],al
      24:	00 02                	add    BYTE PTR [edx],al
      26:	19 00                	sbb    DWORD PTR [eax],eax
      28:	00 00                	add    BYTE PTR [eax],al
      2a:	02 09                	add    cl,BYTE PTR [ecx]
      2c:	30 00                	xor    BYTE PTR [eax],al
      2e:	00 00                	add    BYTE PTR [eax],al
      30:	03 01                	add    eax,DWORD PTR [ecx]
      32:	08 1e                	or     BYTE PTR [esi],bl
      34:	00 00                	add    BYTE PTR [eax],al
      36:	00 03                	add    BYTE PTR [ebx],al
      38:	02 07                	add    al,BYTE PTR [edi]
      3a:	2c 00                	sub    al,0x0
      3c:	00 00                	add    BYTE PTR [eax],al
      3e:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
      41:	79 00                	jns    43 <MB_FLAGS+0x43>
      43:	00 00                	add    BYTE PTR [eax],al
      45:	04 04                	add    al,0x4
      47:	05 69 6e 74 00       	add    eax,0x746e69
      4c:	03 01                	add    eax,DWORD PTR [ecx]
      4e:	06                   	push   es
      4f:	20 00                	and    BYTE PTR [eax],al
      51:	00 00                	add    BYTE PTR [eax],al
      53:	03 02                	add    eax,DWORD PTR [edx]
      55:	05 94 00 00 00       	add    eax,0x94
      5a:	02 56 00             	add    dl,BYTE PTR [esi+0x0]
      5d:	00 00                	add    BYTE PTR [eax],al
      5f:	02 12                	add    dl,BYTE PTR [edx]
      61:	37                   	aaa    
      62:	00 00                	add    BYTE PTR [eax],al
      64:	00 03                	add    BYTE PTR [ebx],al
      66:	08 05 86 00 00 00    	or     BYTE PTR ds:0x86,al
      6c:	03 08                	add    ecx,DWORD PTR [eax]
      6e:	07                   	pop    es
      6f:	6f                   	outs   dx,DWORD PTR ds:[esi]
      70:	00 00                	add    BYTE PTR [eax],al
      72:	00 05 01 e6 00 00    	add    BYTE PTR ds:0xe601,al
      78:	00 01                	add    BYTE PTR [ecx],al
      7a:	09 01                	or     DWORD PTR [ecx],eax
      7c:	0c 00                	or     al,0x0
      7e:	10 00                	adc    BYTE PTR [eax],al
      80:	66 01 10             	add    WORD PTR [eax],dx
      83:	00 00                	add    BYTE PTR [eax],al
      85:	00 00                	add    BYTE PTR [eax],al
      87:	00 b6 00 00 00 06    	add    BYTE PTR [esi+0x6000000],dh
      8d:	63 68 72             	arpl   WORD PTR [eax+0x72],bp
      90:	00 01                	add    BYTE PTR [ecx],al
      92:	09 b6 00 00 00 02    	or     DWORD PTR [esi+0x2000000],esi
      98:	91                   	xchg   ecx,eax
      99:	00 07                	add    BYTE PTR [edi],al
      9b:	08 61 00             	or     BYTE PTR [ecx+0x0],ah
      9e:	01 0a                	add    DWORD PTR [edx],ecx
      a0:	45                   	inc    ebp
      a1:	00 00                	add    BYTE PTR [eax],al
      a3:	00 02                	add    BYTE PTR [edx],al
      a5:	91                   	xchg   ecx,eax
      a6:	6c                   	ins    BYTE PTR es:[edi],dx
      a7:	09 9e 00 00 00 01    	or     DWORD PTR [esi+0x1000000],ebx
      ad:	0b c8                	or     ecx,eax
      af:	00 00                	add    BYTE PTR [eax],al
      b1:	00 02                	add    BYTE PTR [edx],al
      b3:	91                   	xchg   ecx,eax
      b4:	68 00 0a 04 bc       	push   0xbc040a00
      b9:	00 00                	add    BYTE PTR [eax],al
      bb:	00 0b                	add    BYTE PTR [ebx],cl
      bd:	c1 00 00             	rol    DWORD PTR [eax],0x0
      c0:	00 03                	add    BYTE PTR [ebx],al
      c2:	01 06                	add    DWORD PTR [esi],eax
      c4:	27                   	daa    
      c5:	00 00                	add    BYTE PTR [eax],al
      c7:	00 0a                	add    BYTE PTR [edx],cl
      c9:	04 45                	add    al,0x45
      cb:	00 00                	add    BYTE PTR [eax],al
      cd:	00 05 01 02 01 00    	add    BYTE PTR ds:0x10201,al
      d3:	00 01                	add    BYTE PTR [ecx],al
      d5:	39 01                	cmp    DWORD PTR [ecx],eax
      d7:	66 01 10             	add    WORD PTR [eax],dx
      da:	00 c6                	add    dh,al
      dc:	01 10                	add    DWORD PTR [eax],edx
      de:	00 38                	add    BYTE PTR [eax],bh
      e0:	00 00                	add    BYTE PTR [eax],al
      e2:	00 2a                	add    BYTE PTR [edx],ch
      e4:	01 00                	add    DWORD PTR [eax],eax
      e6:	00 06                	add    BYTE PTR [esi],al
      e8:	63 68 72             	arpl   WORD PTR [eax+0x72],bp
      eb:	00 01                	add    BYTE PTR [ecx],al
      ed:	39 bc 00 00 00 02 91 	cmp    DWORD PTR [eax+eax*1-0x6efe0000],edi
      f4:	60                   	pusha  
      f5:	0c 7d                	or     al,0x7d
      f7:	04 00                	add    al,0x0
      f9:	00 01                	add    BYTE PTR [ecx],al
      fb:	39 25 00 00 00 02    	cmp    DWORD PTR ds:0x2000000,esp
     101:	91                   	xchg   ecx,eax
     102:	5c                   	pop    esp
     103:	06                   	push   es
     104:	78 00                	js     106 <MB_FLAGS+0x106>
     106:	01 39                	add    DWORD PTR [ecx],edi
     108:	25 00 00 00 02       	and    eax,0x2000000
     10d:	91                   	xchg   ecx,eax
     10e:	58                   	pop    eax
     10f:	06                   	push   es
     110:	79 00                	jns    112 <MB_FLAGS+0x112>
     112:	01 39                	add    DWORD PTR [ecx],edi
     114:	25 00 00 00 02       	and    eax,0x2000000
     119:	91                   	xchg   ecx,eax
     11a:	54                   	push   esp
     11b:	08 6f 66             	or     BYTE PTR [edi+0x66],ch
     11e:	66                   	data16
     11f:	00 01                	add    BYTE PTR [ecx],al
     121:	3a 2a                	cmp    ch,BYTE PTR [edx]
     123:	01 00                	add    DWORD PTR [eax],eax
     125:	00 02                	add    BYTE PTR [edx],al
     127:	91                   	xchg   ecx,eax
     128:	70 00                	jo     12a <MB_FLAGS+0x12a>
     12a:	0a 04 5a             	or     al,BYTE PTR [edx+ebx*2]
     12d:	00 00                	add    BYTE PTR [eax],al
     12f:	00 05 01 ed 00 00    	add    BYTE PTR ds:0xed01,al
     135:	00 01                	add    BYTE PTR [ecx],al
     137:	44                   	inc    esp
     138:	01 c6                	add    esi,eax
     13a:	01 10                	add    DWORD PTR [eax],edx
     13c:	00 b6 02 10 00 70    	add    BYTE PTR [esi+0x70001002],dh
     142:	00 00                	add    BYTE PTR [eax],al
     144:	00 cd                	add    ch,cl
     146:	01 00                	add    DWORD PTR [eax],eax
     148:	00 06                	add    BYTE PTR [esi],al
     14a:	6e                   	outs   dx,BYTE PTR ds:[esi]
     14b:	75 6d                	jne    1ba <MB_FLAGS+0x1ba>
     14d:	00 01                	add    BYTE PTR [ecx],al
     14f:	44                   	inc    esp
     150:	45                   	inc    ebp
     151:	00 00                	add    BYTE PTR [eax],al
     153:	00 02                	add    BYTE PTR [edx],al
     155:	91                   	xchg   ecx,eax
     156:	00 0c 8a             	add    BYTE PTR [edx+ecx*4],cl
     159:	01 00                	add    DWORD PTR [eax],eax
     15b:	00 01                	add    BYTE PTR [ecx],al
     15d:	44                   	inc    esp
     15e:	5a                   	pop    edx
     15f:	00 00                	add    BYTE PTR [eax],al
     161:	00 03                	add    BYTE PTR [ebx],al
     163:	91                   	xchg   ecx,eax
     164:	84 7f 0c             	test   BYTE PTR [edi+0xc],bh
     167:	5d                   	pop    ebp
     168:	00 00                	add    BYTE PTR [eax],al
     16a:	00 01                	add    BYTE PTR [ecx],al
     16c:	44                   	inc    esp
     16d:	25 00 00 00 03       	and    eax,0x3000000
     172:	91                   	xchg   ecx,eax
     173:	80 7f 09 12          	cmp    BYTE PTR [edi+0x9],0x12
     177:	00 00                	add    BYTE PTR [eax],al
     179:	00 01                	add    BYTE PTR [ecx],al
     17b:	46                   	inc    esi
     17c:	b6 00                	mov    dh,0x0
     17e:	00 00                	add    BYTE PTR [eax],al
     180:	02 91 74 09 62 00    	add    dl,BYTE PTR [ecx+0x620974]
     186:	00 00                	add    BYTE PTR [eax],al
     188:	01 47 dd             	add    DWORD PTR [edi-0x23],eax
     18b:	01 00                	add    DWORD PTR [eax],eax
     18d:	00 05 03 e0 10 10    	add    BYTE PTR ds:0x1010e003,al
     193:	00 09                	add    BYTE PTR [ecx],cl
     195:	0c 00                	or     al,0x0
     197:	00 00                	add    BYTE PTR [eax],al
     199:	01 48 e2             	add    DWORD PTR [eax-0x1e],ecx
     19c:	01 00                	add    DWORD PTR [eax],eax
     19e:	00 05 03 a0 10 10    	add    BYTE PTR ds:0x1010a003,al
     1a4:	00 08                	add    BYTE PTR [eax],cl
     1a6:	69 00 01 52 45 00    	imul   eax,DWORD PTR [eax],0x455201
     1ac:	00 00                	add    BYTE PTR [eax],al
     1ae:	02 91 70 08 6f 75    	add    dl,BYTE PTR [ecx+0x756f0870]
     1b4:	74 00                	je     1b6 <MB_FLAGS+0x1b6>
     1b6:	01 53 e7             	add    DWORD PTR [ebx-0x19],edx
     1b9:	01 00                	add    DWORD PTR [eax],eax
     1bb:	00 03                	add    BYTE PTR [ebx],al
     1bd:	91                   	xchg   ecx,eax
     1be:	88 7f 08             	mov    BYTE PTR [edi+0x8],bh
     1c1:	61                   	popa   
     1c2:	00 01                	add    BYTE PTR [ecx],al
     1c4:	5d                   	pop    ebp
     1c5:	45                   	inc    ebp
     1c6:	00 00                	add    BYTE PTR [eax],al
     1c8:	00 02                	add    BYTE PTR [edx],al
     1ca:	91                   	xchg   ecx,eax
     1cb:	6c                   	ins    BYTE PTR es:[edi],dx
     1cc:	00 0d c1 00 00 00    	add    BYTE PTR ds:0xc1,cl
     1d2:	dd 01                	fld    QWORD PTR [ecx]
     1d4:	00 00                	add    BYTE PTR [eax],al
     1d6:	0e                   	push   cs
     1d7:	3e 00 00             	add    BYTE PTR ds:[eax],al
     1da:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
     1dd:	0b cd                	or     ecx,ebp
     1df:	01 00                	add    DWORD PTR [eax],eax
     1e1:	00 0b                	add    BYTE PTR [ebx],cl
     1e3:	cd 01                	int    0x1
     1e5:	00 00                	add    BYTE PTR [eax],al
     1e7:	0d c1 00 00 00       	or     eax,0xc1
     1ec:	f7 01 00 00 0e 3e    	test   DWORD PTR [ecx],0x3e0e0000
     1f2:	00 00                	add    BYTE PTR [eax],al
     1f4:	00 63 00             	add    BYTE PTR [ebx+0x0],ah
     1f7:	09 c0                	or     eax,eax
     1f9:	00 00                	add    BYTE PTR [eax],al
     1fb:	00 03                	add    BYTE PTR [ebx],al
     1fd:	0a 08                	or     cl,BYTE PTR [eax]
     1ff:	02 00                	add    al,BYTE PTR [eax]
     201:	00 05 03 00 10 10    	add    BYTE PTR ds:0x10100003,al
     207:	00 0b                	add    BYTE PTR [ebx],cl
     209:	25 00 00 00 00       	and    eax,0x0
     20e:	1e                   	push   ds
     20f:	02 00                	add    al,BYTE PTR [eax]
     211:	00 02                	add    BYTE PTR [edx],al
     213:	00 b1 00 00 00 04    	add    BYTE PTR [ecx+0x4000000],dh
     219:	01 00                	add    DWORD PTR [eax],eax
     21b:	00 00                	add    BYTE PTR [eax],al
     21d:	00 01                	add    BYTE PTR [ecx],al
     21f:	cb                   	retf   
     220:	00 00                	add    BYTE PTR [eax],al
     222:	00 a3 00 00 00 b8    	add    BYTE PTR [ebx-0x48000000],ah
     228:	02 10                	add    dl,BYTE PTR [eax]
     22a:	00 66 05             	add    BYTE PTR [esi+0x5],ah
     22d:	10 00                	adc    BYTE PTR [eax],al
     22f:	f8                   	clc    
     230:	00 00                	add    BYTE PTR [eax],al
     232:	00 02                	add    BYTE PTR [edx],al
     234:	19 00                	sbb    DWORD PTR [eax],eax
     236:	00 00                	add    BYTE PTR [eax],al
     238:	03 09                	add    ecx,DWORD PTR [ecx]
     23a:	30 00                	xor    BYTE PTR [eax],al
     23c:	00 00                	add    BYTE PTR [eax],al
     23e:	03 01                	add    eax,DWORD PTR [ecx]
     240:	08 1e                	or     BYTE PTR [esi],bl
     242:	00 00                	add    BYTE PTR [eax],al
     244:	00 03                	add    BYTE PTR [ebx],al
     246:	02 07                	add    al,BYTE PTR [edi]
     248:	2c 00                	sub    al,0x0
     24a:	00 00                	add    BYTE PTR [eax],al
     24c:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
     24f:	79 00                	jns    251 <MB_FLAGS+0x251>
     251:	00 00                	add    BYTE PTR [eax],al
     253:	04 04                	add    al,0x4
     255:	05 69 6e 74 00       	add    eax,0x746e69
     25a:	03 01                	add    eax,DWORD PTR [ecx]
     25c:	06                   	push   es
     25d:	20 00                	and    BYTE PTR [eax],al
     25f:	00 00                	add    BYTE PTR [eax],al
     261:	02 fb                	add    bh,bl
     263:	00 00                	add    BYTE PTR [eax],al
     265:	00 03                	add    BYTE PTR [ebx],al
     267:	0f 30                	wrmsr  
     269:	00 00                	add    BYTE PTR [eax],al
     26b:	00 03                	add    BYTE PTR [ebx],al
     26d:	02 05 94 00 00 00    	add    al,BYTE PTR ds:0x94
     273:	02 56 00             	add    dl,BYTE PTR [esi+0x0]
     276:	00 00                	add    BYTE PTR [eax],al
     278:	03 12                	add    edx,DWORD PTR [edx]
     27a:	37                   	aaa    
     27b:	00 00                	add    BYTE PTR [eax],al
     27d:	00 03                	add    BYTE PTR [ebx],al
     27f:	08 05 86 00 00 00    	or     BYTE PTR ds:0x86,al
     285:	03 08                	add    ecx,DWORD PTR [eax]
     287:	07                   	pop    es
     288:	6f                   	outs   dx,DWORD PTR ds:[esi]
     289:	00 00                	add    BYTE PTR [eax],al
     28b:	00 05 e0 00 00 00    	add    BYTE PTR ds:0xe0,al
     291:	01 19                	add    DWORD PTR [ecx],ebx
     293:	01 b8 02 10 00 d6    	add    DWORD PTR [eax-0x29ffeffe],edi
     299:	02 10                	add    dl,BYTE PTR [eax]
     29b:	00 a8 00 00 00 b3    	add    BYTE PTR [eax-0x4d000000],ch
     2a1:	00 00                	add    BYTE PTR [eax],al
     2a3:	00 06                	add    BYTE PTR [esi],al
     2a5:	f6 00 00             	test   BYTE PTR [eax],0x0
     2a8:	00 01                	add    BYTE PTR [ecx],al
     2aa:	19 65 00             	sbb    DWORD PTR [ebp+0x0],esp
     2ad:	00 00                	add    BYTE PTR [eax],al
     2af:	02 91 74 07 76 61    	add    dl,BYTE PTR [ecx+0x61760774]
     2b5:	6c                   	ins    BYTE PTR es:[edi],dx
     2b6:	00 01                	add    BYTE PTR [ecx],al
     2b8:	19 53 00             	sbb    DWORD PTR [ebx+0x0],edx
     2bb:	00 00                	add    BYTE PTR [eax],al
     2bd:	02 91 70 00 08 01    	add    dl,BYTE PTR [ecx+0x1080070]
     2c3:	e5 00                	in     eax,0x0
     2c5:	00 00                	add    BYTE PTR [eax],al
     2c7:	02 0d 01 d6 02 10    	add    cl,BYTE PTR ds:0x1002d601
     2cd:	00 47 04             	add    BYTE PTR [edi+0x4],al
     2d0:	10 00                	adc    BYTE PTR [eax],al
     2d2:	e0 00                	loopne 2d4 <MB_FLAGS+0x2d4>
     2d4:	00 00                	add    BYTE PTR [eax],al
     2d6:	ea 00 00 00 07 63 68 	jmp    0x6863:0x7000000
     2dd:	72 00                	jb     2df <MB_FLAGS+0x2df>
     2df:	02 0d ea 00 00 00    	add    cl,BYTE PTR ds:0xea
     2e5:	02 91 00 09 0a 9e    	add    dl,BYTE PTR [ecx-0x61f5f700]
     2eb:	00 00                	add    BYTE PTR [eax],al
     2ed:	00 02                	add    BYTE PTR [edx],al
     2ef:	0f fc 00             	paddb  mm0,QWORD PTR [eax]
     2f2:	00 00                	add    BYTE PTR [eax],al
     2f4:	02 91 6c 00 0b 04    	add    dl,BYTE PTR [ecx+0x40b006c]
     2fa:	f0 00 00             	lock add BYTE PTR [eax],al
     2fd:	00 0c f5 00 00 00 03 	add    BYTE PTR [esi*8+0x3000000],cl
     304:	01 06                	add    DWORD PTR [esi],eax
     306:	27                   	daa    
     307:	00 00                	add    BYTE PTR [eax],al
     309:	00 0b                	add    BYTE PTR [ebx],cl
     30b:	04 45                	add    al,0x45
     30d:	00 00                	add    BYTE PTR [eax],al
     30f:	00 08                	add    BYTE PTR [eax],cl
     311:	01 01                	add    DWORD PTR [ecx],eax
     313:	01 00                	add    DWORD PTR [eax],eax
     315:	00 02                	add    BYTE PTR [edx],al
     317:	3f                   	aas    
     318:	01 47 04             	add    DWORD PTR [edi+0x4],eax
     31b:	10 00                	adc    BYTE PTR [eax],al
     31d:	83 04 10 00          	add    DWORD PTR [eax+edx*1],0x0
     321:	18 01                	sbb    BYTE PTR [ecx],al
     323:	00 00                	add    BYTE PTR [eax],al
     325:	50                   	push   eax
     326:	01 00                	add    DWORD PTR [eax],eax
     328:	00 07                	add    BYTE PTR [edi],al
     32a:	63 68 72             	arpl   WORD PTR [eax+0x72],bp
     32d:	00 02                	add    BYTE PTR [edx],al
     32f:	3f                   	aas    
     330:	f0 00 00             	lock add BYTE PTR [eax],al
     333:	00 02                	add    BYTE PTR [edx],al
     335:	91                   	xchg   ecx,eax
     336:	70 06                	jo     33e <MB_FLAGS+0x33e>
     338:	7d 04                	jge    33e <MB_FLAGS+0x33e>
     33a:	00 00                	add    BYTE PTR [eax],al
     33c:	02 3f                	add    bh,BYTE PTR [edi]
     33e:	25 00 00 00 02       	and    eax,0x2000000
     343:	91                   	xchg   ecx,eax
     344:	6c                   	ins    BYTE PTR es:[edi],dx
     345:	07                   	pop    es
     346:	78 00                	js     348 <MB_FLAGS+0x348>
     348:	02 3f                	add    bh,BYTE PTR [edi]
     34a:	25 00 00 00 02       	and    eax,0x2000000
     34f:	91                   	xchg   ecx,eax
     350:	68 07 79 00 02       	push   0x2007907
     355:	3f                   	aas    
     356:	25 00 00 00 02       	and    eax,0x2000000
     35b:	91                   	xchg   ecx,eax
     35c:	64 00 08             	add    BYTE PTR fs:[eax],cl
     35f:	01 ec                	add    esp,ebp
     361:	00 00                	add    BYTE PTR [eax],al
     363:	00 02                	add    BYTE PTR [edx],al
     365:	47                   	inc    edi
     366:	01 83 04 10 00 66    	add    DWORD PTR [ebx+0x66001004],eax
     36c:	05 10 00 50 01       	add    eax,0x1500010
     371:	00 00                	add    BYTE PTR [eax],al
     373:	e1 01                	loope  376 <MB_FLAGS+0x376>
     375:	00 00                	add    BYTE PTR [eax],al
     377:	07                   	pop    es
     378:	6e                   	outs   dx,BYTE PTR ds:[esi]
     379:	75 6d                	jne    3e8 <MB_FLAGS+0x3e8>
     37b:	00 02                	add    BYTE PTR [edx],al
     37d:	47                   	inc    edi
     37e:	45                   	inc    ebp
     37f:	00 00                	add    BYTE PTR [eax],al
     381:	00 02                	add    BYTE PTR [edx],al
     383:	91                   	xchg   ecx,eax
     384:	00 06                	add    BYTE PTR [esi],al
     386:	8a 01                	mov    al,BYTE PTR [ecx]
     388:	00 00                	add    BYTE PTR [eax],al
     38a:	02 47 65             	add    al,BYTE PTR [edi+0x65]
     38d:	00 00                	add    BYTE PTR [eax],al
     38f:	00 03                	add    BYTE PTR [ebx],al
     391:	91                   	xchg   ecx,eax
     392:	84 7f 06             	test   BYTE PTR [edi+0x6],bh
     395:	5d                   	pop    ebp
     396:	00 00                	add    BYTE PTR [eax],al
     398:	00 02                	add    BYTE PTR [edx],al
     39a:	47                   	inc    edi
     39b:	25 00 00 00 03       	and    eax,0x3000000
     3a0:	91                   	xchg   ecx,eax
     3a1:	80 7f 0a 12          	cmp    BYTE PTR [edi+0xa],0x12
     3a5:	00 00                	add    BYTE PTR [eax],al
     3a7:	00 02                	add    BYTE PTR [edx],al
     3a9:	49                   	dec    ecx
     3aa:	ea 00 00 00 02 91 74 	jmp    0x7491:0x2000000
     3b1:	0a 62 00             	or     ah,BYTE PTR [edx+0x0]
     3b4:	00 00                	add    BYTE PTR [eax],al
     3b6:	02 4a f1             	add    cl,BYTE PTR [edx-0xf]
     3b9:	01 00                	add    DWORD PTR [eax],eax
     3bb:	00 05 03 00 12 10    	add    BYTE PTR ds:0x10120003,al
     3c1:	00 0a                	add    BYTE PTR [edx],cl
     3c3:	0c 00                	or     al,0x0
     3c5:	00 00                	add    BYTE PTR [eax],al
     3c7:	02 4b f6             	add    cl,BYTE PTR [ebx-0xa]
     3ca:	01 00                	add    DWORD PTR [eax],eax
     3cc:	00 05 03 c0 11 10    	add    BYTE PTR ds:0x1011c003,al
     3d2:	00 0d 69 00 02 55    	add    BYTE PTR ds:0x55020069,cl
     3d8:	45                   	inc    ebp
     3d9:	00 00                	add    BYTE PTR [eax],al
     3db:	00 02                	add    BYTE PTR [edx],al
     3dd:	91                   	xchg   ecx,eax
     3de:	70 0d                	jo     3ed <MB_FLAGS+0x3ed>
     3e0:	6f                   	outs   dx,DWORD PTR ds:[esi]
     3e1:	75 74                	jne    457 <MB_FLAGS+0x457>
     3e3:	00 02                	add    BYTE PTR [edx],al
     3e5:	56                   	push   esi
     3e6:	fb                   	sti    
     3e7:	01 00                	add    DWORD PTR [eax],eax
     3e9:	00 03                	add    BYTE PTR [ebx],al
     3eb:	91                   	xchg   ecx,eax
     3ec:	8c 7f 00             	mov    WORD PTR [edi+0x0],?
     3ef:	0e                   	push   cs
     3f0:	f5                   	cmc    
     3f1:	00 00                	add    BYTE PTR [eax],al
     3f3:	00 f1                	add    cl,dh
     3f5:	01 00                	add    DWORD PTR [eax],eax
     3f7:	00 0f                	add    BYTE PTR [edi],cl
     3f9:	3e 00 00             	add    BYTE PTR ds:[eax],al
     3fc:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
     3ff:	0c e1                	or     al,0xe1
     401:	01 00                	add    DWORD PTR [eax],eax
     403:	00 0c e1             	add    BYTE PTR [ecx+eiz*8],cl
     406:	01 00                	add    DWORD PTR [eax],eax
     408:	00 0e                	add    BYTE PTR [esi],cl
     40a:	f5                   	cmc    
     40b:	00 00                	add    BYTE PTR [eax],al
     40d:	00 0b                	add    BYTE PTR [ebx],cl
     40f:	02 00                	add    al,BYTE PTR [eax]
     411:	00 0f                	add    BYTE PTR [edi],cl
     413:	3e 00 00             	add    BYTE PTR ds:[eax],al
     416:	00 63 00             	add    BYTE PTR [ebx+0x0],ah
     419:	0a bf 00 00 00 04    	or     bh,BYTE PTR [edi+0x4000000]
     41f:	1d 1c 02 00 00       	sbb    eax,0x21c
     424:	05 03 20 11 10       	add    eax,0x10112003
     429:	00 0c 25 00 00 00 00 	add    BYTE PTR [eiz*1+0x0],cl
     430:	8a 02                	mov    al,BYTE PTR [edx]
     432:	00 00                	add    BYTE PTR [eax],al
     434:	02 00                	add    al,BYTE PTR [eax]
     436:	77 01                	ja     439 <MB_FLAGS+0x439>
     438:	00 00                	add    BYTE PTR [eax],al
     43a:	04 01                	add    al,0x1
     43c:	00 00                	add    BYTE PTR [eax],al
     43e:	00 00                	add    BYTE PTR [eax],al
     440:	01 a8 01 00 00 a3    	add    DWORD PTR [eax-0x5cffffff],ebp
     446:	00 00                	add    BYTE PTR [eax],al
     448:	00 68 05             	add    BYTE PTR [eax+0x5],ch
     44b:	10 00                	adc    BYTE PTR [eax],al
     44d:	73 07                	jae    456 <MB_FLAGS+0x456>
     44f:	10 00                	adc    BYTE PTR [eax],al
     451:	3e 02 00             	add    al,BYTE PTR ds:[eax]
     454:	00 02                	add    BYTE PTR [edx],al
     456:	19 00                	sbb    DWORD PTR [eax],eax
     458:	00 00                	add    BYTE PTR [eax],al
     45a:	03 09                	add    ecx,DWORD PTR [ecx]
     45c:	30 00                	xor    BYTE PTR [eax],al
     45e:	00 00                	add    BYTE PTR [eax],al
     460:	03 01                	add    eax,DWORD PTR [ecx]
     462:	08 1e                	or     BYTE PTR [esi],bl
     464:	00 00                	add    BYTE PTR [eax],al
     466:	00 03                	add    BYTE PTR [ebx],al
     468:	02 07                	add    al,BYTE PTR [edi]
     46a:	2c 00                	sub    al,0x0
     46c:	00 00                	add    BYTE PTR [eax],al
     46e:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
     471:	79 00                	jns    473 <MB_FLAGS+0x473>
     473:	00 00                	add    BYTE PTR [eax],al
     475:	04 04                	add    al,0x4
     477:	05 69 6e 74 00       	add    eax,0x746e69
     47c:	03 01                	add    eax,DWORD PTR [ecx]
     47e:	06                   	push   es
     47f:	20 00                	and    BYTE PTR [eax],al
     481:	00 00                	add    BYTE PTR [eax],al
     483:	02 fb                	add    bh,bl
     485:	00 00                	add    BYTE PTR [eax],al
     487:	00 03                	add    BYTE PTR [ebx],al
     489:	0f 30                	wrmsr  
     48b:	00 00                	add    BYTE PTR [eax],al
     48d:	00 03                	add    BYTE PTR [ebx],al
     48f:	02 05 94 00 00 00    	add    al,BYTE PTR ds:0x94
     495:	02 56 00             	add    dl,BYTE PTR [esi+0x0]
     498:	00 00                	add    BYTE PTR [eax],al
     49a:	03 12                	add    edx,DWORD PTR [edx]
     49c:	37                   	aaa    
     49d:	00 00                	add    BYTE PTR [eax],al
     49f:	00 03                	add    BYTE PTR [ebx],al
     4a1:	08 05 86 00 00 00    	or     BYTE PTR ds:0x86,al
     4a7:	03 08                	add    ecx,DWORD PTR [eax]
     4a9:	07                   	pop    es
     4aa:	6f                   	outs   dx,DWORD PTR ds:[esi]
     4ab:	00 00                	add    BYTE PTR [eax],al
     4ad:	00 05 06 04 16 bf    	add    BYTE PTR ds:0xbf160406,al
     4b3:	00 00                	add    BYTE PTR [eax],al
     4b5:	00 06                	add    BYTE PTR [esi],al
     4b7:	88 01                	mov    BYTE PTR [ecx],al
     4b9:	00 00                	add    BYTE PTR [eax],al
     4bb:	04 19                	add    al,0x19
     4bd:	65 00 00             	add    BYTE PTR gs:[eax],al
     4c0:	00 02                	add    BYTE PTR [edx],al
     4c2:	23 00                	and    eax,DWORD PTR [eax]
     4c4:	06                   	push   es
     4c5:	74 01                	je     4c8 <MB_FLAGS+0x4c8>
     4c7:	00 00                	add    BYTE PTR [eax],al
     4c9:	04 1c                	add    al,0x1c
     4cb:	65 00 00             	add    BYTE PTR gs:[eax],al
     4ce:	00 02                	add    BYTE PTR [edx],al
     4d0:	23 02                	and    eax,DWORD PTR [edx]
     4d2:	06                   	push   es
     4d3:	cb                   	retf   
     4d4:	01 00                	add    DWORD PTR [eax],eax
     4d6:	00 04 1f             	add    BYTE PTR [edi+ebx*1],al
     4d9:	25 00 00 00 02       	and    eax,0x2000000
     4de:	23 04 06             	and    eax,DWORD PTR [esi+eax*1]
     4e1:	0c 01                	or     al,0x1
     4e3:	00 00                	add    BYTE PTR [eax],al
     4e5:	04 22                	add    al,0x22
     4e7:	25 00 00 00 02       	and    eax,0x2000000
     4ec:	23 05 00 02 42 01    	and    eax,DWORD PTR ds:0x1420200
     4f2:	00 00                	add    BYTE PTR [eax],al
     4f4:	04 24                	add    al,0x24
     4f6:	7e 00                	jle    4f8 <MB_FLAGS+0x4f8>
     4f8:	00 00                	add    BYTE PTR [eax],al
     4fa:	07                   	pop    es
     4fb:	69 6e 62 00 01 0a 01 	imul   ebp,DWORD PTR [esi+0x62],0x10a0100
     502:	53                   	push   ebx
     503:	00 00                	add    BYTE PTR [eax],al
     505:	00 68 05             	add    BYTE PTR [eax+0x5],ch
     508:	10 00                	adc    BYTE PTR [eax],al
     50a:	92                   	xchg   edx,eax
     50b:	05 10 00 88 01       	add    eax,0x1880010
     510:	00 00                	add    BYTE PTR [eax],al
     512:	03 01                	add    eax,DWORD PTR [ecx]
     514:	00 00                	add    BYTE PTR [eax],al
     516:	08 f6                	or     dh,dh
     518:	00 00                	add    BYTE PTR [eax],al
     51a:	00 01                	add    BYTE PTR [ecx],al
     51c:	0a 65 00             	or     ah,BYTE PTR [ebp+0x0]
     51f:	00 00                	add    BYTE PTR [eax],al
     521:	02 91 60 09 13 01    	add    dl,BYTE PTR [ecx+0x1130960]
     527:	00 00                	add    BYTE PTR [eax],al
     529:	01 0c 53             	add    DWORD PTR [ebx+edx*2],ecx
     52c:	00 00                	add    BYTE PTR [eax],al
     52e:	00 02                	add    BYTE PTR [edx],al
     530:	91                   	xchg   ecx,eax
     531:	73 00                	jae    533 <MB_FLAGS+0x533>
     533:	0a e0                	or     ah,al
     535:	00 00                	add    BYTE PTR [eax],al
     537:	00 01                	add    BYTE PTR [ecx],al
     539:	19 01                	sbb    DWORD PTR [ecx],eax
     53b:	92                   	xchg   edx,eax
     53c:	05 10 00 b0 05       	add    eax,0x5b00010
     541:	10 00                	adc    BYTE PTR [eax],al
     543:	c0 01 00             	rol    BYTE PTR [ecx],0x0
     546:	00 38                	add    BYTE PTR [eax],bh
     548:	01 00                	add    DWORD PTR [eax],eax
     54a:	00 08                	add    BYTE PTR [eax],cl
     54c:	f6 00 00             	test   BYTE PTR [eax],0x0
     54f:	00 01                	add    BYTE PTR [ecx],al
     551:	19 65 00             	sbb    DWORD PTR [ebp+0x0],esp
     554:	00 00                	add    BYTE PTR [eax],al
     556:	02 91 74 0b 76 61    	add    dl,BYTE PTR [ecx+0x61760b74]
     55c:	6c                   	ins    BYTE PTR es:[edi],dx
     55d:	00 01                	add    BYTE PTR [ecx],al
     55f:	19 53 00             	sbb    DWORD PTR [ebx+0x0],edx
     562:	00 00                	add    BYTE PTR [eax],al
     564:	02 91 70 00 0c 01    	add    dl,BYTE PTR [ecx+0x10c0070]
     56a:	4d                   	dec    ebp
     56b:	01 00                	add    DWORD PTR [eax],eax
     56d:	00 02                	add    BYTE PTR [edx],al
     56f:	06                   	push   es
     570:	01 b0 05 10 00 d5    	add    DWORD PTR [eax-0x2affeffb],esi
     576:	06                   	push   es
     577:	10 00                	adc    BYTE PTR [eax],al
     579:	f8                   	clc    
     57a:	01 00                	add    DWORD PTR [eax],eax
     57c:	00 c1                	add    cl,al
     57e:	01 00                	add    DWORD PTR [eax],eax
     580:	00 08                	add    BYTE PTR [eax],cl
     582:	7b 01                	jnp    585 <MB_FLAGS+0x585>
     584:	00 00                	add    BYTE PTR [eax],al
     586:	02 06                	add    al,BYTE PTR [esi]
     588:	c1 01 00             	rol    DWORD PTR [ecx],0x0
     58b:	00 02                	add    BYTE PTR [edx],al
     58d:	91                   	xchg   ecx,eax
     58e:	00 08                	add    BYTE PTR [eax],cl
     590:	8a 01                	mov    al,BYTE PTR [ecx]
     592:	00 00                	add    BYTE PTR [eax],al
     594:	02 06                	add    al,BYTE PTR [esi]
     596:	65 00 00             	add    BYTE PTR gs:[eax],al
     599:	00 02                	add    BYTE PTR [edx],al
     59b:	91                   	xchg   ecx,eax
     59c:	60                   	pusha  
     59d:	08 76 01             	or     BYTE PTR [esi+0x1],dh
     5a0:	00 00                	add    BYTE PTR [eax],al
     5a2:	02 06                	add    al,BYTE PTR [esi]
     5a4:	65 00 00             	add    BYTE PTR gs:[eax],al
     5a7:	00 02                	add    BYTE PTR [edx],al
     5a9:	91                   	xchg   ecx,eax
     5aa:	5c                   	pop    esp
     5ab:	08 cd                	or     ch,cl
     5ad:	01 00                	add    DWORD PTR [eax],eax
     5af:	00 02                	add    BYTE PTR [edx],al
     5b1:	07                   	pop    es
     5b2:	25 00 00 00 02       	and    eax,0x2000000
     5b7:	91                   	xchg   ecx,eax
     5b8:	58                   	pop    eax
     5b9:	08 0e                	or     BYTE PTR [esi],cl
     5bb:	01 00                	add    DWORD PTR [eax],eax
     5bd:	00 02                	add    BYTE PTR [edx],al
     5bf:	07                   	pop    es
     5c0:	25 00 00 00 02       	and    eax,0x2000000
     5c5:	91                   	xchg   ecx,eax
     5c6:	54                   	push   esp
     5c7:	0d 02 02 0f b2       	or     eax,0xb20f0202
     5cc:	01 00                	add    DWORD PTR [eax],eax
     5ce:	00 0e                	add    BYTE PTR [esi],cl
     5d0:	62 00                	bound  eax,QWORD PTR [eax]
     5d2:	02 10                	add    dl,BYTE PTR [eax]
     5d4:	c7 01 00 00 0e 77    	mov    DWORD PTR [ecx],0x770e0000
     5da:	00 02                	add    BYTE PTR [edx],al
     5dc:	11 65 00             	adc    DWORD PTR [ebp+0x0],esp
     5df:	00 00                	add    BYTE PTR [eax],al
     5e1:	00 09                	add    BYTE PTR [ecx],cl
     5e3:	80 01 00             	add    BYTE PTR [ecx],0x0
     5e6:	00 02                	add    BYTE PTR [edx],al
     5e8:	12 97 01 00 00 02    	adc    dl,BYTE PTR [edi+0x2000001]
     5ee:	91                   	xchg   ecx,eax
     5ef:	72 00                	jb     5f1 <MB_FLAGS+0x5f1>
     5f1:	0f 04                	(bad)  
     5f3:	bf 00 00 00 10       	mov    edi,0x10000000
     5f8:	53                   	push   ebx
     5f9:	00 00                	add    BYTE PTR [eax],al
     5fb:	00 d7                	add    bh,dl
     5fd:	01 00                	add    DWORD PTR [eax],eax
     5ff:	00 11                	add    BYTE PTR [ecx],dl
     601:	3e 00 00             	add    BYTE PTR ds:[eax],al
     604:	00 01                	add    BYTE PTR [ecx],al
     606:	00 12                	add    BYTE PTR [edx],dl
     608:	01 32                	add    DWORD PTR [edx],esi
     60a:	01 00                	add    DWORD PTR [eax],eax
     60c:	00 02                	add    BYTE PTR [edx],al
     60e:	30 01                	xor    BYTE PTR [ecx],al
     610:	53                   	push   ebx
     611:	00 00                	add    BYTE PTR [eax],al
     613:	00 d5                	add    ch,dl
     615:	06                   	push   es
     616:	10 00                	adc    BYTE PTR [eax],al
     618:	fe 06                	inc    BYTE PTR [esi]
     61a:	10 00                	adc    BYTE PTR [eax],al
     61c:	30 02                	xor    BYTE PTR [edx],al
     61e:	00 00                	add    BYTE PTR [eax],al
     620:	03 02                	add    eax,DWORD PTR [edx]
     622:	00 00                	add    BYTE PTR [eax],al
     624:	08 7b 01             	or     BYTE PTR [ebx+0x1],bh
     627:	00 00                	add    BYTE PTR [eax],al
     629:	02 30                	add    dh,BYTE PTR [eax]
     62b:	c1 01 00             	rol    DWORD PTR [ecx],0x0
     62e:	00 02                	add    BYTE PTR [edx],al
     630:	91                   	xchg   ecx,eax
     631:	00 00                	add    BYTE PTR [eax],al
     633:	0c 01                	or     al,0x1
     635:	63 01                	arpl   WORD PTR [ecx],ax
     637:	00 00                	add    BYTE PTR [eax],al
     639:	02 3a                	add    bh,BYTE PTR [edx]
     63b:	01 fe                	add    esi,edi
     63d:	06                   	push   es
     63e:	10 00                	adc    BYTE PTR [eax],al
     640:	35 07 10 00 68       	xor    eax,0x68001007
     645:	02 00                	add    al,BYTE PTR [eax]
     647:	00 39                	add    BYTE PTR [ecx],bh
     649:	02 00                	add    al,BYTE PTR [eax]
     64b:	00 08                	add    BYTE PTR [eax],cl
     64d:	7b 01                	jnp    650 <MB_FLAGS+0x650>
     64f:	00 00                	add    BYTE PTR [eax],al
     651:	02 3a                	add    bh,BYTE PTR [edx]
     653:	c1 01 00             	rol    DWORD PTR [ecx],0x0
     656:	00 02                	add    BYTE PTR [edx],al
     658:	91                   	xchg   ecx,eax
     659:	00 08                	add    BYTE PTR [eax],cl
     65b:	0e                   	push   cs
     65c:	01 00                	add    DWORD PTR [eax],eax
     65e:	00 02                	add    BYTE PTR [edx],al
     660:	3a 25 00 00 00 02    	cmp    ah,BYTE PTR ds:0x2000000
     666:	91                   	xchg   ecx,eax
     667:	6c                   	ins    BYTE PTR es:[edi],dx
     668:	00 12                	add    BYTE PTR [edx],dl
     66a:	01 1e                	add    DWORD PTR [esi],ebx
     66c:	01 00                	add    DWORD PTR [eax],eax
     66e:	00 02                	add    BYTE PTR [edx],al
     670:	44                   	inc    esp
     671:	01 53 00             	add    DWORD PTR [ebx+0x0],edx
     674:	00 00                	add    BYTE PTR [eax],al
     676:	35 07 10 00 54       	xor    eax,0x54001007
     67b:	07                   	pop    es
     67c:	10 00                	adc    BYTE PTR [eax],al
     67e:	a0 02 00 00 65       	mov    al,ds:0x65000002
     683:	02 00                	add    al,BYTE PTR [eax]
     685:	00 08                	add    BYTE PTR [eax],cl
     687:	7b 01                	jnp    68a <MB_FLAGS+0x68a>
     689:	00 00                	add    BYTE PTR [eax],al
     68b:	02 44 c1 01          	add    al,BYTE PTR [ecx+eax*8+0x1]
     68f:	00 00                	add    BYTE PTR [eax],al
     691:	02 91 00 00 13 01    	add    dl,BYTE PTR [ecx+0x1130000]
     697:	8f 01                	pop    DWORD PTR [ecx]
     699:	00 00                	add    BYTE PTR [eax],al
     69b:	02 4b 01             	add    cl,BYTE PTR [ebx+0x1]
     69e:	53                   	push   ebx
     69f:	00 00                	add    BYTE PTR [eax],al
     6a1:	00 54 07 10          	add    BYTE PTR [edi+eax*1+0x10],dl
     6a5:	00 73 07             	add    BYTE PTR [ebx+0x7],dh
     6a8:	10 00                	adc    BYTE PTR [eax],al
     6aa:	d8 02                	fadd   DWORD PTR [edx]
     6ac:	00 00                	add    BYTE PTR [eax],al
     6ae:	08 7b 01             	or     BYTE PTR [ebx+0x1],bh
     6b1:	00 00                	add    BYTE PTR [eax],al
     6b3:	02 4b c1             	add    cl,BYTE PTR [ebx-0x3f]
     6b6:	01 00                	add    DWORD PTR [eax],eax
     6b8:	00 02                	add    BYTE PTR [edx],al
     6ba:	91                   	xchg   ecx,eax
     6bb:	00 00                	add    BYTE PTR [eax],al
     6bd:	00 1a                	add    BYTE PTR [edx],bl
     6bf:	02 00                	add    al,BYTE PTR [eax]
     6c1:	00 02                	add    BYTE PTR [edx],al
     6c3:	00 9f 02 00 00 04    	add    BYTE PTR [edi+0x4000002],bl
     6c9:	01 00                	add    DWORD PTR [eax],eax
     6cb:	00 00                	add    BYTE PTR [eax],al
     6cd:	00 01                	add    BYTE PTR [ecx],al
     6cf:	d4 01                	aam    0x1
     6d1:	00 00                	add    BYTE PTR [eax],al
     6d3:	a3 00 00 00 a8       	mov    ds:0xa8000000,eax
     6d8:	07                   	pop    es
     6d9:	10 00                	adc    BYTE PTR [eax],al
     6db:	0d 0a 10 00 8e       	or     eax,0x8e00100a
     6e0:	03 00                	add    eax,DWORD PTR [eax]
     6e2:	00 02                	add    BYTE PTR [edx],al
     6e4:	19 00                	sbb    DWORD PTR [eax],eax
     6e6:	00 00                	add    BYTE PTR [eax],al
     6e8:	02 09                	add    cl,BYTE PTR [ecx]
     6ea:	30 00                	xor    BYTE PTR [eax],al
     6ec:	00 00                	add    BYTE PTR [eax],al
     6ee:	03 01                	add    eax,DWORD PTR [ecx]
     6f0:	08 1e                	or     BYTE PTR [esi],bl
     6f2:	00 00                	add    BYTE PTR [eax],al
     6f4:	00 03                	add    BYTE PTR [ebx],al
     6f6:	02 07                	add    al,BYTE PTR [edi]
     6f8:	2c 00                	sub    al,0x0
     6fa:	00 00                	add    BYTE PTR [eax],al
     6fc:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
     6ff:	79 00                	jns    701 <MB_FLAGS+0x701>
     701:	00 00                	add    BYTE PTR [eax],al
     703:	04 04                	add    al,0x4
     705:	05 69 6e 74 00       	add    eax,0x746e69
     70a:	03 01                	add    eax,DWORD PTR [ecx]
     70c:	06                   	push   es
     70d:	20 00                	and    BYTE PTR [eax],al
     70f:	00 00                	add    BYTE PTR [eax],al
     711:	02 fb                	add    bh,bl
     713:	00 00                	add    BYTE PTR [eax],al
     715:	00 02                	add    BYTE PTR [edx],al
     717:	0f 30                	wrmsr  
     719:	00 00                	add    BYTE PTR [eax],al
     71b:	00 03                	add    BYTE PTR [ebx],al
     71d:	02 05 94 00 00 00    	add    al,BYTE PTR ds:0x94
     723:	02 56 00             	add    dl,BYTE PTR [esi+0x0]
     726:	00 00                	add    BYTE PTR [eax],al
     728:	02 12                	add    dl,BYTE PTR [edx]
     72a:	37                   	aaa    
     72b:	00 00                	add    BYTE PTR [eax],al
     72d:	00 02                	add    BYTE PTR [edx],al
     72f:	60                   	pusha  
     730:	02 00                	add    al,BYTE PTR [eax]
     732:	00 02                	add    BYTE PTR [edx],al
     734:	15 3e 00 00 00       	adc    eax,0x3e
     739:	03 08                	add    ecx,DWORD PTR [eax]
     73b:	05 86 00 00 00       	add    eax,0x86
     740:	03 08                	add    ecx,DWORD PTR [eax]
     742:	07                   	pop    es
     743:	6f                   	outs   dx,DWORD PTR ds:[esi]
     744:	00 00                	add    BYTE PTR [eax],al
     746:	00 05 0d 02 00 00    	add    BYTE PTR ds:0x20d,al
     74c:	08 03                	or     BYTE PTR [ebx],al
     74e:	39 ea                	cmp    edx,ebp
     750:	00 00                	add    BYTE PTR [eax],al
     752:	00 06                	add    BYTE PTR [esi],al
     754:	d4 02                	aam    0x2
     756:	00 00                	add    BYTE PTR [eax],al
     758:	03 3a                	add    edi,DWORD PTR [edx]
     75a:	65 00 00             	add    BYTE PTR gs:[eax],al
     75d:	00 02                	add    BYTE PTR [edx],al
     75f:	23 00                	and    eax,DWORD PTR [eax]
     761:	06                   	push   es
     762:	7e 02                	jle    766 <MB_FLAGS+0x766>
     764:	00 00                	add    BYTE PTR [eax],al
     766:	03 3b                	add    edi,DWORD PTR [ebx]
     768:	65 00 00             	add    BYTE PTR gs:[eax],al
     76b:	00 02                	add    BYTE PTR [edx],al
     76d:	23 02                	and    eax,DWORD PTR [edx]
     76f:	06                   	push   es
     770:	c8 02 00 00          	enter  0x2,0x0
     774:	03 3c 53             	add    edi,DWORD PTR [ebx+edx*2]
     777:	00 00                	add    BYTE PTR [eax],al
     779:	00 02                	add    BYTE PTR [edx],al
     77b:	23 04 06             	and    eax,DWORD PTR [esi+eax*1]
     77e:	71 02                	jno    782 <MB_FLAGS+0x782>
     780:	00 00                	add    BYTE PTR [eax],al
     782:	03 3d 53 00 00 00    	add    edi,DWORD PTR ds:0x53
     788:	02 23                	add    ah,BYTE PTR [ebx]
     78a:	05 06 30 02 00       	add    eax,0x23006
     78f:	00 03                	add    BYTE PTR [ebx],al
     791:	3e                   	ds
     792:	53                   	push   ebx
     793:	00 00                	add    BYTE PTR [eax],al
     795:	00 02                	add    BYTE PTR [edx],al
     797:	23 06                	and    eax,DWORD PTR [esi]
     799:	06                   	push   es
     79a:	26 02 00             	add    al,BYTE PTR es:[eax]
     79d:	00 03                	add    BYTE PTR [ebx],al
     79f:	3f                   	aas    
     7a0:	53                   	push   ebx
     7a1:	00 00                	add    BYTE PTR [eax],al
     7a3:	00 02                	add    BYTE PTR [edx],al
     7a5:	23 07                	and    eax,DWORD PTR [edi]
     7a7:	00 02                	add    BYTE PTR [edx],al
     7a9:	03 02                	add    eax,DWORD PTR [edx]
     7ab:	00 00                	add    BYTE PTR [eax],al
     7ad:	03 41 89             	add    eax,DWORD PTR [ecx-0x77]
     7b0:	00 00                	add    BYTE PTR [eax],al
     7b2:	00 05 3c 02 00 00    	add    BYTE PTR ds:0x23c,al
     7b8:	28 03                	sub    BYTE PTR [ebx],al
     7ba:	46                   	inc    esi
     7bb:	10 01                	adc    BYTE PTR [ecx],al
     7bd:	00 00                	add    BYTE PTR [eax],al
     7bf:	06                   	push   es
     7c0:	07                   	pop    es
     7c1:	02 00                	add    al,BYTE PTR [eax]
     7c3:	00 03                	add    BYTE PTR [ebx],al
     7c5:	47                   	inc    edi
     7c6:	10 01                	adc    BYTE PTR [ecx],al
     7c8:	00 00                	add    BYTE PTR [eax],al
     7ca:	02 23                	add    ah,BYTE PTR [ebx]
     7cc:	00 00                	add    BYTE PTR [eax],al
     7ce:	07                   	pop    es
     7cf:	ea 00 00 00 20 01 00 	jmp    0x1:0x20000000
     7d6:	00 08                	add    BYTE PTR [eax],cl
     7d8:	3e 00 00             	add    BYTE PTR ds:[eax],al
     7db:	00 04 00             	add    BYTE PTR [eax+eax*1],al
     7de:	02 a0 02 00 00 03    	add    ah,BYTE PTR [eax+0x3000002]
     7e4:	49                   	dec    ecx
     7e5:	f5                   	cmc    
     7e6:	00 00                	add    BYTE PTR [eax],al
     7e8:	00 05 b9 02 00 00    	add    BYTE PTR ds:0x2b9,al
     7ee:	06                   	push   es
     7ef:	03 4e 54             	add    ecx,DWORD PTR [esi+0x54]
     7f2:	01 00                	add    DWORD PTR [eax],eax
     7f4:	00 06                	add    BYTE PTR [esi],al
     7f6:	78 02                	js     7fa <MB_FLAGS+0x7fa>
     7f8:	00 00                	add    BYTE PTR [eax],al
     7fa:	03 4f 65             	add    ecx,DWORD PTR [edi+0x65]
     7fd:	00 00                	add    BYTE PTR [eax],al
     7ff:	00 02                	add    BYTE PTR [edx],al
     801:	23 00                	and    eax,DWORD PTR [eax]
     803:	06                   	push   es
     804:	8a 01                	mov    al,BYTE PTR [ecx]
     806:	00 00                	add    BYTE PTR [eax],al
     808:	03 50 70             	add    edx,DWORD PTR [eax+0x70]
     80b:	00 00                	add    BYTE PTR [eax],al
     80d:	00 02                	add    BYTE PTR [edx],al
     80f:	23 02                	and    eax,DWORD PTR [edx]
     811:	00 02                	add    BYTE PTR [edx],al
     813:	67 02 00             	add    al,BYTE PTR [bx+si]
     816:	00 03                	add    BYTE PTR [ebx],al
     818:	52                   	push   edx
     819:	2b 01                	sub    eax,DWORD PTR [ecx]
     81b:	00 00                	add    BYTE PTR [eax],al
     81d:	09 01                	or     DWORD PTR [ecx],eax
     81f:	57                   	push   edi
     820:	02 00                	add    al,BYTE PTR [eax]
     822:	00 01                	add    BYTE PTR [ecx],al
     824:	09 a8 07 10 00 b5    	or     DWORD PTR [eax-0x4affeff9],ebp
     82a:	07                   	pop    es
     82b:	10 00                	adc    BYTE PTR [eax],al
     82d:	10 03                	adc    BYTE PTR [ebx],al
     82f:	00 00                	add    BYTE PTR [eax],al
     831:	0a de                	or     bl,dh
     833:	02 00                	add    al,BYTE PTR [eax]
     835:	00 01                	add    BYTE PTR [ecx],al
     837:	11 01                	adc    DWORD PTR [ecx],eax
     839:	b5 07                	mov    ch,0x7
     83b:	10 00                	adc    BYTE PTR [eax],al
     83d:	39 08                	cmp    DWORD PTR [eax],ecx
     83f:	10 00                	adc    BYTE PTR [eax],al
     841:	48                   	dec    eax
     842:	03 00                	add    eax,DWORD PTR [eax]
     844:	00 d2                	add    dl,dl
     846:	01 00                	add    DWORD PTR [eax],eax
     848:	00 0b                	add    BYTE PTR [ebx],cl
     84a:	87 02                	xchg   DWORD PTR [edx],eax
     84c:	00 00                	add    BYTE PTR [eax],al
     84e:	01 11                	add    DWORD PTR [ecx],edx
     850:	70 00                	jo     852 <MB_FLAGS+0x852>
     852:	00 00                	add    BYTE PTR [eax],al
     854:	02 91 00 0b 8a 01    	add    dl,BYTE PTR [ecx+0x18a0b00]
     85a:	00 00                	add    BYTE PTR [eax],al
     85c:	01 11                	add    DWORD PTR [ecx],edx
     85e:	70 00                	jo     860 <MB_FLAGS+0x860>
     860:	00 00                	add    BYTE PTR [eax],al
     862:	02 91 04 0b 78 02    	add    dl,BYTE PTR [ecx+0x2780b04]
     868:	00 00                	add    BYTE PTR [eax],al
     86a:	01 11                	add    DWORD PTR [ecx],edx
     86c:	70 00                	jo     86e <MB_FLAGS+0x86e>
     86e:	00 00                	add    BYTE PTR [eax],al
     870:	02 91 08 0b 71 02    	add    dl,BYTE PTR [ecx+0x2710b08]
     876:	00 00                	add    BYTE PTR [eax],al
     878:	01 11                	add    DWORD PTR [ecx],edx
     87a:	53                   	push   ebx
     87b:	00 00                	add    BYTE PTR [eax],al
     87d:	00 02                	add    BYTE PTR [edx],al
     87f:	91                   	xchg   ecx,eax
     880:	74 0b                	je     88d <MB_FLAGS+0x88d>
     882:	b4 02                	mov    ah,0x2
     884:	00 00                	add    BYTE PTR [eax],al
     886:	01 12                	add    DWORD PTR [edx],edx
     888:	53                   	push   ebx
     889:	00 00                	add    BYTE PTR [eax],al
     88b:	00 02                	add    BYTE PTR [edx],al
     88d:	91                   	xchg   ecx,eax
     88e:	70 00                	jo     890 <MB_FLAGS+0x890>
     890:	0c 8d                	or     al,0x8d
     892:	02 00                	add    al,BYTE PTR [eax]
     894:	00 01                	add    BYTE PTR [ecx],al
     896:	24 39                	and    al,0x39
     898:	08 10                	or     BYTE PTR [eax],dl
     89a:	00 0d 0a 10 00 80    	add    BYTE PTR ds:0x8000100a,cl
     8a0:	03 00                	add    eax,DWORD PTR [eax]
     8a2:	00 0d bf 00 00 00    	add    BYTE PTR ds:0xbf,cl
     8a8:	04 1d                	add    al,0x1d
     8aa:	f6 01 00             	test   BYTE PTR [ecx],0x0
     8ad:	00 05 03 28 12 10    	add    BYTE PTR ds:0x10122803,al
     8b3:	00 0e                	add    BYTE PTR [esi],cl
     8b5:	25 00 00 00 0f       	and    eax,0xf000000
     8ba:	67                   	addr16
     8bb:	64                   	fs
     8bc:	74 00                	je     8be <MB_FLAGS+0x8be>
     8be:	03 54 20 01          	add    edx,DWORD PTR [eax+eiz*1+0x1]
     8c2:	00 00                	add    BYTE PTR [eax],al
     8c4:	05 03 00 20 10       	add    eax,0x10200003
     8c9:	00 0d 1e 02 00 00    	add    BYTE PTR ds:0x21e,cl
     8cf:	03 55 54             	add    edx,DWORD PTR [ebp+0x54]
     8d2:	01 00                	add    DWORD PTR [eax],eax
     8d4:	00 05 03 28 20 10    	add    BYTE PTR ds:0x10202803,al
     8da:	00 00                	add    BYTE PTR [eax],al
     8dc:	ff 01                	inc    DWORD PTR [ecx]
     8de:	00 00                	add    BYTE PTR [eax],al
     8e0:	02 00                	add    al,BYTE PTR [eax]
     8e2:	73 03                	jae    8e7 <MB_FLAGS+0x8e7>
     8e4:	00 00                	add    BYTE PTR [eax],al
     8e6:	04 01                	add    al,0x1
     8e8:	00 00                	add    BYTE PTR [eax],al
     8ea:	00 00                	add    BYTE PTR [eax],al
     8ec:	01 12                	add    DWORD PTR [edx],edx
     8ee:	03 00                	add    eax,DWORD PTR [eax]
     8f0:	00 a3 00 00 00 20    	add    BYTE PTR [ebx+0x20000000],ah
     8f6:	0a 10                	or     dl,BYTE PTR [eax]
     8f8:	00 c9                	add    cl,cl
     8fa:	0a 10                	or     dl,BYTE PTR [eax]
     8fc:	00 01                	add    BYTE PTR [ecx],al
     8fe:	05 00 00 02 19       	add    eax,0x19020000
     903:	00 00                	add    BYTE PTR [eax],al
     905:	00 02                	add    BYTE PTR [edx],al
     907:	09 30                	or     DWORD PTR [eax],esi
     909:	00 00                	add    BYTE PTR [eax],al
     90b:	00 03                	add    BYTE PTR [ebx],al
     90d:	01 08                	add    DWORD PTR [eax],ecx
     90f:	1e                   	push   ds
     910:	00 00                	add    BYTE PTR [eax],al
     912:	00 03                	add    BYTE PTR [ebx],al
     914:	02 07                	add    al,BYTE PTR [edi]
     916:	2c 00                	sub    al,0x0
     918:	00 00                	add    BYTE PTR [eax],al
     91a:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
     91d:	79 00                	jns    91f <MB_FLAGS+0x91f>
     91f:	00 00                	add    BYTE PTR [eax],al
     921:	04 04                	add    al,0x4
     923:	05 69 6e 74 00       	add    eax,0x746e69
     928:	03 01                	add    eax,DWORD PTR [ecx]
     92a:	06                   	push   es
     92b:	20 00                	and    BYTE PTR [eax],al
     92d:	00 00                	add    BYTE PTR [eax],al
     92f:	02 fb                	add    bh,bl
     931:	00 00                	add    BYTE PTR [eax],al
     933:	00 02                	add    BYTE PTR [edx],al
     935:	0f 30                	wrmsr  
     937:	00 00                	add    BYTE PTR [eax],al
     939:	00 03                	add    BYTE PTR [ebx],al
     93b:	02 05 94 00 00 00    	add    al,BYTE PTR ds:0x94
     941:	02 56 00             	add    dl,BYTE PTR [esi+0x0]
     944:	00 00                	add    BYTE PTR [eax],al
     946:	02 12                	add    dl,BYTE PTR [edx]
     948:	37                   	aaa    
     949:	00 00                	add    BYTE PTR [eax],al
     94b:	00 02                	add    BYTE PTR [edx],al
     94d:	60                   	pusha  
     94e:	02 00                	add    al,BYTE PTR [eax]
     950:	00 02                	add    BYTE PTR [edx],al
     952:	15 3e 00 00 00       	adc    eax,0x3e
     957:	03 08                	add    ecx,DWORD PTR [eax]
     959:	05 86 00 00 00       	add    eax,0x86
     95e:	03 08                	add    ecx,DWORD PTR [eax]
     960:	07                   	pop    es
     961:	6f                   	outs   dx,DWORD PTR ds:[esi]
     962:	00 00                	add    BYTE PTR [eax],al
     964:	00 05 87 03 00 00    	add    BYTE PTR ds:0x387,al
     96a:	08 03                	or     BYTE PTR [ebx],al
     96c:	12 dc                	adc    bl,ah
     96e:	00 00                	add    BYTE PTR [eax],al
     970:	00 06                	add    BYTE PTR [esi],al
     972:	56                   	push   esi
     973:	03 00                	add    eax,DWORD PTR [eax]
     975:	00 03                	add    BYTE PTR [ebx],al
     977:	14 65                	adc    al,0x65
     979:	00 00                	add    BYTE PTR [eax],al
     97b:	00 02                	add    BYTE PTR [edx],al
     97d:	23 00                	and    eax,DWORD PTR [eax]
     97f:	07                   	pop    es
     980:	73 65                	jae    9e7 <MB_FLAGS+0x9e7>
     982:	6c                   	ins    BYTE PTR es:[edi],dx
     983:	00 03                	add    BYTE PTR [ebx],al
     985:	15 65 00 00 00       	adc    eax,0x65
     98a:	02 23                	add    ah,BYTE PTR [ebx]
     98c:	02 07                	add    al,BYTE PTR [edi]
     98e:	69 73 74 00 03 16 53 	imul   esi,DWORD PTR [ebx+0x74],0x53160300
     995:	00 00                	add    BYTE PTR [eax],al
     997:	00 02                	add    BYTE PTR [edx],al
     999:	23 04 06             	and    eax,DWORD PTR [esi+eax*1]
     99c:	81 03 00 00 03 17    	add    DWORD PTR [ebx],0x17030000
     9a2:	53                   	push   ebx
     9a3:	00 00                	add    BYTE PTR [eax],al
     9a5:	00 02                	add    BYTE PTR [edx],al
     9a7:	23 05 06 79 03 00    	and    eax,DWORD PTR ds:0x37906
     9ad:	00 03                	add    BYTE PTR [ebx],al
     9af:	18 65 00             	sbb    BYTE PTR [ebp+0x0],ah
     9b2:	00 00                	add    BYTE PTR [eax],al
     9b4:	02 23                	add    ah,BYTE PTR [ebx]
     9b6:	06                   	push   es
     9b7:	00 02                	add    BYTE PTR [edx],al
     9b9:	ff 02                	inc    DWORD PTR [edx]
     9bb:	00 00                	add    BYTE PTR [eax],al
     9bd:	03 1a                	add    ebx,DWORD PTR [edx]
     9bf:	89 00                	mov    DWORD PTR [eax],eax
     9c1:	00 00                	add    BYTE PTR [eax],al
     9c3:	08 5e 03             	or     BYTE PTR [esi+0x3],bl
     9c6:	00 00                	add    BYTE PTR [eax],al
     9c8:	00 08                	add    BYTE PTR [eax],cl
     9ca:	03 1f                	add    ebx,DWORD PTR [edi]
     9cc:	03 01                	add    eax,DWORD PTR [ecx]
     9ce:	00 00                	add    BYTE PTR [eax],al
     9d0:	06                   	push   es
     9d1:	07                   	pop    es
     9d2:	02 00                	add    al,BYTE PTR [eax]
     9d4:	00 03                	add    BYTE PTR [ebx],al
     9d6:	21 03                	and    DWORD PTR [ebx],eax
     9d8:	01 00                	add    DWORD PTR [eax],eax
     9da:	00 02                	add    BYTE PTR [edx],al
     9dc:	23 00                	and    eax,DWORD PTR [eax]
     9de:	00 09                	add    BYTE PTR [ecx],cl
     9e0:	dc 00                	fadd   QWORD PTR [eax]
     9e2:	00 00                	add    BYTE PTR [eax],al
     9e4:	13 01                	adc    eax,DWORD PTR [ecx]
     9e6:	00 00                	add    BYTE PTR [eax],al
     9e8:	0a 3e                	or     bh,BYTE PTR [esi]
     9ea:	00 00                	add    BYTE PTR [eax],al
     9ec:	00 ff                	add    bh,bh
     9ee:	00 02                	add    BYTE PTR [edx],al
     9f0:	eb 02                	jmp    9f4 <MB_FLAGS+0x9f4>
     9f2:	00 00                	add    BYTE PTR [eax],al
     9f4:	03 23                	add    esp,DWORD PTR [ebx]
     9f6:	e7 00                	out    0x0,eax
     9f8:	00 00                	add    BYTE PTR [eax],al
     9fa:	05 b8 03 00 00       	add    eax,0x3b8
     9ff:	06                   	push   es
     a00:	03 28                	add    ebp,DWORD PTR [eax]
     a02:	47                   	inc    edi
     a03:	01 00                	add    DWORD PTR [eax],eax
     a05:	00 06                	add    BYTE PTR [esi],al
     a07:	78 02                	js     a0b <MB_FLAGS+0xa0b>
     a09:	00 00                	add    BYTE PTR [eax],al
     a0b:	03 2a                	add    ebp,DWORD PTR [edx]
     a0d:	65 00 00             	add    BYTE PTR gs:[eax],al
     a10:	00 02                	add    BYTE PTR [edx],al
     a12:	23 00                	and    eax,DWORD PTR [eax]
     a14:	06                   	push   es
     a15:	8a 01                	mov    al,BYTE PTR [ecx]
     a17:	00 00                	add    BYTE PTR [eax],al
     a19:	03 2b                	add    ebp,DWORD PTR [ebx]
     a1b:	70 00                	jo     a1d <MB_FLAGS+0xa1d>
     a1d:	00 00                	add    BYTE PTR [eax],al
     a1f:	02 23                	add    ah,BYTE PTR [ebx]
     a21:	02 00                	add    al,BYTE PTR [eax]
     a23:	02 44 03 00          	add    al,BYTE PTR [ebx+eax*1+0x0]
     a27:	00 03                	add    BYTE PTR [ebx],al
     a29:	2d 1e 01 00 00       	sub    eax,0x11e
     a2e:	0b 01                	or     eax,DWORD PTR [ecx]
     a30:	09 03                	or     DWORD PTR [ebx],eax
     a32:	00 00                	add    BYTE PTR [eax],al
     a34:	01 09                	add    DWORD PTR [ecx],ecx
     a36:	20 0a                	and    BYTE PTR [edx],cl
     a38:	10 00                	adc    BYTE PTR [eax],al
     a3a:	2d 0a 10 00 b8       	sub    eax,0xb800100a
     a3f:	03 00                	add    eax,DWORD PTR [eax]
     a41:	00 0c 98             	add    BYTE PTR [eax+ebx*4],cl
     a44:	03 00                	add    eax,DWORD PTR [eax]
     a46:	00 01                	add    BYTE PTR [ecx],al
     a48:	11 01                	adc    DWORD PTR [ecx],eax
     a4a:	2d 0a 10 00 95       	sub    eax,0x9500100a
     a4f:	0a 10                	or     dl,BYTE PTR [eax]
     a51:	00 f0                	add    al,dh
     a53:	03 00                	add    eax,DWORD PTR [eax]
     a55:	00 b7 01 00 00 0d    	add    BYTE PTR [edi+0xd000001],dh
     a5b:	87 02                	xchg   DWORD PTR [edx],eax
     a5d:	00 00                	add    BYTE PTR [eax],al
     a5f:	01 11                	add    DWORD PTR [ecx],edx
     a61:	53                   	push   ebx
     a62:	00 00                	add    BYTE PTR [eax],al
     a64:	00 02                	add    BYTE PTR [edx],al
     a66:	91                   	xchg   ecx,eax
     a67:	74 0d                	je     a76 <MB_FLAGS+0xa76>
     a69:	8a 01                	mov    al,BYTE PTR [ecx]
     a6b:	00 00                	add    BYTE PTR [eax],al
     a6d:	01 11                	add    DWORD PTR [ecx],edx
     a6f:	70 00                	jo     a71 <MB_FLAGS+0xa71>
     a71:	00 00                	add    BYTE PTR [eax],al
     a73:	02 91 04 0e 73 65    	add    dl,BYTE PTR [ecx+0x65730e04]
     a79:	6c                   	ins    BYTE PTR es:[edi],dx
     a7a:	00 01                	add    BYTE PTR [ecx],al
     a7c:	11 65 00             	adc    DWORD PTR [ebp+0x0],esp
     a7f:	00 00                	add    BYTE PTR [eax],al
     a81:	02 91 70 0d 81 03    	add    dl,BYTE PTR [ecx+0x3810d70]
     a87:	00 00                	add    BYTE PTR [eax],al
     a89:	01 11                	add    DWORD PTR [ecx],edx
     a8b:	65 00 00             	add    BYTE PTR gs:[eax],al
     a8e:	00 02                	add    BYTE PTR [edx],al
     a90:	91                   	xchg   ecx,eax
     a91:	6c                   	ins    BYTE PTR es:[edi],dx
     a92:	00 0f                	add    BYTE PTR [edi],cl
     a94:	a5                   	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
     a95:	03 00                	add    eax,DWORD PTR [eax]
     a97:	00 01                	add    BYTE PTR [ecx],al
     a99:	21 95 0a 10 00 c9    	and    DWORD PTR [ebp-0x36ffeff6],edx
     a9f:	0a 10                	or     dl,BYTE PTR [eax]
     aa1:	00 28                	add    BYTE PTR [eax],ch
     aa3:	04 00                	add    al,0x0
     aa5:	00 10                	add    BYTE PTR [eax],dl
     aa7:	bf 00 00 00 04       	mov    edi,0x4000000
     aac:	1d db 01 00 00       	sbb    eax,0x1db
     ab1:	05 03 25 13 10       	add    eax,0x10132503
     ab6:	00 11                	add    BYTE PTR [ecx],dl
     ab8:	25 00 00 00 12       	and    eax,0x12000000
     abd:	69 64 74 00 03 30 13 	imul   esp,DWORD PTR [esp+esi*2+0x0],0x1133003
     ac4:	01 
     ac5:	00 00                	add    BYTE PTR [eax],al
     ac7:	05 03 40 40 10       	add    eax,0x10404003
     acc:	00 10                	add    BYTE PTR [eax],dl
     ace:	4e                   	dec    esi
     acf:	03 00                	add    eax,DWORD PTR [eax]
     ad1:	00 03                	add    BYTE PTR [ebx],al
     ad3:	31 47 01             	xor    DWORD PTR [edi+0x1],eax
     ad6:	00 00                	add    BYTE PTR [eax],al
     ad8:	05 03 40 48 10       	add    eax,0x10484003
     add:	00 00                	add    BYTE PTR [eax],al
     adf:	9e                   	sahf   
     ae0:	03 00                	add    eax,DWORD PTR [eax]
     ae2:	00 02                	add    BYTE PTR [edx],al
     ae4:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
     ae8:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
     aeb:	00 00                	add    BYTE PTR [eax],al
     aed:	00 00                	add    BYTE PTR [eax],al
     aef:	01 1e                	add    DWORD PTR [esi],ebx
     af1:	04 00                	add    al,0x0
     af3:	00 a3 00 00 00 cc    	add    BYTE PTR [ebx-0x34000000],ah
     af9:	0a 10                	or     dl,BYTE PTR [eax]
     afb:	00 29                	add    BYTE PTR [ecx],ch
     afd:	0b 10                	or     edx,DWORD PTR [eax]
     aff:	00 57 06             	add    BYTE PTR [edi+0x6],dl
     b02:	00 00                	add    BYTE PTR [eax],al
     b04:	02 19                	add    bl,BYTE PTR [ecx]
     b06:	00 00                	add    BYTE PTR [eax],al
     b08:	00 02                	add    BYTE PTR [edx],al
     b0a:	09 30                	or     DWORD PTR [eax],esi
     b0c:	00 00                	add    BYTE PTR [eax],al
     b0e:	00 03                	add    BYTE PTR [ebx],al
     b10:	01 08                	add    DWORD PTR [eax],ecx
     b12:	1e                   	push   ds
     b13:	00 00                	add    BYTE PTR [eax],al
     b15:	00 03                	add    BYTE PTR [ebx],al
     b17:	02 07                	add    al,BYTE PTR [edi]
     b19:	2c 00                	sub    al,0x0
     b1b:	00 00                	add    BYTE PTR [eax],al
     b1d:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
     b20:	79 00                	jns    b22 <MB_FLAGS+0xb22>
     b22:	00 00                	add    BYTE PTR [eax],al
     b24:	04 04                	add    al,0x4
     b26:	05 69 6e 74 00       	add    eax,0x746e69
     b2b:	03 01                	add    eax,DWORD PTR [ecx]
     b2d:	06                   	push   es
     b2e:	20 00                	and    BYTE PTR [eax],al
     b30:	00 00                	add    BYTE PTR [eax],al
     b32:	02 fb                	add    bh,bl
     b34:	00 00                	add    BYTE PTR [eax],al
     b36:	00 02                	add    BYTE PTR [edx],al
     b38:	0f 30                	wrmsr  
     b3a:	00 00                	add    BYTE PTR [eax],al
     b3c:	00 03                	add    BYTE PTR [ebx],al
     b3e:	02 05 94 00 00 00    	add    al,BYTE PTR ds:0x94
     b44:	02 56 00             	add    dl,BYTE PTR [esi+0x0]
     b47:	00 00                	add    BYTE PTR [eax],al
     b49:	02 12                	add    dl,BYTE PTR [edx]
     b4b:	37                   	aaa    
     b4c:	00 00                	add    BYTE PTR [eax],al
     b4e:	00 02                	add    BYTE PTR [edx],al
     b50:	60                   	pusha  
     b51:	02 00                	add    al,BYTE PTR [eax]
     b53:	00 02                	add    BYTE PTR [edx],al
     b55:	15 3e 00 00 00       	adc    eax,0x3e
     b5a:	03 08                	add    ecx,DWORD PTR [eax]
     b5c:	05 86 00 00 00       	add    eax,0x86
     b61:	03 08                	add    ecx,DWORD PTR [eax]
     b63:	07                   	pop    es
     b64:	6f                   	outs   dx,DWORD PTR ds:[esi]
     b65:	00 00                	add    BYTE PTR [eax],al
     b67:	00 05 02 03 15 aa    	add    BYTE PTR ds:0xaa150302,al
     b6d:	00 00                	add    BYTE PTR [eax],al
     b6f:	00 06                	add    BYTE PTR [esi],al
     b71:	78 00                	js     b73 <MB_FLAGS+0xb73>
     b73:	03 17                	add    edx,DWORD PTR [edi]
     b75:	53                   	push   ebx
     b76:	00 00                	add    BYTE PTR [eax],al
     b78:	00 02                	add    BYTE PTR [edx],al
     b7a:	23 00                	and    eax,DWORD PTR [eax]
     b7c:	06                   	push   es
     b7d:	79 00                	jns    b7f <MB_FLAGS+0xb7f>
     b7f:	03 18                	add    ebx,DWORD PTR [eax]
     b81:	53                   	push   ebx
     b82:	00 00                	add    BYTE PTR [eax],al
     b84:	00 02                	add    BYTE PTR [edx],al
     b86:	23 01                	and    eax,DWORD PTR [ecx]
     b88:	00 02                	add    BYTE PTR [edx],al
     b8a:	4f                   	dec    edi
     b8b:	04 00                	add    al,0x0
     b8d:	00 03                	add    BYTE PTR [ebx],al
     b8f:	19 89 00 00 00 07    	sbb    DWORD PTR [ecx+0x7000000],ecx
     b95:	04 03                	add    al,0x3
     b97:	1d 1e 01 00 00       	sbb    eax,0x11e
     b9c:	08 40 04             	or     BYTE PTR [eax+0x4],al
     b9f:	00 00                	add    BYTE PTR [eax],al
     ba1:	00 08                	add    BYTE PTR [eax],cl
     ba3:	5e                   	pop    esi
     ba4:	04 00                	add    al,0x0
     ba6:	00 01                	add    BYTE PTR [ecx],al
     ba8:	08 18                	or     BYTE PTR [eax],bl
     baa:	04 00                	add    al,0x0
     bac:	00 02                	add    BYTE PTR [edx],al
     bae:	08 e0                	or     al,ah
     bb0:	03 00                	add    eax,DWORD PTR [eax]
     bb2:	00 03                	add    BYTE PTR [ebx],al
     bb4:	09 52 45             	or     DWORD PTR [edx+0x45],edx
     bb7:	44                   	inc    esp
     bb8:	00 04 08             	add    BYTE PTR [eax+ecx*1],al
     bbb:	68 04 00 00 05       	push   0x5000004
     bc0:	08 04 04             	or     BYTE PTR [esp+eax*1],al
     bc3:	00 00                	add    BYTE PTR [eax],al
     bc5:	06                   	push   es
     bc6:	08 e5                	or     ch,ah
     bc8:	03 00                	add    eax,DWORD PTR [eax]
     bca:	00 07                	add    BYTE PTR [edi],al
     bcc:	08 0a                	or     BYTE PTR [edx],cl
     bce:	04 00                	add    al,0x0
     bd0:	00 08                	add    BYTE PTR [eax],cl
     bd2:	08 59 04             	or     BYTE PTR [ecx+0x4],bl
     bd5:	00 00                	add    BYTE PTR [eax],al
     bd7:	09 08                	or     DWORD PTR [eax],ecx
     bd9:	13 04 00             	adc    eax,DWORD PTR [eax+eax*1]
     bdc:	00 0a                	add    BYTE PTR [edx],cl
     bde:	08 db                	or     bl,bl
     be0:	03 00                	add    eax,DWORD PTR [eax]
     be2:	00 0b                	add    BYTE PTR [ebx],cl
     be4:	08 70 04             	or     BYTE PTR [eax+0x4],dh
     be7:	00 00                	add    BYTE PTR [eax],al
     be9:	0c 08                	or     al,0x8
     beb:	63 04 00             	arpl   WORD PTR [eax+eax*1],ax
     bee:	00 0d 08 83 04 00    	add    BYTE PTR ds:0x48308,cl
     bf4:	00 0e                	add    BYTE PTR [esi],cl
     bf6:	08 3a                	or     BYTE PTR [edx],bh
     bf8:	04 00                	add    al,0x0
     bfa:	00 0f                	add    BYTE PTR [edi],cl
     bfc:	00 05 0c 03 30 5f    	add    BYTE PTR ds:0x5f30030c,al
     c02:	01 00                	add    DWORD PTR [eax],eax
     c04:	00 0a                	add    BYTE PTR [edx],cl
     c06:	ef                   	out    dx,eax
     c07:	03 00                	add    eax,DWORD PTR [eax]
     c09:	00 03                	add    BYTE PTR [ebx],al
     c0b:	34 aa                	xor    al,0xaa
     c0d:	00 00                	add    BYTE PTR [eax],al
     c0f:	00 02                	add    BYTE PTR [edx],al
     c11:	23 00                	and    eax,DWORD PTR [eax]
     c13:	0a fa                	or     bh,dl
     c15:	03 00                	add    eax,DWORD PTR [eax]
     c17:	00 03                	add    BYTE PTR [ebx],al
     c19:	38 5f 01             	cmp    BYTE PTR [edi+0x1],bl
     c1c:	00 00                	add    BYTE PTR [eax],al
     c1e:	02 23                	add    ah,BYTE PTR [ebx]
     c20:	04 0a                	add    al,0xa
     c22:	cf                   	iret   
     c23:	03 00                	add    eax,DWORD PTR [eax]
     c25:	00 03                	add    BYTE PTR [ebx],al
     c27:	3b 53 00             	cmp    edx,DWORD PTR [ebx+0x0]
     c2a:	00 00                	add    BYTE PTR [eax],al
     c2c:	02 23                	add    ah,BYTE PTR [ebx]
     c2e:	08 0a                	or     BYTE PTR [edx],cl
     c30:	79 04                	jns    c36 <MB_FLAGS+0xc36>
     c32:	00 00                	add    BYTE PTR [eax],al
     c34:	03 3e                	add    edi,DWORD PTR [esi]
     c36:	53                   	push   ebx
     c37:	00 00                	add    BYTE PTR [eax],al
     c39:	00 02                	add    BYTE PTR [edx],al
     c3b:	23 09                	and    ecx,DWORD PTR [ecx]
     c3d:	00 0b                	add    BYTE PTR [ebx],cl
     c3f:	04 65                	add    al,0x65
     c41:	00 00                	add    BYTE PTR [eax],al
     c43:	00 02                	add    BYTE PTR [edx],al
     c45:	46                   	inc    esi
     c46:	04 00                	add    al,0x0
     c48:	00 03                	add    BYTE PTR [ebx],al
     c4a:	42                   	inc    edx
     c4b:	1e                   	push   ds
     c4c:	01 00                	add    DWORD PTR [eax],eax
     c4e:	00 0c 0d 02 00 00 08 	add    BYTE PTR [ecx*1+0x8000002],cl
     c55:	04 39                	add    al,0x39
     c57:	d1 01                	rol    DWORD PTR [ecx],1
     c59:	00 00                	add    BYTE PTR [eax],al
     c5b:	0a d4                	or     dl,ah
     c5d:	02 00                	add    al,BYTE PTR [eax]
     c5f:	00 04 3a             	add    BYTE PTR [edx+edi*1],al
     c62:	65 00 00             	add    BYTE PTR gs:[eax],al
     c65:	00 02                	add    BYTE PTR [edx],al
     c67:	23 00                	and    eax,DWORD PTR [eax]
     c69:	0a 7e 02             	or     bh,BYTE PTR [esi+0x2]
     c6c:	00 00                	add    BYTE PTR [eax],al
     c6e:	04 3b                	add    al,0x3b
     c70:	65 00 00             	add    BYTE PTR gs:[eax],al
     c73:	00 02                	add    BYTE PTR [edx],al
     c75:	23 02                	and    eax,DWORD PTR [edx]
     c77:	0a c8                	or     cl,al
     c79:	02 00                	add    al,BYTE PTR [eax]
     c7b:	00 04 3c             	add    BYTE PTR [esp+edi*1],al
     c7e:	53                   	push   ebx
     c7f:	00 00                	add    BYTE PTR [eax],al
     c81:	00 02                	add    BYTE PTR [edx],al
     c83:	23 04 0a             	and    eax,DWORD PTR [edx+ecx*1]
     c86:	71 02                	jno    c8a <MB_FLAGS+0xc8a>
     c88:	00 00                	add    BYTE PTR [eax],al
     c8a:	04 3d                	add    al,0x3d
     c8c:	53                   	push   ebx
     c8d:	00 00                	add    BYTE PTR [eax],al
     c8f:	00 02                	add    BYTE PTR [edx],al
     c91:	23 05 0a 30 02 00    	and    eax,DWORD PTR ds:0x2300a
     c97:	00 04 3e             	add    BYTE PTR [esi+edi*1],al
     c9a:	53                   	push   ebx
     c9b:	00 00                	add    BYTE PTR [eax],al
     c9d:	00 02                	add    BYTE PTR [edx],al
     c9f:	23 06                	and    eax,DWORD PTR [esi]
     ca1:	0a 26                	or     ah,BYTE PTR [esi]
     ca3:	02 00                	add    al,BYTE PTR [eax]
     ca5:	00 04 3f             	add    BYTE PTR [edi+edi*1],al
     ca8:	53                   	push   ebx
     ca9:	00 00                	add    BYTE PTR [eax],al
     cab:	00 02                	add    BYTE PTR [edx],al
     cad:	23 07                	and    eax,DWORD PTR [edi]
     caf:	00 02                	add    BYTE PTR [edx],al
     cb1:	03 02                	add    eax,DWORD PTR [edx]
     cb3:	00 00                	add    BYTE PTR [eax],al
     cb5:	04 41                	add    al,0x41
     cb7:	70 01                	jo     cba <MB_FLAGS+0xcba>
     cb9:	00 00                	add    BYTE PTR [eax],al
     cbb:	0c 3c                	or     al,0x3c
     cbd:	02 00                	add    al,BYTE PTR [eax]
     cbf:	00 28                	add    BYTE PTR [eax],ch
     cc1:	04 46                	add    al,0x46
     cc3:	f7 01 00 00 0a 07    	test   DWORD PTR [ecx],0x70a0000
     cc9:	02 00                	add    al,BYTE PTR [eax]
     ccb:	00 04 47             	add    BYTE PTR [edi+eax*2],al
     cce:	f7 01 00 00 02 23    	test   DWORD PTR [ecx],0x23020000
     cd4:	00 00                	add    BYTE PTR [eax],al
     cd6:	0d d1 01 00 00       	or     eax,0x1d1
     cdb:	07                   	pop    es
     cdc:	02 00                	add    al,BYTE PTR [eax]
     cde:	00 0e                	add    BYTE PTR [esi],cl
     ce0:	3e 00 00             	add    BYTE PTR ds:[eax],al
     ce3:	00 04 00             	add    BYTE PTR [eax+eax*1],al
     ce6:	02 a0 02 00 00 04    	add    ah,BYTE PTR [eax+0x4000002]
     cec:	49                   	dec    ecx
     ced:	dc 01                	fadd   QWORD PTR [ecx]
     cef:	00 00                	add    BYTE PTR [eax],al
     cf1:	0c b9                	or     al,0xb9
     cf3:	02 00                	add    al,BYTE PTR [eax]
     cf5:	00 06                	add    BYTE PTR [esi],al
     cf7:	04 4e                	add    al,0x4e
     cf9:	3b 02                	cmp    eax,DWORD PTR [edx]
     cfb:	00 00                	add    BYTE PTR [eax],al
     cfd:	0a 78 02             	or     bh,BYTE PTR [eax+0x2]
     d00:	00 00                	add    BYTE PTR [eax],al
     d02:	04 4f                	add    al,0x4f
     d04:	65 00 00             	add    BYTE PTR gs:[eax],al
     d07:	00 02                	add    BYTE PTR [edx],al
     d09:	23 00                	and    eax,DWORD PTR [eax]
     d0b:	0a 8a 01 00 00 04    	or     cl,BYTE PTR [edx+0x4000001]
     d11:	50                   	push   eax
     d12:	70 00                	jo     d14 <MB_FLAGS+0xd14>
     d14:	00 00                	add    BYTE PTR [eax],al
     d16:	02 23                	add    ah,BYTE PTR [ebx]
     d18:	02 00                	add    al,BYTE PTR [eax]
     d1a:	02 67 02             	add    ah,BYTE PTR [edi+0x2]
     d1d:	00 00                	add    BYTE PTR [eax],al
     d1f:	04 52                	add    al,0x52
     d21:	12 02                	adc    al,BYTE PTR [edx]
     d23:	00 00                	add    BYTE PTR [eax],al
     d25:	0c 87                	or     al,0x87
     d27:	03 00                	add    eax,DWORD PTR [eax]
     d29:	00 08                	add    BYTE PTR [eax],cl
     d2b:	05 12 99 02 00       	add    eax,0x29912
     d30:	00 0a                	add    BYTE PTR [edx],cl
     d32:	56                   	push   esi
     d33:	03 00                	add    eax,DWORD PTR [eax]
     d35:	00 05 14 65 00 00    	add    BYTE PTR ds:0x6514,al
     d3b:	00 02                	add    BYTE PTR [edx],al
     d3d:	23 00                	and    eax,DWORD PTR [eax]
     d3f:	06                   	push   es
     d40:	73 65                	jae    da7 <MB_FLAGS+0xda7>
     d42:	6c                   	ins    BYTE PTR es:[edi],dx
     d43:	00 05 15 65 00 00    	add    BYTE PTR ds:0x6515,al
     d49:	00 02                	add    BYTE PTR [edx],al
     d4b:	23 02                	and    eax,DWORD PTR [edx]
     d4d:	06                   	push   es
     d4e:	69 73 74 00 05 16 53 	imul   esi,DWORD PTR [ebx+0x74],0x53160500
     d55:	00 00                	add    BYTE PTR [eax],al
     d57:	00 02                	add    BYTE PTR [edx],al
     d59:	23 04 0a             	and    eax,DWORD PTR [edx+ecx*1]
     d5c:	81 03 00 00 05 17    	add    DWORD PTR [ebx],0x17050000
     d62:	53                   	push   ebx
     d63:	00 00                	add    BYTE PTR [eax],al
     d65:	00 02                	add    BYTE PTR [edx],al
     d67:	23 05 0a 79 03 00    	and    eax,DWORD PTR ds:0x3790a
     d6d:	00 05 18 65 00 00    	add    BYTE PTR ds:0x6518,al
     d73:	00 02                	add    BYTE PTR [edx],al
     d75:	23 06                	and    eax,DWORD PTR [esi]
     d77:	00 02                	add    BYTE PTR [edx],al
     d79:	ff 02                	inc    DWORD PTR [edx]
     d7b:	00 00                	add    BYTE PTR [eax],al
     d7d:	05 1a 46 02 00       	add    eax,0x2461a
     d82:	00 0f                	add    BYTE PTR [edi],cl
     d84:	5e                   	pop    esi
     d85:	03 00                	add    eax,DWORD PTR [eax]
     d87:	00 00                	add    BYTE PTR [eax],al
     d89:	08 05 1f c0 02 00    	or     BYTE PTR ds:0x2c01f,al
     d8f:	00 0a                	add    BYTE PTR [edx],cl
     d91:	07                   	pop    es
     d92:	02 00                	add    al,BYTE PTR [eax]
     d94:	00 05 21 c0 02 00    	add    BYTE PTR ds:0x2c021,al
     d9a:	00 02                	add    BYTE PTR [edx],al
     d9c:	23 00                	and    eax,DWORD PTR [eax]
     d9e:	00 0d 99 02 00 00    	add    BYTE PTR ds:0x299,cl
     da4:	d0 02                	rol    BYTE PTR [edx],1
     da6:	00 00                	add    BYTE PTR [eax],al
     da8:	0e                   	push   cs
     da9:	3e 00 00             	add    BYTE PTR ds:[eax],al
     dac:	00 ff                	add    bh,bh
     dae:	00 02                	add    BYTE PTR [edx],al
     db0:	eb 02                	jmp    db4 <MB_FLAGS+0xdb4>
     db2:	00 00                	add    BYTE PTR [eax],al
     db4:	05 23 a4 02 00       	add    eax,0x2a423
     db9:	00 0c b8             	add    BYTE PTR [eax+edi*4],cl
     dbc:	03 00                	add    eax,DWORD PTR [eax]
     dbe:	00 06                	add    BYTE PTR [esi],al
     dc0:	05 28 04 03 00       	add    eax,0x30428
     dc5:	00 0a                	add    BYTE PTR [edx],cl
     dc7:	78 02                	js     dcb <MB_FLAGS+0xdcb>
     dc9:	00 00                	add    BYTE PTR [eax],al
     dcb:	05 2a 65 00 00       	add    eax,0x652a
     dd0:	00 02                	add    BYTE PTR [edx],al
     dd2:	23 00                	and    eax,DWORD PTR [eax]
     dd4:	0a 8a 01 00 00 05    	or     cl,BYTE PTR [edx+0x5000001]
     dda:	2b 70 00             	sub    esi,DWORD PTR [eax+0x0]
     ddd:	00 00                	add    BYTE PTR [eax],al
     ddf:	02 23                	add    ah,BYTE PTR [ebx]
     de1:	02 00                	add    al,BYTE PTR [eax]
     de3:	02 44 03 00          	add    al,BYTE PTR [ebx+eax*1+0x0]
     de7:	00 05 2d db 02 00    	add    BYTE PTR ds:0x2db2d,al
     ded:	00 10                	add    BYTE PTR [eax],dl
     def:	01 c7                	add    edi,eax
     df1:	03 00                	add    eax,DWORD PTR [eax]
     df3:	00 01                	add    BYTE PTR [ecx],al
     df5:	10 01                	adc    BYTE PTR [ecx],al
     df7:	cc                   	int3   
     df8:	0a 10                	or     dl,BYTE PTR [eax]
     dfa:	00 29                	add    BYTE PTR [ecx],ch
     dfc:	0b 10                	or     edx,DWORD PTR [eax]
     dfe:	00 60 04             	add    BYTE PTR [eax+0x4],ah
     e01:	00 00                	add    BYTE PTR [eax],al
     e03:	36 03 00             	add    eax,DWORD PTR ss:[eax]
     e06:	00 11                	add    BYTE PTR [ecx],dl
     e08:	74 6d                	je     e77 <MB_FLAGS+0xe77>
     e0a:	00 01                	add    BYTE PTR [ecx],al
     e0c:	15 65 01 00 00       	adc    eax,0x165
     e11:	02 91 64 00 12 bf    	add    dl,BYTE PTR [ecx-0x40edff9c]
     e17:	00 00                	add    BYTE PTR [eax],al
     e19:	00 06                	add    BYTE PTR [esi],al
     e1b:	1d 47 03 00 00       	sbb    eax,0x347
     e20:	05 03 3d 13 10       	add    eax,0x10133d03
     e25:	00 13                	add    BYTE PTR [ebx],dl
     e27:	25 00 00 00 12       	and    eax,0x12000000
     e2c:	c0 00 00             	rol    BYTE PTR [eax],0x0
     e2f:	00 07                	add    BYTE PTR [edi],al
     e31:	0a 47 03             	or     al,BYTE PTR [edi+0x3]
     e34:	00 00                	add    BYTE PTR [eax],al
     e36:	05 03 3e 13 10       	add    eax,0x10133e03
     e3b:	00 11                	add    BYTE PTR [ecx],dl
     e3d:	67                   	addr16
     e3e:	64                   	fs
     e3f:	74 00                	je     e41 <MB_FLAGS+0xe41>
     e41:	04 54                	add    al,0x54
     e43:	07                   	pop    es
     e44:	02 00                	add    al,BYTE PTR [eax]
     e46:	00 05 03 60 48 10    	add    BYTE PTR ds:0x10486003,al
     e4c:	00 12                	add    BYTE PTR [edx],dl
     e4e:	1e                   	push   ds
     e4f:	02 00                	add    al,BYTE PTR [eax]
     e51:	00 04 55 3b 02 00 00 	add    BYTE PTR [edx*2+0x23b],al
     e58:	05 03 88 48 10       	add    eax,0x10488803
     e5d:	00 11                	add    BYTE PTR [ecx],dl
     e5f:	69 64 74 00 05 30 d0 	imul   esp,DWORD PTR [esp+esi*2+0x0],0x2d03005
     e66:	02 
     e67:	00 00                	add    BYTE PTR [eax],al
     e69:	05 03 a0 48 10       	add    eax,0x1048a003
     e6e:	00 12                	add    BYTE PTR [edx],dl
     e70:	4e                   	dec    esi
     e71:	03 00                	add    eax,DWORD PTR [eax]
     e73:	00 05 31 04 03 00    	add    BYTE PTR ds:0x30431,al
     e79:	00 05 03 a0 50 10    	add    BYTE PTR ds:0x1050a003,al
     e7f:	00 00                	add    BYTE PTR [eax],al
     e81:	7b 00                	jnp    e83 <MB_FLAGS+0xe83>
     e83:	00 00                	add    BYTE PTR [eax],al
     e85:	02 00                	add    al,BYTE PTR [eax]
     e87:	6a 05                	push   0x5
     e89:	00 00                	add    BYTE PTR [eax],al
     e8b:	04 01                	add    al,0x1
     e8d:	00 00                	add    BYTE PTR [eax],al
     e8f:	00 00                	add    BYTE PTR [eax],al
     e91:	01 8a 04 00 00 a3    	add    DWORD PTR [edx-0x5cfffffc],ecx
     e97:	00 00                	add    BYTE PTR [eax],al
     e99:	00 2c 0b             	add    BYTE PTR [ebx+ecx*1],ch
     e9c:	10 00                	adc    BYTE PTR [eax],al
     e9e:	2c 0b                	sub    al,0xb
     ea0:	10 00                	adc    BYTE PTR [eax],al
     ea2:	4b                   	dec    ebx
     ea3:	08 00                	or     BYTE PTR [eax],al
     ea5:	00 02                	add    BYTE PTR [edx],al
     ea7:	19 00                	sbb    DWORD PTR [eax],eax
     ea9:	00 00                	add    BYTE PTR [eax],al
     eab:	01 09                	add    DWORD PTR [ecx],ecx
     ead:	30 00                	xor    BYTE PTR [eax],al
     eaf:	00 00                	add    BYTE PTR [eax],al
     eb1:	03 01                	add    eax,DWORD PTR [ecx]
     eb3:	08 1e                	or     BYTE PTR [esi],bl
     eb5:	00 00                	add    BYTE PTR [eax],al
     eb7:	00 03                	add    BYTE PTR [ebx],al
     eb9:	02 07                	add    al,BYTE PTR [edi]
     ebb:	2c 00                	sub    al,0x0
     ebd:	00 00                	add    BYTE PTR [eax],al
     ebf:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
     ec2:	79 00                	jns    ec4 <MB_FLAGS+0xec4>
     ec4:	00 00                	add    BYTE PTR [eax],al
     ec6:	04 04                	add    al,0x4
     ec8:	05 69 6e 74 00       	add    eax,0x746e69
     ecd:	03 01                	add    eax,DWORD PTR [ecx]
     ecf:	06                   	push   es
     ed0:	20 00                	and    BYTE PTR [eax],al
     ed2:	00 00                	add    BYTE PTR [eax],al
     ed4:	03 02                	add    eax,DWORD PTR [edx]
     ed6:	05 94 00 00 00       	add    eax,0x94
     edb:	03 08                	add    ecx,DWORD PTR [eax]
     edd:	05 86 00 00 00       	add    eax,0x86
     ee2:	03 08                	add    ecx,DWORD PTR [eax]
     ee4:	07                   	pop    es
     ee5:	6f                   	outs   dx,DWORD PTR ds:[esi]
     ee6:	00 00                	add    BYTE PTR [eax],al
     ee8:	00 05 bf 00 00 00    	add    BYTE PTR ds:0xbf,al
     eee:	02 1d 79 00 00 00    	add    bl,BYTE PTR ds:0x79
     ef4:	05 03 71 13 10       	add    eax,0x10137103
     ef9:	00 06                	add    BYTE PTR [esi],al
     efb:	25 00 00 00 00       	and    eax,0x0
     f00:	78 02                	js     f04 <MB_FLAGS+0xf04>
     f02:	00 00                	add    BYTE PTR [eax],al
     f04:	02 00                	add    al,BYTE PTR [eax]
     f06:	b7 05                	mov    bh,0x5
     f08:	00 00                	add    BYTE PTR [eax],al
     f0a:	04 01                	add    al,0x1
     f0c:	00 00                	add    BYTE PTR [eax],al
     f0e:	00 00                	add    BYTE PTR [eax],al
     f10:	01 f0                	add    eax,esi
     f12:	04 00                	add    al,0x0
     f14:	00 a3 00 00 00 2c    	add    BYTE PTR [ebx+0x2c000000],ah
     f1a:	0b 10                	or     edx,DWORD PTR [eax]
     f1c:	00 7a 0c             	add    BYTE PTR [edx+0xc],bh
     f1f:	10 00                	adc    BYTE PTR [eax],al
     f21:	29 09                	sub    DWORD PTR [ecx],ecx
     f23:	00 00                	add    BYTE PTR [eax],al
     f25:	02 19                	add    bl,BYTE PTR [ecx]
     f27:	00 00                	add    BYTE PTR [eax],al
     f29:	00 03                	add    BYTE PTR [ebx],al
     f2b:	09 30                	or     DWORD PTR [eax],esi
     f2d:	00 00                	add    BYTE PTR [eax],al
     f2f:	00 03                	add    BYTE PTR [ebx],al
     f31:	01 08                	add    DWORD PTR [eax],ecx
     f33:	1e                   	push   ds
     f34:	00 00                	add    BYTE PTR [eax],al
     f36:	00 03                	add    BYTE PTR [ebx],al
     f38:	02 07                	add    al,BYTE PTR [edi]
     f3a:	2c 00                	sub    al,0x0
     f3c:	00 00                	add    BYTE PTR [eax],al
     f3e:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
     f41:	79 00                	jns    f43 <MB_FLAGS+0xf43>
     f43:	00 00                	add    BYTE PTR [eax],al
     f45:	04 04                	add    al,0x4
     f47:	05 69 6e 74 00       	add    eax,0x746e69
     f4c:	03 01                	add    eax,DWORD PTR [ecx]
     f4e:	06                   	push   es
     f4f:	20 00                	and    BYTE PTR [eax],al
     f51:	00 00                	add    BYTE PTR [eax],al
     f53:	02 fb                	add    bh,bl
     f55:	00 00                	add    BYTE PTR [eax],al
     f57:	00 03                	add    BYTE PTR [ebx],al
     f59:	0f 30                	wrmsr  
     f5b:	00 00                	add    BYTE PTR [eax],al
     f5d:	00 03                	add    BYTE PTR [ebx],al
     f5f:	02 05 94 00 00 00    	add    al,BYTE PTR ds:0x94
     f65:	02 56 00             	add    dl,BYTE PTR [esi+0x0]
     f68:	00 00                	add    BYTE PTR [eax],al
     f6a:	03 12                	add    edx,DWORD PTR [edx]
     f6c:	37                   	aaa    
     f6d:	00 00                	add    BYTE PTR [eax],al
     f6f:	00 03                	add    BYTE PTR [ebx],al
     f71:	08 05 86 00 00 00    	or     BYTE PTR ds:0x86,al
     f77:	03 08                	add    ecx,DWORD PTR [eax]
     f79:	07                   	pop    es
     f7a:	6f                   	outs   dx,DWORD PTR ds:[esi]
     f7b:	00 00                	add    BYTE PTR [eax],al
     f7d:	00 05 02 04 15 9f    	add    BYTE PTR ds:0x9f150402,al
     f83:	00 00                	add    BYTE PTR [eax],al
     f85:	00 06                	add    BYTE PTR [esi],al
     f87:	78 00                	js     f89 <MB_FLAGS+0xf89>
     f89:	04 17                	add    al,0x17
     f8b:	53                   	push   ebx
     f8c:	00 00                	add    BYTE PTR [eax],al
     f8e:	00 02                	add    BYTE PTR [edx],al
     f90:	23 00                	and    eax,DWORD PTR [eax]
     f92:	06                   	push   es
     f93:	79 00                	jns    f95 <MB_FLAGS+0xf95>
     f95:	04 18                	add    al,0x18
     f97:	53                   	push   ebx
     f98:	00 00                	add    BYTE PTR [eax],al
     f9a:	00 02                	add    BYTE PTR [edx],al
     f9c:	23 01                	and    eax,DWORD PTR [ecx]
     f9e:	00 02                	add    BYTE PTR [edx],al
     fa0:	4f                   	dec    edi
     fa1:	04 00                	add    al,0x0
     fa3:	00 04 19             	add    BYTE PTR [ecx+ebx*1],al
     fa6:	7e 00                	jle    fa8 <MB_FLAGS+0xfa8>
     fa8:	00 00                	add    BYTE PTR [eax],al
     faa:	07                   	pop    es
     fab:	04 04                	add    al,0x4
     fad:	1d 13 01 00 00       	sbb    eax,0x113
     fb2:	08 40 04             	or     BYTE PTR [eax+0x4],al
     fb5:	00 00                	add    BYTE PTR [eax],al
     fb7:	00 08                	add    BYTE PTR [eax],cl
     fb9:	5e                   	pop    esi
     fba:	04 00                	add    al,0x0
     fbc:	00 01                	add    BYTE PTR [ecx],al
     fbe:	08 18                	or     BYTE PTR [eax],bl
     fc0:	04 00                	add    al,0x0
     fc2:	00 02                	add    BYTE PTR [edx],al
     fc4:	08 e0                	or     al,ah
     fc6:	03 00                	add    eax,DWORD PTR [eax]
     fc8:	00 03                	add    BYTE PTR [ebx],al
     fca:	09 52 45             	or     DWORD PTR [edx+0x45],edx
     fcd:	44                   	inc    esp
     fce:	00 04 08             	add    BYTE PTR [eax+ecx*1],al
     fd1:	68 04 00 00 05       	push   0x5000004
     fd6:	08 04 04             	or     BYTE PTR [esp+eax*1],al
     fd9:	00 00                	add    BYTE PTR [eax],al
     fdb:	06                   	push   es
     fdc:	08 e5                	or     ch,ah
     fde:	03 00                	add    eax,DWORD PTR [eax]
     fe0:	00 07                	add    BYTE PTR [edi],al
     fe2:	08 0a                	or     BYTE PTR [edx],cl
     fe4:	04 00                	add    al,0x0
     fe6:	00 08                	add    BYTE PTR [eax],cl
     fe8:	08 59 04             	or     BYTE PTR [ecx+0x4],bl
     feb:	00 00                	add    BYTE PTR [eax],al
     fed:	09 08                	or     DWORD PTR [eax],ecx
     fef:	13 04 00             	adc    eax,DWORD PTR [eax+eax*1]
     ff2:	00 0a                	add    BYTE PTR [edx],cl
     ff4:	08 db                	or     bl,bl
     ff6:	03 00                	add    eax,DWORD PTR [eax]
     ff8:	00 0b                	add    BYTE PTR [ebx],cl
     ffa:	08 70 04             	or     BYTE PTR [eax+0x4],dh
     ffd:	00 00                	add    BYTE PTR [eax],al
     fff:	0c 08                	or     al,0x8
    1001:	63 04 00             	arpl   WORD PTR [eax+eax*1],ax
    1004:	00 0d 08 83 04 00    	add    BYTE PTR ds:0x48308,cl
    100a:	00 0e                	add    BYTE PTR [esi],cl
    100c:	08 3a                	or     BYTE PTR [edx],bh
    100e:	04 00                	add    al,0x0
    1010:	00 0f                	add    BYTE PTR [edi],cl
    1012:	00 02                	add    BYTE PTR [edx],al
    1014:	ea 04 00 00 04 2e aa 	jmp    0xaa2e:0x4000004
    101b:	00 00                	add    BYTE PTR [eax],al
    101d:	00 05 0c 04 30 5f    	add    BYTE PTR ds:0x5f30040c,al
    1023:	01 00                	add    DWORD PTR [eax],eax
    1025:	00 0a                	add    BYTE PTR [edx],cl
    1027:	ef                   	out    dx,eax
    1028:	03 00                	add    eax,DWORD PTR [eax]
    102a:	00 04 34             	add    BYTE PTR [esp+esi*1],al
    102d:	9f                   	lahf   
    102e:	00 00                	add    BYTE PTR [eax],al
    1030:	00 02                	add    BYTE PTR [edx],al
    1032:	23 00                	and    eax,DWORD PTR [eax]
    1034:	0a fa                	or     bh,dl
    1036:	03 00                	add    eax,DWORD PTR [eax]
    1038:	00 04 38             	add    BYTE PTR [eax+edi*1],al
    103b:	5f                   	pop    edi
    103c:	01 00                	add    DWORD PTR [eax],eax
    103e:	00 02                	add    BYTE PTR [edx],al
    1040:	23 04 0a             	and    eax,DWORD PTR [edx+ecx*1]
    1043:	cf                   	iret   
    1044:	03 00                	add    eax,DWORD PTR [eax]
    1046:	00 04 3b             	add    BYTE PTR [ebx+edi*1],al
    1049:	53                   	push   ebx
    104a:	00 00                	add    BYTE PTR [eax],al
    104c:	00 02                	add    BYTE PTR [edx],al
    104e:	23 08                	and    ecx,DWORD PTR [eax]
    1050:	0a 79 04             	or     bh,BYTE PTR [ecx+0x4]
    1053:	00 00                	add    BYTE PTR [eax],al
    1055:	04 3e                	add    al,0x3e
    1057:	53                   	push   ebx
    1058:	00 00                	add    BYTE PTR [eax],al
    105a:	00 02                	add    BYTE PTR [edx],al
    105c:	23 09                	and    ecx,DWORD PTR [ecx]
    105e:	00 0b                	add    BYTE PTR [ebx],cl
    1060:	04 65                	add    al,0x65
    1062:	00 00                	add    BYTE PTR [eax],al
    1064:	00 02                	add    BYTE PTR [edx],al
    1066:	46                   	inc    esi
    1067:	04 00                	add    al,0x0
    1069:	00 04 42             	add    BYTE PTR [edx+eax*2],al
    106c:	1e                   	push   ds
    106d:	01 00                	add    DWORD PTR [eax],eax
    106f:	00 0c e0             	add    BYTE PTR [eax+eiz*8],cl
    1072:	00 00                	add    BYTE PTR [eax],al
    1074:	00 01                	add    BYTE PTR [ecx],al
    1076:	19 01                	sbb    DWORD PTR [ecx],eax
    1078:	2c 0b                	sub    al,0xb
    107a:	10 00                	adc    BYTE PTR [eax],al
    107c:	4a                   	dec    edx
    107d:	0b 10                	or     edx,DWORD PTR [eax]
    107f:	00 98 04 00 00 a5    	add    BYTE PTR [eax-0x5afffffc],bl
    1085:	01 00                	add    DWORD PTR [eax],eax
    1087:	00 0d f6 00 00 00    	add    BYTE PTR ds:0xf6,cl
    108d:	01 19                	add    DWORD PTR [ecx],ebx
    108f:	65 00 00             	add    BYTE PTR gs:[eax],al
    1092:	00 02                	add    BYTE PTR [edx],al
    1094:	91                   	xchg   ecx,eax
    1095:	74 0e                	je     10a5 <MB_FLAGS+0x10a5>
    1097:	76 61                	jbe    10fa <MB_FLAGS+0x10fa>
    1099:	6c                   	ins    BYTE PTR es:[edi],dx
    109a:	00 01                	add    BYTE PTR [ecx],al
    109c:	19 53 00             	sbb    DWORD PTR [ebx+0x0],edx
    109f:	00 00                	add    BYTE PTR [eax],al
    10a1:	02 91 70 00 0f 01    	add    dl,BYTE PTR [ecx+0x10f0070]
    10a7:	d6                   	(bad)  
    10a8:	04 00                	add    al,0x0
    10aa:	00 02                	add    BYTE PTR [edx],al
    10ac:	07                   	pop    es
    10ad:	01 4a 0b             	add    DWORD PTR [edx+0xb],ecx
    10b0:	10 00                	adc    BYTE PTR [eax],al
    10b2:	8b 0b                	mov    ecx,DWORD PTR [ebx]
    10b4:	10 00                	adc    BYTE PTR [eax],al
    10b6:	d0 04 00             	rol    BYTE PTR [eax+eax*1],1
    10b9:	00 e9                	add    cl,ch
    10bb:	01 00                	add    DWORD PTR [eax],eax
    10bd:	00 0d 7b 01 00 00    	add    BYTE PTR ds:0x17b,cl
    10c3:	02 07                	add    al,BYTE PTR [edi]
    10c5:	e9 01 00 00 02       	jmp    20010cb <idt_ptr+0x1efc02b>
    10ca:	91                   	xchg   ecx,eax
    10cb:	00 0d d1 03 00 00    	add    BYTE PTR ds:0x3d1,cl
    10d1:	02 07                	add    al,BYTE PTR [edi]
    10d3:	13 01                	adc    eax,DWORD PTR [ecx]
    10d5:	00 00                	add    BYTE PTR [eax],al
    10d7:	02 91 04 0d 7b 04    	add    dl,BYTE PTR [ecx+0x47b0d04]
    10dd:	00 00                	add    BYTE PTR [eax],al
    10df:	02 07                	add    al,BYTE PTR [edi]
    10e1:	13 01                	adc    eax,DWORD PTR [ecx]
    10e3:	00 00                	add    BYTE PTR [eax],al
    10e5:	02 91 08 00 0b 04    	add    dl,BYTE PTR [ecx+0x40b0008]
    10eb:	65 01 00             	add    DWORD PTR gs:[eax],eax
    10ee:	00 0f                	add    BYTE PTR [edi],cl
    10f0:	01 aa 04 00 00 02    	add    DWORD PTR [edx+0x2000004],ebp
    10f6:	15 01 8b 0b 10       	adc    eax,0x100b8b01
    10fb:	00 f2                	add    dl,dh
    10fd:	0b 10                	or     edx,DWORD PTR [eax]
    10ff:	00 08                	add    BYTE PTR [eax],cl
    1101:	05 00 00 2f 02       	add    eax,0x22f0000
    1106:	00 00                	add    BYTE PTR [eax],al
    1108:	0d 7b 01 00 00       	or     eax,0x17b
    110d:	02 15 e9 01 00 00    	add    dl,BYTE PTR ds:0x1e9
    1113:	02 91 00 10 78 00    	add    dl,BYTE PTR [ecx+0x781000]
    1119:	02 17                	add    dl,BYTE PTR [edi]
    111b:	45                   	inc    ebp
    111c:	00 00                	add    BYTE PTR [eax],al
    111e:	00 02                	add    BYTE PTR [edx],al
    1120:	91                   	xchg   ecx,eax
    1121:	74 10                	je     1133 <MB_FLAGS+0x1133>
    1123:	79 00                	jns    1125 <MB_FLAGS+0x1125>
    1125:	02 17                	add    dl,BYTE PTR [edi]
    1127:	45                   	inc    ebp
    1128:	00 00                	add    BYTE PTR [eax],al
    112a:	00 02                	add    BYTE PTR [edx],al
    112c:	91                   	xchg   ecx,eax
    112d:	70 00                	jo     112f <MB_FLAGS+0x112f>
    112f:	0f 01                	(bad)  
    1131:	c0 04 00 00          	rol    BYTE PTR [eax+eax*1],0x0
    1135:	02 25 01 f2 0b 10    	add    ah,BYTE PTR ds:0x100bf201
    113b:	00 7a 0c             	add    BYTE PTR [edx+0xc],bh
    113e:	10 00                	adc    BYTE PTR [eax],al
    1140:	40                   	inc    eax
    1141:	05 00 00 65 02       	add    eax,0x2650000
    1146:	00 00                	add    BYTE PTR [eax],al
    1148:	0d 7b 01 00 00       	or     eax,0x17b
    114d:	02 25 e9 01 00 00    	add    ah,BYTE PTR ds:0x1e9
    1153:	02 91 00 10 70 6f    	add    dl,BYTE PTR [ecx+0x6f701000]
    1159:	73 00                	jae    115b <MB_FLAGS+0x115b>
    115b:	02 27                	add    ah,BYTE PTR [edi]
    115d:	37                   	aaa    
    115e:	00 00                	add    BYTE PTR [eax],al
    1160:	00 02                	add    BYTE PTR [edx],al
    1162:	91                   	xchg   ecx,eax
    1163:	76 00                	jbe    1165 <MB_FLAGS+0x1165>
    1165:	11 bf 00 00 00 05    	adc    DWORD PTR [edi+0x5000000],edi
    116b:	1d 76 02 00 00       	sbb    eax,0x276
    1170:	05 03 72 13 10       	add    eax,0x10137203
    1175:	00 12                	add    BYTE PTR [edx],dl
    1177:	25 00 00 00 00       	and    eax,0x0

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	f4                   	hlt    
   1:	00 00                	add    BYTE PTR [eax],al
   3:	00 02                	add    BYTE PTR [edx],al
   5:	00 82 00 00 00 01    	add    BYTE PTR [edx+0x1000000],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	6c                   	ins    BYTE PTR es:[edi],dx
  1c:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
  23:	73 6f                	jae    94 <MB_FLAGS+0x94>
  25:	75 72                	jne    99 <MB_FLAGS+0x99>
  27:	63 65 00             	arpl   WORD PTR [ebp+0x0],sp
  2a:	6c                   	ins    BYTE PTR es:[edi],dx
  2b:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
  32:	73 6f                	jae    a3 <MB_FLAGS+0xa3>
  34:	75 72                	jne    a8 <MB_FLAGS+0xa8>
  36:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
  39:	2e                   	cs
  3a:	2e                   	cs
  3b:	2f                   	das    
  3c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  43:	2f                   	das    
  44:	2e                   	cs
  45:	2e                   	cs
  46:	2f                   	das    
  47:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  4e:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
  52:	72 61                	jb     b5 <MB_FLAGS+0xb5>
  54:	72 79                	jb     cf <MB_FLAGS+0xcf>
  56:	2f                   	das    
  57:	73 6f                	jae    c8 <MB_FLAGS+0xc8>
  59:	75 72                	jne    cd <MB_FLAGS+0xcd>
  5b:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
  5e:	2e                   	cs
  5f:	2e                   	cs
  60:	2f                   	das    
  61:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  68:	00 00                	add    BYTE PTR [eax],al
  6a:	73 74                	jae    e0 <MB_FLAGS+0xe0>
  6c:	64 69 6f 2e 63 00 01 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x10063
  73:	00 
  74:	00 74 79 70          	add    BYTE PTR [ecx+edi*2+0x70],dh
  78:	65                   	gs
  79:	73 2e                	jae    a9 <MB_FLAGS+0xa9>
  7b:	68 00 02 00 00       	push   0x200
  80:	73 74                	jae    f6 <MB_FLAGS+0xf6>
  82:	64 69 6f 2e 68 00 03 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x30068
  89:	00 
  8a:	00 00                	add    BYTE PTR [eax],al
  8c:	00 05 02 0c 00 10    	add    BYTE PTR ds:0x10000c02,al
  92:	00 1a                	add    BYTE PTR [edx],bl
  94:	67 75 92             	addr16 jne 29 <MB_FLAGS+0x29>
  97:	5a                   	pop    edx
  98:	d8 92 08 ca 08 bb    	fcom   DWORD PTR [edx-0x44f735f8]
  9e:	4b                   	dec    ebx
  9f:	5b                   	pop    ebx
  a0:	08 bb 4b 5b 08 bb    	or     BYTE PTR [ebx-0x44f7a4b5],bh
  a6:	4b                   	dec    ebx
  a7:	31 08                	xor    DWORD PTR [eax],ecx
  a9:	bb 4b 3f 02 23       	mov    ebx,0x23023f4b
  ae:	13 4b 32             	adc    ecx,DWORD PTR [ebx+0x32]
  b1:	02 2d 0e 50 4b 00    	add    ch,BYTE PTR ds:0x4b500e
  b7:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
  ba:	03 5b 90             	add    ebx,DWORD PTR [ebx-0x70]
  bd:	03 27                	add    esp,DWORD PTR [edi]
  bf:	d6                   	(bad)  
  c0:	33 08                	xor    ecx,DWORD PTR [eax]
  c2:	d7                   	xlat   BYTE PTR ds:[ebx]
  c3:	76 08                	jbe    cd <MB_FLAGS+0xcd>
  c5:	ae                   	scas   al,BYTE PTR es:[edi]
  c6:	08 75 6b             	or     BYTE PTR [ebp+0x6b],dh
  c9:	08 5e d7             	or     BYTE PTR [esi-0x29],bl
  cc:	92                   	xchg   edx,eax
  cd:	76 00                	jbe    cf <MB_FLAGS+0xcf>
  cf:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
  d2:	06                   	push   es
  d3:	ac                   	lods   al,BYTE PTR ds:[esi]
  d4:	06                   	push   es
  d5:	af                   	scas   eax,DWORD PTR es:[edi]
  d6:	77 67                	ja     13f <MB_FLAGS+0x13f>
  d8:	e7 02                	out    0x2,eax
  da:	22 13                	and    dl,BYTE PTR [ebx]
  dc:	00 02                	add    BYTE PTR [edx],al
  de:	04 01                	add    al,0x1
  e0:	08 48 6b             	or     BYTE PTR [eax+0x6b],cl
  e3:	75 2f                	jne    114 <MB_FLAGS+0x114>
  e5:	4b                   	dec    ebx
  e6:	00 02                	add    BYTE PTR [edx],al
  e8:	04 01                	add    al,0x1
  ea:	02 32                	add    dh,BYTE PTR [edx]
  ec:	10 03                	adc    BYTE PTR [ebx],al
  ee:	72 82                	jb     72 <MB_FLAGS+0x72>
  f0:	03 13                	add    edx,DWORD PTR [ebx]
  f2:	4a                   	dec    edx
  f3:	02 02                	add    al,BYTE PTR [edx]
  f5:	00 01                	add    BYTE PTR [ecx],al
  f7:	01 42 01             	add    DWORD PTR [edx+0x1],eax
  fa:	00 00                	add    BYTE PTR [eax],al
  fc:	02 00                	add    al,BYTE PTR [eax]
  fe:	c7 00 00 00 01 01    	mov    DWORD PTR [eax],0x1010000
 104:	fb                   	sti    
 105:	0e                   	push   cs
 106:	0d 00 01 01 01       	or     eax,0x1010100
 10b:	01 00                	add    DWORD PTR [eax],eax
 10d:	00 00                	add    BYTE PTR [eax],al
 10f:	01 00                	add    DWORD PTR [eax],eax
 111:	00 01                	add    BYTE PTR [ecx],al
 113:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 118:	2f                   	das    
 119:	73 6f                	jae    18a <MB_FLAGS+0x18a>
 11b:	75 72                	jne    18f <MB_FLAGS+0x18f>
 11d:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 120:	2e                   	cs
 121:	2e                   	cs
 122:	2f                   	das    
 123:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 12a:	2f                   	das    
 12b:	2e                   	cs
 12c:	2e                   	cs
 12d:	2f                   	das    
 12e:	2e                   	cs
 12f:	2e                   	cs
 130:	2f                   	das    
 131:	61                   	popa   
 132:	72 63                	jb     197 <MB_FLAGS+0x197>
 134:	68 2f 78 38 36       	push   0x3638782f
 139:	2f                   	das    
 13a:	70 6f                	jo     1ab <MB_FLAGS+0x1ab>
 13c:	72 74                	jb     1b2 <MB_FLAGS+0x1b2>
 13e:	73 2f                	jae    16f <MB_FLAGS+0x16f>
 140:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 147:	00 64 65 62          	add    BYTE PTR [ebp+eiz*2+0x62],ah
 14b:	75 67                	jne    1b4 <MB_FLAGS+0x1b4>
 14d:	2f                   	das    
 14e:	73 6f                	jae    1bf <MB_FLAGS+0x1bf>
 150:	75 72                	jne    1c4 <MB_FLAGS+0x1c4>
 152:	63 65 00             	arpl   WORD PTR [ebp+0x0],sp
 155:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 15a:	2f                   	das    
 15b:	73 6f                	jae    1cc <MB_FLAGS+0x1cc>
 15d:	75 72                	jne    1d1 <MB_FLAGS+0x1d1>
 15f:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 162:	2e                   	cs
 163:	2e                   	cs
 164:	2f                   	das    
 165:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 16c:	2f                   	das    
 16d:	2e                   	cs
 16e:	2e                   	cs
 16f:	2f                   	das    
 170:	2e                   	cs
 171:	2e                   	cs
 172:	2f                   	das    
 173:	6c                   	ins    BYTE PTR es:[edi],dx
 174:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 17b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 182:	00 64 65 62          	add    BYTE PTR [ebp+eiz*2+0x62],ah
 186:	75 67                	jne    1ef <MB_FLAGS+0x1ef>
 188:	2f                   	das    
 189:	73 6f                	jae    1fa <MB_FLAGS+0x1fa>
 18b:	75 72                	jne    1ff <MB_FLAGS+0x1ff>
 18d:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 190:	2e                   	cs
 191:	2e                   	cs
 192:	2f                   	das    
 193:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 19a:	00 00                	add    BYTE PTR [eax],al
 19c:	50                   	push   eax
 19d:	6f                   	outs   dx,DWORD PTR ds:[esi]
 19e:	72 74                	jb     214 <MB_FLAGS+0x214>
 1a0:	73 2e                	jae    1d0 <MB_FLAGS+0x1d0>
 1a2:	68 00 01 00 00       	push   0x100
 1a7:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 1ac:	2e 63 00             	arpl   WORD PTR cs:[eax],ax
 1af:	02 00                	add    al,BYTE PTR [eax]
 1b1:	00 74 79 70          	add    BYTE PTR [ecx+edi*2+0x70],dh
 1b5:	65                   	gs
 1b6:	73 2e                	jae    1e6 <MB_FLAGS+0x1e6>
 1b8:	68 00 03 00 00       	push   0x300
 1bd:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 1c2:	2e                   	cs
 1c3:	68 00 04 00 00       	push   0x400
 1c8:	00 00                	add    BYTE PTR [eax],al
 1ca:	05 02 b8 02 10       	add    eax,0x1002b802
 1cf:	00 03                	add    BYTE PTR [ebx],al
 1d1:	19 01                	sbb    DWORD PTR [ecx],eax
 1d3:	08 2f                	or     BYTE PTR [edi],ch
 1d5:	94                   	xchg   esp,eax
 1d6:	04 02                	add    al,0x2
 1d8:	03 6e 2e             	add    ebp,DWORD PTR [esi+0x2e]
 1db:	68 92 5a d8 92       	push   0x92d85a92
 1e0:	08 ca                	or     dl,cl
 1e2:	08 bb 4b 5b 08 bb    	or     BYTE PTR [ebx-0x44f7a4b5],bh
 1e8:	4b                   	dec    ebx
 1e9:	5b                   	pop    ebx
 1ea:	08 bb 4b 31 08 bb    	or     BYTE PTR [ebx-0x44f7ceb5],bh
 1f0:	4b                   	dec    ebx
 1f1:	3f                   	aas    
 1f2:	02 23                	add    ah,BYTE PTR [ebx]
 1f4:	13 4b 32             	adc    ecx,DWORD PTR [ebx+0x32]
 1f7:	02 2b                	add    ch,BYTE PTR [ebx]
 1f9:	0e                   	push   cs
 1fa:	51                   	push   ecx
 1fb:	00 02                	add    BYTE PTR [edx],al
 1fd:	04 01                	add    al,0x1
 1ff:	03 5b 90             	add    ebx,DWORD PTR [ebx-0x70]
 202:	03 28                	add    ebp,DWORD PTR [eax]
 204:	d6                   	(bad)  
 205:	02 24 13             	add    ah,BYTE PTR [ebx+edx*1]
 208:	33 08                	xor    ecx,DWORD PTR [eax]
 20a:	d8 08                	fmul   DWORD PTR [eax]
 20c:	67 6b 08 5e          	imul   ecx,DWORD PTR [bx+si],0x5e
 210:	d7                   	xlat   BYTE PTR ds:[ebx]
 211:	92                   	xchg   edx,eax
 212:	76 00                	jbe    214 <MB_FLAGS+0x214>
 214:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 217:	06                   	push   es
 218:	ac                   	lods   al,BYTE PTR ds:[esi]
 219:	06                   	push   es
 21a:	af                   	scas   eax,DWORD PTR es:[edi]
 21b:	77 67                	ja     284 <MB_FLAGS+0x284>
 21d:	91                   	xchg   ecx,eax
 21e:	52                   	push   edx
 21f:	29 08                	sub    DWORD PTR [eax],ecx
 221:	c9                   	leave  
 222:	4b                   	dec    ebx
 223:	00 02                	add    BYTE PTR [edx],al
 225:	04 01                	add    al,0x1
 227:	08 47 6c             	or     BYTE PTR [edi+0x6c],al
 22a:	2f                   	das    
 22b:	4b                   	dec    ebx
 22c:	00 02                	add    BYTE PTR [edx],al
 22e:	04 01                	add    al,0x1
 230:	02 2c 10             	add    ch,BYTE PTR [eax+edx*1]
 233:	03 71 82             	add    esi,DWORD PTR [ecx-0x7e]
 236:	03 13                	add    edx,DWORD PTR [ebx]
 238:	4a                   	dec    edx
 239:	02 02                	add    al,BYTE PTR [edx]
 23b:	00 01                	add    BYTE PTR [ecx],al
 23d:	01 4c 01 00          	add    DWORD PTR [ecx+eax*1+0x0],ecx
 241:	00 02                	add    BYTE PTR [edx],al
 243:	00 f4                	add    ah,dh
 245:	00 00                	add    BYTE PTR [eax],al
 247:	00 01                	add    BYTE PTR [ecx],al
 249:	01 fb                	add    ebx,edi
 24b:	0e                   	push   cs
 24c:	0d 00 01 01 01       	or     eax,0x1010100
 251:	01 00                	add    DWORD PTR [eax],eax
 253:	00 00                	add    BYTE PTR [eax],al
 255:	01 00                	add    DWORD PTR [eax],eax
 257:	00 01                	add    BYTE PTR [ecx],al
 259:	61                   	popa   
 25a:	72 63                	jb     2bf <MB_FLAGS+0x2bf>
 25c:	68 2f 78 38 36       	push   0x3638782f
 261:	2f                   	das    
 262:	70 6f                	jo     2d3 <MB_FLAGS+0x2d3>
 264:	72 74                	jb     2da <MB_FLAGS+0x2da>
 266:	73 2f                	jae    297 <MB_FLAGS+0x297>
 268:	73 6f                	jae    2d9 <MB_FLAGS+0x2d9>
 26a:	75 72                	jne    2de <MB_FLAGS+0x2de>
 26c:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 26f:	2e                   	cs
 270:	2e                   	cs
 271:	2f                   	das    
 272:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 279:	2f                   	das    
 27a:	2e                   	cs
 27b:	2e                   	cs
 27c:	2f                   	das    
 27d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 284:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 287:	63 68 2f             	arpl   WORD PTR [eax+0x2f],bp
 28a:	78 38                	js     2c4 <MB_FLAGS+0x2c4>
 28c:	36                   	ss
 28d:	2f                   	das    
 28e:	70 6f                	jo     2ff <MB_FLAGS+0x2ff>
 290:	72 74                	jb     306 <MB_FLAGS+0x306>
 292:	73 2f                	jae    2c3 <MB_FLAGS+0x2c3>
 294:	73 6f                	jae    305 <MB_FLAGS+0x305>
 296:	75 72                	jne    30a <MB_FLAGS+0x30a>
 298:	63 65 00             	arpl   WORD PTR [ebp+0x0],sp
 29b:	61                   	popa   
 29c:	72 63                	jb     301 <MB_FLAGS+0x301>
 29e:	68 2f 78 38 36       	push   0x3638782f
 2a3:	2f                   	das    
 2a4:	70 6f                	jo     315 <MB_FLAGS+0x315>
 2a6:	72 74                	jb     31c <MB_FLAGS+0x31c>
 2a8:	73 2f                	jae    2d9 <MB_FLAGS+0x2d9>
 2aa:	73 6f                	jae    31b <MB_FLAGS+0x31b>
 2ac:	75 72                	jne    320 <MB_FLAGS+0x320>
 2ae:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 2b1:	2e                   	cs
 2b2:	2e                   	cs
 2b3:	2f                   	das    
 2b4:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 2bb:	2f                   	das    
 2bc:	2e                   	cs
 2bd:	2e                   	cs
 2be:	2f                   	das    
 2bf:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 2c6:	2f                   	das    
 2c7:	2e                   	cs
 2c8:	2e                   	cs
 2c9:	2f                   	das    
 2ca:	2e                   	cs
 2cb:	2e                   	cs
 2cc:	2f                   	das    
 2cd:	2e                   	cs
 2ce:	2e                   	cs
 2cf:	2f                   	das    
 2d0:	2e                   	cs
 2d1:	2e                   	cs
 2d2:	2f                   	das    
 2d3:	6c                   	ins    BYTE PTR es:[edi],dx
 2d4:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 2db:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 2e2:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 2e5:	63 68 2f             	arpl   WORD PTR [eax+0x2f],bp
 2e8:	78 38                	js     322 <MB_FLAGS+0x322>
 2ea:	36                   	ss
 2eb:	2f                   	das    
 2ec:	70 6f                	jo     35d <MB_FLAGS+0x35d>
 2ee:	72 74                	jb     364 <MB_FLAGS+0x364>
 2f0:	73 2f                	jae    321 <MB_FLAGS+0x321>
 2f2:	73 6f                	jae    363 <MB_FLAGS+0x363>
 2f4:	75 72                	jne    368 <MB_FLAGS+0x368>
 2f6:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 2f9:	2e                   	cs
 2fa:	2e                   	cs
 2fb:	2f                   	das    
 2fc:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 303:	00 00                	add    BYTE PTR [eax],al
 305:	50                   	push   eax
 306:	6f                   	outs   dx,DWORD PTR ds:[esi]
 307:	72 74                	jb     37d <MB_FLAGS+0x37d>
 309:	73 2e                	jae    339 <MB_FLAGS+0x339>
 30b:	68 00 01 00 00       	push   0x100
 310:	53                   	push   ebx
 311:	65                   	gs
 312:	72 69                	jb     37d <MB_FLAGS+0x37d>
 314:	61                   	popa   
 315:	6c                   	ins    BYTE PTR es:[edi],dx
 316:	50                   	push   eax
 317:	6f                   	outs   dx,DWORD PTR ds:[esi]
 318:	72 74                	jb     38e <MB_FLAGS+0x38e>
 31a:	2e 63 00             	arpl   WORD PTR cs:[eax],ax
 31d:	02 00                	add    al,BYTE PTR [eax]
 31f:	00 74 79 70          	add    BYTE PTR [ecx+edi*2+0x70],dh
 323:	65                   	gs
 324:	73 2e                	jae    354 <MB_FLAGS+0x354>
 326:	68 00 03 00 00       	push   0x300
 32b:	53                   	push   ebx
 32c:	65                   	gs
 32d:	72 69                	jb     398 <MB_FLAGS+0x398>
 32f:	61                   	popa   
 330:	6c                   	ins    BYTE PTR es:[edi],dx
 331:	50                   	push   eax
 332:	6f                   	outs   dx,DWORD PTR ds:[esi]
 333:	72 74                	jb     3a9 <MB_FLAGS+0x3a9>
 335:	2e                   	cs
 336:	68 00 04 00 00       	push   0x400
 33b:	00 00                	add    BYTE PTR [eax],al
 33d:	05 02 68 05 10       	add    eax,0x10056802
 342:	00 03                	add    BYTE PTR [ebx],al
 344:	0a 01                	or     al,BYTE PTR [ecx]
 346:	d8 08                	fmul   DWORD PTR [eax]
 348:	25 4b 6d 08 2f       	and    eax,0x2f086d4b
 34d:	94                   	xchg   esp,eax
 34e:	04 02                	add    al,0x2
 350:	03 68 2e             	add    ebp,DWORD PTR [eax+0x2e]
 353:	08 f5                	or     ch,dh
 355:	9f                   	lahf   
 356:	ad                   	lods   eax,DWORD PTR ds:[esi]
 357:	9f                   	lahf   
 358:	a5                   	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 359:	08 77 08             	or     BYTE PTR [edi+0x8],dh
 35c:	af                   	scas   eax,DWORD PTR es:[edi]
 35d:	08 b0 08 86 08 b0    	or     BYTE PTR [eax-0x4ff779f8],dh
 363:	08 af 08 91 08 91    	or     BYTE PTR [edi-0x6ef76ef8],ch
 369:	6b 67 00 02          	imul   esp,DWORD PTR [edi+0x0],0x2
 36d:	04 01                	add    al,0x1
 36f:	06                   	push   es
 370:	20 06                	and    BYTE PTR [esi],al
 372:	e7 08                	out    0x8,eax
 374:	13 33                	adc    esi,DWORD PTR [ebx]
 376:	bb 00 02 04 01       	mov    ebx,0x1040200
 37b:	06                   	push   es
 37c:	20 06                	and    BYTE PTR [esi],al
 37e:	e7 08                	out    0x8,eax
 380:	83 33 67             	xor    DWORD PTR [ebx],0x67
 383:	08 67 33             	or     BYTE PTR [edi+0x33],ah
 386:	67 08 67 02          	or     BYTE PTR [bx+0x2],ah
 38a:	02 00                	add    al,BYTE PTR [eax]
 38c:	01 01                	add    DWORD PTR [ecx],eax
 38e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 38f:	01 00                	add    DWORD PTR [eax],eax
 391:	00 02                	add    BYTE PTR [edx],al
 393:	00 26                	add    BYTE PTR [esi],ah
 395:	01 00                	add    DWORD PTR [eax],eax
 397:	00 01                	add    BYTE PTR [ecx],al
 399:	01 fb                	add    ebx,edi
 39b:	0e                   	push   cs
 39c:	0d 00 01 01 01       	or     eax,0x1010100
 3a1:	01 00                	add    DWORD PTR [eax],eax
 3a3:	00 00                	add    BYTE PTR [eax],al
 3a5:	01 00                	add    DWORD PTR [eax],eax
 3a7:	00 01                	add    BYTE PTR [ecx],al
 3a9:	61                   	popa   
 3aa:	72 63                	jb     40f <MB_FLAGS+0x40f>
 3ac:	68 2f 78 38 36       	push   0x3638782f
 3b1:	2f                   	das    
 3b2:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 3b5:	6d                   	ins    DWORD PTR es:[edi],dx
 3b6:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3b7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3b8:	2f                   	das    
 3b9:	73 6f                	jae    42a <MB_FLAGS+0x42a>
 3bb:	75 72                	jne    42f <MB_FLAGS+0x42f>
 3bd:	63 65 00             	arpl   WORD PTR [ebp+0x0],sp
 3c0:	61                   	popa   
 3c1:	72 63                	jb     426 <MB_FLAGS+0x426>
 3c3:	68 2f 78 38 36       	push   0x3638782f
 3c8:	2f                   	das    
 3c9:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 3cc:	6d                   	ins    DWORD PTR es:[edi],dx
 3cd:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3ce:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3cf:	2f                   	das    
 3d0:	73 6f                	jae    441 <MB_FLAGS+0x441>
 3d2:	75 72                	jne    446 <MB_FLAGS+0x446>
 3d4:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 3d7:	2e                   	cs
 3d8:	2e                   	cs
 3d9:	2f                   	das    
 3da:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 3e1:	2f                   	das    
 3e2:	2e                   	cs
 3e3:	2e                   	cs
 3e4:	2f                   	das    
 3e5:	2e                   	cs
 3e6:	2e                   	cs
 3e7:	2f                   	das    
 3e8:	2e                   	cs
 3e9:	2e                   	cs
 3ea:	2f                   	das    
 3eb:	2e                   	cs
 3ec:	2e                   	cs
 3ed:	2f                   	das    
 3ee:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 3f3:	2f                   	das    
 3f4:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 3fb:	2f                   	das    
 3fc:	2e                   	cs
 3fd:	2e                   	cs
 3fe:	2f                   	das    
 3ff:	2e                   	cs
 400:	2e                   	cs
 401:	2f                   	das    
 402:	6c                   	ins    BYTE PTR es:[edi],dx
 403:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 40a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 411:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 414:	63 68 2f             	arpl   WORD PTR [eax+0x2f],bp
 417:	78 38                	js     451 <MB_FLAGS+0x451>
 419:	36                   	ss
 41a:	2f                   	das    
 41b:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 41e:	6d                   	ins    DWORD PTR es:[edi],dx
 41f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 420:	6e                   	outs   dx,BYTE PTR ds:[esi]
 421:	2f                   	das    
 422:	73 6f                	jae    493 <MB_FLAGS+0x493>
 424:	75 72                	jne    498 <MB_FLAGS+0x498>
 426:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 429:	2e                   	cs
 42a:	2e                   	cs
 42b:	2f                   	das    
 42c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 433:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 436:	63 68 2f             	arpl   WORD PTR [eax+0x2f],bp
 439:	78 38                	js     473 <MB_FLAGS+0x473>
 43b:	36                   	ss
 43c:	2f                   	das    
 43d:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 440:	6d                   	ins    DWORD PTR es:[edi],dx
 441:	6f                   	outs   dx,DWORD PTR ds:[esi]
 442:	6e                   	outs   dx,BYTE PTR ds:[esi]
 443:	2f                   	das    
 444:	73 6f                	jae    4b5 <MB_FLAGS+0x4b5>
 446:	75 72                	jne    4ba <MB_FLAGS+0x4ba>
 448:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 44b:	2e                   	cs
 44c:	2e                   	cs
 44d:	2f                   	das    
 44e:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 455:	2f                   	das    
 456:	2e                   	cs
 457:	2e                   	cs
 458:	2f                   	das    
 459:	2e                   	cs
 45a:	2e                   	cs
 45b:	2f                   	das    
 45c:	2e                   	cs
 45d:	2e                   	cs
 45e:	2f                   	das    
 45f:	2e                   	cs
 460:	2e                   	cs
 461:	2f                   	das    
 462:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 467:	2f                   	das    
 468:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 46f:	00 00                	add    BYTE PTR [eax],al
 471:	47                   	inc    edi
 472:	6c                   	ins    BYTE PTR es:[edi],dx
 473:	6f                   	outs   dx,DWORD PTR ds:[esi]
 474:	62 61 6c             	bound  esp,QWORD PTR [ecx+0x6c]
 477:	44                   	inc    esp
 478:	65                   	gs
 479:	73 63                	jae    4de <MB_FLAGS+0x4de>
 47b:	72 69                	jb     4e6 <MB_FLAGS+0x4e6>
 47d:	70 74                	jo     4f3 <MB_FLAGS+0x4f3>
 47f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 480:	72 54                	jb     4d6 <MB_FLAGS+0x4d6>
 482:	61                   	popa   
 483:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 487:	63 00                	arpl   WORD PTR [eax],ax
 489:	01 00                	add    DWORD PTR [eax],eax
 48b:	00 74 79 70          	add    BYTE PTR [ecx+edi*2+0x70],dh
 48f:	65                   	gs
 490:	73 2e                	jae    4c0 <MB_FLAGS+0x4c0>
 492:	68 00 02 00 00       	push   0x200
 497:	47                   	inc    edi
 498:	6c                   	ins    BYTE PTR es:[edi],dx
 499:	6f                   	outs   dx,DWORD PTR ds:[esi]
 49a:	62 61 6c             	bound  esp,QWORD PTR [ecx+0x6c]
 49d:	44                   	inc    esp
 49e:	65                   	gs
 49f:	73 63                	jae    504 <MB_FLAGS+0x504>
 4a1:	72 69                	jb     50c <MB_FLAGS+0x50c>
 4a3:	70 74                	jo     519 <MB_FLAGS+0x519>
 4a5:	6f                   	outs   dx,DWORD PTR ds:[esi]
 4a6:	72 54                	jb     4fc <MB_FLAGS+0x4fc>
 4a8:	61                   	popa   
 4a9:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 4ad:	68 00 03 00 00       	push   0x300
 4b2:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 4b7:	2e                   	cs
 4b8:	68 00 04 00 00       	push   0x400
 4bd:	00 00                	add    BYTE PTR [eax],al
 4bf:	05 02 a8 07 10       	add    eax,0x1007a802
 4c4:	00 1a                	add    BYTE PTR [edx],bl
 4c6:	68 59 34 08 22       	push   0x22083459
 4cb:	f4                   	hlt    
 4cc:	f4                   	hlt    
 4cd:	08 22                	or     BYTE PTR [edx],ah
 4cf:	d8 08                	fmul   DWORD PTR [eax]
 4d1:	ca 08 21             	retf   0x2108
 4d4:	33 68 bc             	xor    ebp,DWORD PTR [eax-0x44]
 4d7:	91                   	xchg   ecx,eax
 4d8:	a0 02 2c 13 02       	mov    al,ds:0x2132c02
 4dd:	2c 13                	sub    al,0x13
 4df:	02 2c 13             	add    ch,BYTE PTR [ebx+edx*1]
 4e2:	02 2c 13             	add    ch,BYTE PTR [ebx+edx*1]
 4e5:	02 2c 14             	add    ch,BYTE PTR [esp+edx*1]
 4e8:	08 3d 08 4c 73 02    	or     BYTE PTR ds:0x2734c08,bh
 4ee:	24 14                	and    al,0x14
 4f0:	08 3d 08 3d 08 3d    	or     BYTE PTR ds:0x3d083d08,bh
 4f6:	08 3d 08 3e ca bb    	or     BYTE PTR ds:0xbbca3e08,bh
 4fc:	02 02                	add    al,BYTE PTR [edx]
 4fe:	00 01                	add    BYTE PTR [ecx],al
 500:	01 52 01             	add    DWORD PTR [edx+0x1],edx
 503:	00 00                	add    BYTE PTR [eax],al
 505:	02 00                	add    al,BYTE PTR [eax]
 507:	2c 01                	sub    al,0x1
 509:	00 00                	add    BYTE PTR [eax],al
 50b:	01 01                	add    DWORD PTR [ecx],eax
 50d:	fb                   	sti    
 50e:	0e                   	push   cs
 50f:	0d 00 01 01 01       	or     eax,0x1010100
 514:	01 00                	add    DWORD PTR [eax],eax
 516:	00 00                	add    BYTE PTR [eax],al
 518:	01 00                	add    DWORD PTR [eax],eax
 51a:	00 01                	add    BYTE PTR [ecx],al
 51c:	61                   	popa   
 51d:	72 63                	jb     582 <MB_FLAGS+0x582>
 51f:	68 2f 78 38 36       	push   0x3638782f
 524:	2f                   	das    
 525:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 528:	6d                   	ins    DWORD PTR es:[edi],dx
 529:	6f                   	outs   dx,DWORD PTR ds:[esi]
 52a:	6e                   	outs   dx,BYTE PTR ds:[esi]
 52b:	2f                   	das    
 52c:	73 6f                	jae    59d <MB_FLAGS+0x59d>
 52e:	75 72                	jne    5a2 <MB_FLAGS+0x5a2>
 530:	63 65 00             	arpl   WORD PTR [ebp+0x0],sp
 533:	61                   	popa   
 534:	72 63                	jb     599 <MB_FLAGS+0x599>
 536:	68 2f 78 38 36       	push   0x3638782f
 53b:	2f                   	das    
 53c:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 53f:	6d                   	ins    DWORD PTR es:[edi],dx
 540:	6f                   	outs   dx,DWORD PTR ds:[esi]
 541:	6e                   	outs   dx,BYTE PTR ds:[esi]
 542:	2f                   	das    
 543:	73 6f                	jae    5b4 <MB_FLAGS+0x5b4>
 545:	75 72                	jne    5b9 <MB_FLAGS+0x5b9>
 547:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 54a:	2e                   	cs
 54b:	2e                   	cs
 54c:	2f                   	das    
 54d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 554:	2f                   	das    
 555:	2e                   	cs
 556:	2e                   	cs
 557:	2f                   	das    
 558:	2e                   	cs
 559:	2e                   	cs
 55a:	2f                   	das    
 55b:	2e                   	cs
 55c:	2e                   	cs
 55d:	2f                   	das    
 55e:	2e                   	cs
 55f:	2e                   	cs
 560:	2f                   	das    
 561:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 566:	2f                   	das    
 567:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 56e:	2f                   	das    
 56f:	2e                   	cs
 570:	2e                   	cs
 571:	2f                   	das    
 572:	2e                   	cs
 573:	2e                   	cs
 574:	2f                   	das    
 575:	6c                   	ins    BYTE PTR es:[edi],dx
 576:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 57d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 584:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 587:	63 68 2f             	arpl   WORD PTR [eax+0x2f],bp
 58a:	78 38                	js     5c4 <MB_FLAGS+0x5c4>
 58c:	36                   	ss
 58d:	2f                   	das    
 58e:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 591:	6d                   	ins    DWORD PTR es:[edi],dx
 592:	6f                   	outs   dx,DWORD PTR ds:[esi]
 593:	6e                   	outs   dx,BYTE PTR ds:[esi]
 594:	2f                   	das    
 595:	73 6f                	jae    606 <MB_FLAGS+0x606>
 597:	75 72                	jne    60b <MB_FLAGS+0x60b>
 599:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 59c:	2e                   	cs
 59d:	2e                   	cs
 59e:	2f                   	das    
 59f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 5a6:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 5a9:	63 68 2f             	arpl   WORD PTR [eax+0x2f],bp
 5ac:	78 38                	js     5e6 <MB_FLAGS+0x5e6>
 5ae:	36                   	ss
 5af:	2f                   	das    
 5b0:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 5b3:	6d                   	ins    DWORD PTR es:[edi],dx
 5b4:	6f                   	outs   dx,DWORD PTR ds:[esi]
 5b5:	6e                   	outs   dx,BYTE PTR ds:[esi]
 5b6:	2f                   	das    
 5b7:	73 6f                	jae    628 <MB_FLAGS+0x628>
 5b9:	75 72                	jne    62d <MB_FLAGS+0x62d>
 5bb:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 5be:	2e                   	cs
 5bf:	2e                   	cs
 5c0:	2f                   	das    
 5c1:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 5c8:	2f                   	das    
 5c9:	2e                   	cs
 5ca:	2e                   	cs
 5cb:	2f                   	das    
 5cc:	2e                   	cs
 5cd:	2e                   	cs
 5ce:	2f                   	das    
 5cf:	2e                   	cs
 5d0:	2e                   	cs
 5d1:	2f                   	das    
 5d2:	2e                   	cs
 5d3:	2e                   	cs
 5d4:	2f                   	das    
 5d5:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 5da:	2f                   	das    
 5db:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 5e2:	00 00                	add    BYTE PTR [eax],al
 5e4:	49                   	dec    ecx
 5e5:	6e                   	outs   dx,BYTE PTR ds:[esi]
 5e6:	74 65                	je     64d <MB_FLAGS+0x64d>
 5e8:	72 72                	jb     65c <MB_FLAGS+0x65c>
 5ea:	75 70                	jne    65c <MB_FLAGS+0x65c>
 5ec:	74 44                	je     632 <MB_FLAGS+0x632>
 5ee:	65                   	gs
 5ef:	73 63                	jae    654 <MB_FLAGS+0x654>
 5f1:	72 69                	jb     65c <MB_FLAGS+0x65c>
 5f3:	70 74                	jo     669 <MB_FLAGS+0x669>
 5f5:	6f                   	outs   dx,DWORD PTR ds:[esi]
 5f6:	72 54                	jb     64c <MB_FLAGS+0x64c>
 5f8:	61                   	popa   
 5f9:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 5fd:	63 00                	arpl   WORD PTR [eax],ax
 5ff:	01 00                	add    DWORD PTR [eax],eax
 601:	00 74 79 70          	add    BYTE PTR [ecx+edi*2+0x70],dh
 605:	65                   	gs
 606:	73 2e                	jae    636 <MB_FLAGS+0x636>
 608:	68 00 02 00 00       	push   0x200
 60d:	49                   	dec    ecx
 60e:	6e                   	outs   dx,BYTE PTR ds:[esi]
 60f:	74 65                	je     676 <MB_FLAGS+0x676>
 611:	72 72                	jb     685 <MB_FLAGS+0x685>
 613:	75 70                	jne    685 <MB_FLAGS+0x685>
 615:	74 44                	je     65b <MB_FLAGS+0x65b>
 617:	65                   	gs
 618:	73 63                	jae    67d <MB_FLAGS+0x67d>
 61a:	72 69                	jb     685 <MB_FLAGS+0x685>
 61c:	70 74                	jo     692 <MB_FLAGS+0x692>
 61e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 61f:	72 54                	jb     675 <MB_FLAGS+0x675>
 621:	61                   	popa   
 622:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 626:	68 00 03 00 00       	push   0x300
 62b:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 630:	2e                   	cs
 631:	68 00 04 00 00       	push   0x400
 636:	00 00                	add    BYTE PTR [eax],al
 638:	05 02 20 0a 10       	add    eax,0x100a2002
 63d:	00 03                	add    BYTE PTR [ebx],al
 63f:	09 01                	or     DWORD PTR [ecx],eax
 641:	67 59                	addr16 pop ecx
 643:	34 08                	xor    al,0x8
 645:	91                   	xchg   ecx,eax
 646:	e6 f4                	out    0xf4,al
 648:	bc e6 08 21 34       	mov    esp,0x342108e6
 64d:	67 bc 91 a4 c9 02    	addr16 mov esp,0x2c9a491
 653:	02 00                	add    al,BYTE PTR [eax]
 655:	01 01                	add    DWORD PTR [ecx],eax
 657:	f0 01 00             	lock add DWORD PTR [eax],eax
 65a:	00 02                	add    BYTE PTR [edx],al
 65c:	00 d2                	add    dl,dl
 65e:	01 00                	add    DWORD PTR [eax],eax
 660:	00 01                	add    BYTE PTR [ecx],al
 662:	01 fb                	add    ebx,edi
 664:	0e                   	push   cs
 665:	0d 00 01 01 01       	or     eax,0x1010100
 66a:	01 00                	add    DWORD PTR [eax],eax
 66c:	00 00                	add    BYTE PTR [eax],al
 66e:	01 00                	add    DWORD PTR [eax],eax
 670:	00 01                	add    BYTE PTR [ecx],al
 672:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 675:	6d                   	ins    DWORD PTR es:[edi],dx
 676:	6f                   	outs   dx,DWORD PTR ds:[esi]
 677:	6e                   	outs   dx,BYTE PTR ds:[esi]
 678:	2f                   	das    
 679:	73 6f                	jae    6ea <MB_FLAGS+0x6ea>
 67b:	75 72                	jne    6ef <MB_FLAGS+0x6ef>
 67d:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 680:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
 684:	65                   	gs
 685:	6c                   	ins    BYTE PTR es:[edi],dx
 686:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 689:	6d                   	ins    DWORD PTR es:[edi],dx
 68a:	6d                   	ins    DWORD PTR es:[edi],dx
 68b:	6f                   	outs   dx,DWORD PTR ds:[esi]
 68c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 68d:	2f                   	das    
 68e:	73 6f                	jae    6ff <MB_FLAGS+0x6ff>
 690:	75 72                	jne    704 <MB_FLAGS+0x704>
 692:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 695:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
 699:	65                   	gs
 69a:	6c                   	ins    BYTE PTR es:[edi],dx
 69b:	2f                   	das    
 69c:	2e                   	cs
 69d:	2e                   	cs
 69e:	2f                   	das    
 69f:	2e                   	cs
 6a0:	2e                   	cs
 6a1:	2f                   	das    
 6a2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 6a9:	2f                   	das    
 6aa:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 6ad:	73 6f                	jae    71e <MB_FLAGS+0x71e>
 6af:	6c                   	ins    BYTE PTR es:[edi],dx
 6b0:	65                   	gs
 6b1:	2f                   	das    
 6b2:	2e                   	cs
 6b3:	2e                   	cs
 6b4:	2f                   	das    
 6b5:	2e                   	cs
 6b6:	2e                   	cs
 6b7:	2f                   	das    
 6b8:	2e                   	cs
 6b9:	2e                   	cs
 6ba:	2f                   	das    
 6bb:	61                   	popa   
 6bc:	72 63                	jb     721 <MB_FLAGS+0x721>
 6be:	68 2f 78 38 36       	push   0x3638782f
 6c3:	2f                   	das    
 6c4:	70 6f                	jo     735 <MB_FLAGS+0x735>
 6c6:	72 74                	jb     73c <MB_FLAGS+0x73c>
 6c8:	73 2f                	jae    6f9 <MB_FLAGS+0x6f9>
 6ca:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 6d1:	2f                   	das    
 6d2:	2e                   	cs
 6d3:	2e                   	cs
 6d4:	2f                   	das    
 6d5:	2e                   	cs
 6d6:	2e                   	cs
 6d7:	2f                   	das    
 6d8:	2e                   	cs
 6d9:	2e                   	cs
 6da:	2f                   	das    
 6db:	2e                   	cs
 6dc:	2e                   	cs
 6dd:	2f                   	das    
 6de:	6c                   	ins    BYTE PTR es:[edi],dx
 6df:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 6e6:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 6ed:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 6f0:	6d                   	ins    DWORD PTR es:[edi],dx
 6f1:	6d                   	ins    DWORD PTR es:[edi],dx
 6f2:	6f                   	outs   dx,DWORD PTR ds:[esi]
 6f3:	6e                   	outs   dx,BYTE PTR ds:[esi]
 6f4:	2f                   	das    
 6f5:	73 6f                	jae    766 <MB_FLAGS+0x766>
 6f7:	75 72                	jne    76b <MB_FLAGS+0x76b>
 6f9:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 6fc:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
 700:	65                   	gs
 701:	6c                   	ins    BYTE PTR es:[edi],dx
 702:	2f                   	das    
 703:	2e                   	cs
 704:	2e                   	cs
 705:	2f                   	das    
 706:	2e                   	cs
 707:	2e                   	cs
 708:	2f                   	das    
 709:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 710:	2f                   	das    
 711:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 714:	73 6f                	jae    785 <MB_FLAGS+0x785>
 716:	6c                   	ins    BYTE PTR es:[edi],dx
 717:	65 00 63 6f          	add    BYTE PTR gs:[ebx+0x6f],ah
 71b:	6d                   	ins    DWORD PTR es:[edi],dx
 71c:	6d                   	ins    DWORD PTR es:[edi],dx
 71d:	6f                   	outs   dx,DWORD PTR ds:[esi]
 71e:	6e                   	outs   dx,BYTE PTR ds:[esi]
 71f:	2f                   	das    
 720:	73 6f                	jae    791 <MB_FLAGS+0x791>
 722:	75 72                	jne    796 <MB_FLAGS+0x796>
 724:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 727:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
 72b:	65                   	gs
 72c:	6c                   	ins    BYTE PTR es:[edi],dx
 72d:	2f                   	das    
 72e:	2e                   	cs
 72f:	2e                   	cs
 730:	2f                   	das    
 731:	2e                   	cs
 732:	2e                   	cs
 733:	2f                   	das    
 734:	2e                   	cs
 735:	2e                   	cs
 736:	2f                   	das    
 737:	61                   	popa   
 738:	72 63                	jb     79d <MB_FLAGS+0x79d>
 73a:	68 2f 78 38 36       	push   0x3638782f
 73f:	2f                   	das    
 740:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 743:	6d                   	ins    DWORD PTR es:[edi],dx
 744:	6f                   	outs   dx,DWORD PTR ds:[esi]
 745:	6e                   	outs   dx,BYTE PTR ds:[esi]
 746:	2f                   	das    
 747:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 74e:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 751:	6d                   	ins    DWORD PTR es:[edi],dx
 752:	6d                   	ins    DWORD PTR es:[edi],dx
 753:	6f                   	outs   dx,DWORD PTR ds:[esi]
 754:	6e                   	outs   dx,BYTE PTR ds:[esi]
 755:	2f                   	das    
 756:	73 6f                	jae    7c7 <MB_FLAGS+0x7c7>
 758:	75 72                	jne    7cc <MB_FLAGS+0x7cc>
 75a:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 75d:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
 761:	65                   	gs
 762:	6c                   	ins    BYTE PTR es:[edi],dx
 763:	2f                   	das    
 764:	2e                   	cs
 765:	2e                   	cs
 766:	2f                   	das    
 767:	2e                   	cs
 768:	2e                   	cs
 769:	2f                   	das    
 76a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 771:	2f                   	das    
 772:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 775:	73 6f                	jae    7e6 <MB_FLAGS+0x7e6>
 777:	6c                   	ins    BYTE PTR es:[edi],dx
 778:	65                   	gs
 779:	2f                   	das    
 77a:	2e                   	cs
 77b:	2e                   	cs
 77c:	2f                   	das    
 77d:	2e                   	cs
 77e:	2e                   	cs
 77f:	2f                   	das    
 780:	2e                   	cs
 781:	2e                   	cs
 782:	2f                   	das    
 783:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 788:	2f                   	das    
 789:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 790:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 793:	6d                   	ins    DWORD PTR es:[edi],dx
 794:	6d                   	ins    DWORD PTR es:[edi],dx
 795:	6f                   	outs   dx,DWORD PTR ds:[esi]
 796:	6e                   	outs   dx,BYTE PTR ds:[esi]
 797:	2f                   	das    
 798:	73 6f                	jae    809 <MB_FLAGS+0x809>
 79a:	75 72                	jne    80e <MB_FLAGS+0x80e>
 79c:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 79f:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
 7a3:	65                   	gs
 7a4:	6c                   	ins    BYTE PTR es:[edi],dx
 7a5:	2f                   	das    
 7a6:	2e                   	cs
 7a7:	2e                   	cs
 7a8:	2f                   	das    
 7a9:	2e                   	cs
 7aa:	2e                   	cs
 7ab:	2f                   	das    
 7ac:	2e                   	cs
 7ad:	2e                   	cs
 7ae:	2f                   	das    
 7af:	6c                   	ins    BYTE PTR es:[edi],dx
 7b0:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 7b7:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 7be:	00 00                	add    BYTE PTR [eax],al
 7c0:	6d                   	ins    DWORD PTR es:[edi],dx
 7c1:	61                   	popa   
 7c2:	69 6e 2e 63 00 01 00 	imul   ebp,DWORD PTR [esi+0x2e],0x10063
 7c9:	00 74 79 70          	add    BYTE PTR [ecx+edi*2+0x70],dh
 7cd:	65                   	gs
 7ce:	73 2e                	jae    7fe <MB_FLAGS+0x7fe>
 7d0:	68 00 02 00 00       	push   0x200
 7d5:	54                   	push   esp
 7d6:	65                   	gs
 7d7:	72 6d                	jb     846 <MB_FLAGS+0x846>
 7d9:	69 6e 61 6c 2e 68 00 	imul   ebp,DWORD PTR [esi+0x61],0x682e6c
 7e0:	03 00                	add    eax,DWORD PTR [eax]
 7e2:	00 47 6c             	add    BYTE PTR [edi+0x6c],al
 7e5:	6f                   	outs   dx,DWORD PTR ds:[esi]
 7e6:	62 61 6c             	bound  esp,QWORD PTR [ecx+0x6c]
 7e9:	44                   	inc    esp
 7ea:	65                   	gs
 7eb:	73 63                	jae    850 <MB_FLAGS+0x850>
 7ed:	72 69                	jb     858 <MB_FLAGS+0x858>
 7ef:	70 74                	jo     865 <MB_FLAGS+0x865>
 7f1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 7f2:	72 54                	jb     848 <MB_FLAGS+0x848>
 7f4:	61                   	popa   
 7f5:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 7f9:	68 00 04 00 00       	push   0x400
 7fe:	49                   	dec    ecx
 7ff:	6e                   	outs   dx,BYTE PTR ds:[esi]
 800:	74 65                	je     867 <MB_FLAGS+0x867>
 802:	72 72                	jb     876 <MB_FLAGS+0x876>
 804:	75 70                	jne    876 <MB_FLAGS+0x876>
 806:	74 44                	je     84c <MB_FLAGS+0x84c>
 808:	65                   	gs
 809:	73 63                	jae    86e <MB_FLAGS+0x86e>
 80b:	72 69                	jb     876 <MB_FLAGS+0x876>
 80d:	70 74                	jo     883 <MB_FLAGS+0x883>
 80f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 810:	72 54                	jb     866 <MB_FLAGS+0x866>
 812:	61                   	popa   
 813:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 817:	68 00 04 00 00       	push   0x400
 81c:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 821:	2e                   	cs
 822:	68 00 05 00 00       	push   0x500
 827:	73 74                	jae    89d <MB_FLAGS+0x89d>
 829:	64 69 6f 2e 68 00 06 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x60068
 830:	00 
 831:	00 00                	add    BYTE PTR [eax],al
 833:	00 05 02 cc 0a 10    	add    BYTE PTR ds:0x100acc02,al
 839:	00 03                	add    BYTE PTR [ebx],al
 83b:	0f 01                	(bad)  
 83d:	68 bb bd 08 a0       	push   0xa008bdbb
 842:	59                   	pop    ecx
 843:	5a                   	pop    edx
 844:	bb bc 02 02 00       	mov    ebx,0x202bc
 849:	01 01                	add    DWORD PTR [ecx],eax
 84b:	da 00                	fiadd  DWORD PTR [eax]
 84d:	00 00                	add    BYTE PTR [eax],al
 84f:	02 00                	add    al,BYTE PTR [eax]
 851:	d4 00                	aam    0x0
 853:	00 00                	add    BYTE PTR [eax],al
 855:	01 01                	add    DWORD PTR [ecx],eax
 857:	fb                   	sti    
 858:	0e                   	push   cs
 859:	0d 00 01 01 01       	or     eax,0x1010100
 85e:	01 00                	add    DWORD PTR [eax],eax
 860:	00 00                	add    BYTE PTR [eax],al
 862:	01 00                	add    DWORD PTR [eax],eax
 864:	00 01                	add    BYTE PTR [ecx],al
 866:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 869:	6d                   	ins    DWORD PTR es:[edi],dx
 86a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 86b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 86c:	2f                   	das    
 86d:	73 6f                	jae    8de <MB_FLAGS+0x8de>
 86f:	75 72                	jne    8e3 <MB_FLAGS+0x8e3>
 871:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 874:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 877:	73 6f                	jae    8e8 <MB_FLAGS+0x8e8>
 879:	6c                   	ins    BYTE PTR es:[edi],dx
 87a:	65                   	gs
 87b:	2f                   	das    
 87c:	2e                   	cs
 87d:	2e                   	cs
 87e:	2f                   	das    
 87f:	2e                   	cs
 880:	2e                   	cs
 881:	2f                   	das    
 882:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 889:	2f                   	das    
 88a:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 88d:	73 6f                	jae    8fe <MB_FLAGS+0x8fe>
 88f:	6c                   	ins    BYTE PTR es:[edi],dx
 890:	65                   	gs
 891:	2f                   	das    
 892:	2e                   	cs
 893:	2e                   	cs
 894:	2f                   	das    
 895:	2e                   	cs
 896:	2e                   	cs
 897:	2f                   	das    
 898:	2e                   	cs
 899:	2e                   	cs
 89a:	2f                   	das    
 89b:	61                   	popa   
 89c:	72 63                	jb     901 <MB_FLAGS+0x901>
 89e:	68 2f 78 38 36       	push   0x3638782f
 8a3:	2f                   	das    
 8a4:	70 6f                	jo     915 <MB_FLAGS+0x915>
 8a6:	72 74                	jb     91c <MB_FLAGS+0x91c>
 8a8:	73 2f                	jae    8d9 <MB_FLAGS+0x8d9>
 8aa:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 8b1:	2f                   	das    
 8b2:	2e                   	cs
 8b3:	2e                   	cs
 8b4:	2f                   	das    
 8b5:	2e                   	cs
 8b6:	2e                   	cs
 8b7:	2f                   	das    
 8b8:	2e                   	cs
 8b9:	2e                   	cs
 8ba:	2f                   	das    
 8bb:	2e                   	cs
 8bc:	2e                   	cs
 8bd:	2f                   	das    
 8be:	6c                   	ins    BYTE PTR es:[edi],dx
 8bf:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 8c6:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 8cd:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 8d0:	6d                   	ins    DWORD PTR es:[edi],dx
 8d1:	6d                   	ins    DWORD PTR es:[edi],dx
 8d2:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8d3:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8d4:	2f                   	das    
 8d5:	73 6f                	jae    946 <MB_FLAGS+0x946>
 8d7:	75 72                	jne    94b <MB_FLAGS+0x94b>
 8d9:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 8dc:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 8df:	73 6f                	jae    950 <MB_FLAGS+0x950>
 8e1:	6c                   	ins    BYTE PTR es:[edi],dx
 8e2:	65                   	gs
 8e3:	2f                   	das    
 8e4:	2e                   	cs
 8e5:	2e                   	cs
 8e6:	2f                   	das    
 8e7:	2e                   	cs
 8e8:	2e                   	cs
 8e9:	2f                   	das    
 8ea:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 8f1:	2f                   	das    
 8f2:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 8f5:	73 6f                	jae    966 <MB_FLAGS+0x966>
 8f7:	6c                   	ins    BYTE PTR es:[edi],dx
 8f8:	65                   	gs
 8f9:	2f                   	das    
 8fa:	2e                   	cs
 8fb:	2e                   	cs
 8fc:	2f                   	das    
 8fd:	2e                   	cs
 8fe:	2e                   	cs
 8ff:	2f                   	das    
 900:	2e                   	cs
 901:	2e                   	cs
 902:	2f                   	das    
 903:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 908:	2f                   	das    
 909:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 910:	00 00                	add    BYTE PTR [eax],al
 912:	74 79                	je     98d <MB_FLAGS+0x98d>
 914:	70 65                	jo     97b <MB_FLAGS+0x97b>
 916:	73 2e                	jae    946 <MB_FLAGS+0x946>
 918:	68 00 01 00 00       	push   0x100
 91d:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 922:	2e                   	cs
 923:	68 00 02 00 00       	push   0x200
 928:	00 df                	add    bh,bl
 92a:	01 00                	add    DWORD PTR [eax],eax
 92c:	00 02                	add    BYTE PTR [edx],al
 92e:	00 89 01 00 00 01    	add    BYTE PTR [ecx+0x1000001],cl
 934:	01 fb                	add    ebx,edi
 936:	0e                   	push   cs
 937:	0d 00 01 01 01       	or     eax,0x1010100
 93c:	01 00                	add    DWORD PTR [eax],eax
 93e:	00 00                	add    BYTE PTR [eax],al
 940:	01 00                	add    DWORD PTR [eax],eax
 942:	00 01                	add    BYTE PTR [ecx],al
 944:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 947:	6d                   	ins    DWORD PTR es:[edi],dx
 948:	6f                   	outs   dx,DWORD PTR ds:[esi]
 949:	6e                   	outs   dx,BYTE PTR ds:[esi]
 94a:	2f                   	das    
 94b:	73 6f                	jae    9bc <MB_FLAGS+0x9bc>
 94d:	75 72                	jne    9c1 <MB_FLAGS+0x9c1>
 94f:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 952:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 955:	73 6f                	jae    9c6 <MB_FLAGS+0x9c6>
 957:	6c                   	ins    BYTE PTR es:[edi],dx
 958:	65                   	gs
 959:	2f                   	das    
 95a:	2e                   	cs
 95b:	2e                   	cs
 95c:	2f                   	das    
 95d:	2e                   	cs
 95e:	2e                   	cs
 95f:	2f                   	das    
 960:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 967:	2f                   	das    
 968:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 96b:	73 6f                	jae    9dc <MB_FLAGS+0x9dc>
 96d:	6c                   	ins    BYTE PTR es:[edi],dx
 96e:	65                   	gs
 96f:	2f                   	das    
 970:	2e                   	cs
 971:	2e                   	cs
 972:	2f                   	das    
 973:	2e                   	cs
 974:	2e                   	cs
 975:	2f                   	das    
 976:	2e                   	cs
 977:	2e                   	cs
 978:	2f                   	das    
 979:	61                   	popa   
 97a:	72 63                	jb     9df <MB_FLAGS+0x9df>
 97c:	68 2f 78 38 36       	push   0x3638782f
 981:	2f                   	das    
 982:	70 6f                	jo     9f3 <MB_FLAGS+0x9f3>
 984:	72 74                	jb     9fa <MB_FLAGS+0x9fa>
 986:	73 2f                	jae    9b7 <MB_FLAGS+0x9b7>
 988:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 98f:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 992:	6d                   	ins    DWORD PTR es:[edi],dx
 993:	6d                   	ins    DWORD PTR es:[edi],dx
 994:	6f                   	outs   dx,DWORD PTR ds:[esi]
 995:	6e                   	outs   dx,BYTE PTR ds:[esi]
 996:	2f                   	das    
 997:	73 6f                	jae    a08 <MB_FLAGS+0xa08>
 999:	75 72                	jne    a0d <MB_FLAGS+0xa0d>
 99b:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 99e:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 9a1:	73 6f                	jae    a12 <MB_FLAGS+0xa12>
 9a3:	6c                   	ins    BYTE PTR es:[edi],dx
 9a4:	65 00 63 6f          	add    BYTE PTR gs:[ebx+0x6f],ah
 9a8:	6d                   	ins    DWORD PTR es:[edi],dx
 9a9:	6d                   	ins    DWORD PTR es:[edi],dx
 9aa:	6f                   	outs   dx,DWORD PTR ds:[esi]
 9ab:	6e                   	outs   dx,BYTE PTR ds:[esi]
 9ac:	2f                   	das    
 9ad:	73 6f                	jae    a1e <MB_FLAGS+0xa1e>
 9af:	75 72                	jne    a23 <MB_FLAGS+0xa23>
 9b1:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 9b4:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 9b7:	73 6f                	jae    a28 <MB_FLAGS+0xa28>
 9b9:	6c                   	ins    BYTE PTR es:[edi],dx
 9ba:	65                   	gs
 9bb:	2f                   	das    
 9bc:	2e                   	cs
 9bd:	2e                   	cs
 9be:	2f                   	das    
 9bf:	2e                   	cs
 9c0:	2e                   	cs
 9c1:	2f                   	das    
 9c2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 9c9:	2f                   	das    
 9ca:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 9cd:	73 6f                	jae    a3e <MB_FLAGS+0xa3e>
 9cf:	6c                   	ins    BYTE PTR es:[edi],dx
 9d0:	65                   	gs
 9d1:	2f                   	das    
 9d2:	2e                   	cs
 9d3:	2e                   	cs
 9d4:	2f                   	das    
 9d5:	2e                   	cs
 9d6:	2e                   	cs
 9d7:	2f                   	das    
 9d8:	2e                   	cs
 9d9:	2e                   	cs
 9da:	2f                   	das    
 9db:	61                   	popa   
 9dc:	72 63                	jb     a41 <MB_FLAGS+0xa41>
 9de:	68 2f 78 38 36       	push   0x3638782f
 9e3:	2f                   	das    
 9e4:	70 6f                	jo     a55 <MB_FLAGS+0xa55>
 9e6:	72 74                	jb     a5c <MB_FLAGS+0xa5c>
 9e8:	73 2f                	jae    a19 <MB_FLAGS+0xa19>
 9ea:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 9f1:	2f                   	das    
 9f2:	2e                   	cs
 9f3:	2e                   	cs
 9f4:	2f                   	das    
 9f5:	2e                   	cs
 9f6:	2e                   	cs
 9f7:	2f                   	das    
 9f8:	2e                   	cs
 9f9:	2e                   	cs
 9fa:	2f                   	das    
 9fb:	2e                   	cs
 9fc:	2e                   	cs
 9fd:	2f                   	das    
 9fe:	6c                   	ins    BYTE PTR es:[edi],dx
 9ff:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
 a06:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 a0d:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 a10:	6d                   	ins    DWORD PTR es:[edi],dx
 a11:	6d                   	ins    DWORD PTR es:[edi],dx
 a12:	6f                   	outs   dx,DWORD PTR ds:[esi]
 a13:	6e                   	outs   dx,BYTE PTR ds:[esi]
 a14:	2f                   	das    
 a15:	73 6f                	jae    a86 <MB_FLAGS+0xa86>
 a17:	75 72                	jne    a8b <MB_FLAGS+0xa8b>
 a19:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 a1c:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 a1f:	73 6f                	jae    a90 <MB_FLAGS+0xa90>
 a21:	6c                   	ins    BYTE PTR es:[edi],dx
 a22:	65                   	gs
 a23:	2f                   	das    
 a24:	2e                   	cs
 a25:	2e                   	cs
 a26:	2f                   	das    
 a27:	2e                   	cs
 a28:	2e                   	cs
 a29:	2f                   	das    
 a2a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 a31:	2f                   	das    
 a32:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 a35:	73 6f                	jae    aa6 <MB_FLAGS+0xaa6>
 a37:	6c                   	ins    BYTE PTR es:[edi],dx
 a38:	65 00 63 6f          	add    BYTE PTR gs:[ebx+0x6f],ah
 a3c:	6d                   	ins    DWORD PTR es:[edi],dx
 a3d:	6d                   	ins    DWORD PTR es:[edi],dx
 a3e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 a3f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 a40:	2f                   	das    
 a41:	73 6f                	jae    ab2 <MB_FLAGS+0xab2>
 a43:	75 72                	jne    ab7 <MB_FLAGS+0xab7>
 a45:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 a48:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 a4b:	73 6f                	jae    abc <MB_FLAGS+0xabc>
 a4d:	6c                   	ins    BYTE PTR es:[edi],dx
 a4e:	65                   	gs
 a4f:	2f                   	das    
 a50:	2e                   	cs
 a51:	2e                   	cs
 a52:	2f                   	das    
 a53:	2e                   	cs
 a54:	2e                   	cs
 a55:	2f                   	das    
 a56:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 a5d:	2f                   	das    
 a5e:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 a61:	73 6f                	jae    ad2 <MB_FLAGS+0xad2>
 a63:	6c                   	ins    BYTE PTR es:[edi],dx
 a64:	65                   	gs
 a65:	2f                   	das    
 a66:	2e                   	cs
 a67:	2e                   	cs
 a68:	2f                   	das    
 a69:	2e                   	cs
 a6a:	2e                   	cs
 a6b:	2f                   	das    
 a6c:	2e                   	cs
 a6d:	2e                   	cs
 a6e:	2f                   	das    
 a6f:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
 a74:	2f                   	das    
 a75:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
 a7c:	00 00                	add    BYTE PTR [eax],al
 a7e:	50                   	push   eax
 a7f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 a80:	72 74                	jb     af6 <MB_FLAGS+0xaf6>
 a82:	73 2e                	jae    ab2 <MB_FLAGS+0xab2>
 a84:	68 00 01 00 00       	push   0x100
 a89:	54                   	push   esp
 a8a:	65                   	gs
 a8b:	72 6d                	jb     afa <MB_FLAGS+0xafa>
 a8d:	69 6e 61 6c 2e 63 00 	imul   ebp,DWORD PTR [esi+0x61],0x632e6c
 a94:	02 00                	add    al,BYTE PTR [eax]
 a96:	00 74 79 70          	add    BYTE PTR [ecx+edi*2+0x70],dh
 a9a:	65                   	gs
 a9b:	73 2e                	jae    acb <MB_FLAGS+0xacb>
 a9d:	68 00 03 00 00       	push   0x300
 aa2:	54                   	push   esp
 aa3:	65                   	gs
 aa4:	72 6d                	jb     b13 <MB_FLAGS+0xb13>
 aa6:	69 6e 61 6c 2e 68 00 	imul   ebp,DWORD PTR [esi+0x61],0x682e6c
 aad:	04 00                	add    al,0x0
 aaf:	00 64 65 62          	add    BYTE PTR [ebp+eiz*2+0x62],ah
 ab3:	75 67                	jne    b1c <MB_FLAGS+0xb1c>
 ab5:	2e                   	cs
 ab6:	68 00 05 00 00       	push   0x500
 abb:	00 00                	add    BYTE PTR [eax],al
 abd:	05 02 2c 0b 10       	add    eax,0x100b2c02
 ac2:	00 03                	add    BYTE PTR [ebx],al
 ac4:	19 01                	sbb    DWORD PTR [ecx],eax
 ac6:	08 2f                	or     BYTE PTR [edi],ch
 ac8:	94                   	xchg   esp,eax
 ac9:	04 02                	add    al,0x2
 acb:	03 69 2e             	add    ebp,DWORD PTR [ecx+0x2e]
 ace:	67 67 75 ad          	addr32 addr16 jne a7f <MB_FLAGS+0xa7f>
 ad2:	ae                   	scas   al,BYTE PTR es:[edi]
 ad3:	ad                   	lods   eax,DWORD PTR ds:[esi]
 ad4:	ad                   	lods   eax,DWORD PTR ds:[esi]
 ad5:	34 6a                	xor    al,0x6a
 ad7:	91                   	xchg   ecx,eax
 ad8:	00 02                	add    BYTE PTR [edx],al
 ada:	04 02                	add    al,0x2
 adc:	91                   	xchg   ecx,eax
 add:	00 02                	add    BYTE PTR [edx],al
 adf:	04 02                	add    al,0x2
 ae1:	02 23                	add    ah,BYTE PTR [ebx]
 ae3:	13 00                	adc    eax,DWORD PTR [eax]
 ae5:	02 04 02             	add    al,BYTE PTR [edx+eax*1]
 ae8:	08 56 00             	or     BYTE PTR [esi+0x0],dl
 aeb:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 aee:	06                   	push   es
 aef:	4a                   	dec    edx
 af0:	06                   	push   es
 af1:	65 00 02             	add    BYTE PTR gs:[edx],al
 af4:	04 01                	add    al,0x1
 af6:	06                   	push   es
 af7:	4a                   	dec    edx
 af8:	06                   	push   es
 af9:	6c                   	ins    BYTE PTR es:[edi],dx
 afa:	34 67                	xor    al,0x67
 afc:	02 26                	add    ah,BYTE PTR [esi]
 afe:	15 08 3d 08 a1       	adc    eax,0xa1083d08
 b03:	08 3d 08 67 02 02    	or     BYTE PTR ds:0x2026708,bh
 b09:	00 01                	add    BYTE PTR [ecx],al
 b0b:	01                   	.byte 0x1

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    BYTE PTR [eax],al
   2:	00 00                	add    BYTE PTR [eax],al
   4:	01 00                	add    DWORD PTR [eax],eax
   6:	00 00                	add    BYTE PTR [eax],al
   8:	02 00                	add    al,BYTE PTR [eax]
   a:	74 04                	je     10 <MB_FLAGS+0x10>
   c:	01 00                	add    DWORD PTR [eax],eax
   e:	00 00                	add    BYTE PTR [eax],al
  10:	03 00                	add    eax,DWORD PTR [eax]
  12:	00 00                	add    BYTE PTR [eax],al
  14:	02 00                	add    al,BYTE PTR [eax]
  16:	74 08                	je     20 <MB_FLAGS+0x20>
  18:	03 00                	add    eax,DWORD PTR [eax]
  1a:	00 00                	add    BYTE PTR [eax],al
  1c:	59                   	pop    ecx
  1d:	01 00                	add    DWORD PTR [eax],eax
  1f:	00 02                	add    BYTE PTR [edx],al
  21:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
  24:	59                   	pop    ecx
  25:	01 00                	add    DWORD PTR [eax],eax
  27:	00 5a 01             	add    BYTE PTR [edx+0x1],bl
  2a:	00 00                	add    BYTE PTR [eax],al
  2c:	02 00                	add    al,BYTE PTR [eax]
  2e:	74 04                	je     34 <MB_FLAGS+0x34>
	...
  38:	5a                   	pop    edx
  39:	01 00                	add    DWORD PTR [eax],eax
  3b:	00 5b 01             	add    BYTE PTR [ebx+0x1],bl
  3e:	00 00                	add    BYTE PTR [eax],al
  40:	02 00                	add    al,BYTE PTR [eax]
  42:	74 04                	je     48 <MB_FLAGS+0x48>
  44:	5b                   	pop    ebx
  45:	01 00                	add    DWORD PTR [eax],eax
  47:	00 5d 01             	add    BYTE PTR [ebp+0x1],bl
  4a:	00 00                	add    BYTE PTR [eax],al
  4c:	02 00                	add    al,BYTE PTR [eax]
  4e:	74 08                	je     58 <MB_FLAGS+0x58>
  50:	5d                   	pop    ebp
  51:	01 00                	add    DWORD PTR [eax],eax
  53:	00 b9 01 00 00 02    	add    BYTE PTR [ecx+0x2000001],bh
  59:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
  5c:	b9 01 00 00 ba       	mov    ecx,0xba000001
  61:	01 00                	add    DWORD PTR [eax],eax
  63:	00 02                	add    BYTE PTR [edx],al
  65:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
  69:	00 00                	add    BYTE PTR [eax],al
  6b:	00 00                	add    BYTE PTR [eax],al
  6d:	00 00                	add    BYTE PTR [eax],al
  6f:	00 ba 01 00 00 bb    	add    BYTE PTR [edx-0x44ffffff],bh
  75:	01 00                	add    DWORD PTR [eax],eax
  77:	00 02                	add    BYTE PTR [edx],al
  79:	00 74 04 bb          	add    BYTE PTR [esp+eax*1-0x45],dh
  7d:	01 00                	add    DWORD PTR [eax],eax
  7f:	00 bd 01 00 00 02    	add    BYTE PTR [ebp+0x2000001],bh
  85:	00 74 08 bd          	add    BYTE PTR [eax+ecx*1-0x43],dh
  89:	01 00                	add    DWORD PTR [eax],eax
  8b:	00 a9 02 00 00 02    	add    BYTE PTR [ecx+0x2000002],ch
  91:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
  94:	a9 02 00 00 aa       	test   eax,0xaa000002
  99:	02 00                	add    al,BYTE PTR [eax]
  9b:	00 02                	add    BYTE PTR [edx],al
  9d:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
	...
  a9:	00 00                	add    BYTE PTR [eax],al
  ab:	00 01                	add    BYTE PTR [ecx],al
  ad:	00 00                	add    BYTE PTR [eax],al
  af:	00 02                	add    BYTE PTR [edx],al
  b1:	00 74 04 01          	add    BYTE PTR [esp+eax*1+0x1],dh
  b5:	00 00                	add    BYTE PTR [eax],al
  b7:	00 03                	add    BYTE PTR [ebx],al
  b9:	00 00                	add    BYTE PTR [eax],al
  bb:	00 02                	add    BYTE PTR [edx],al
  bd:	00 74 08 03          	add    BYTE PTR [eax+ecx*1+0x3],dh
  c1:	00 00                	add    BYTE PTR [eax],al
  c3:	00 1d 00 00 00 02    	add    BYTE PTR ds:0x2000000,bl
  c9:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
  cc:	1d 00 00 00 1e       	sbb    eax,0x1e000000
  d1:	00 00                	add    BYTE PTR [eax],al
  d3:	00 02                	add    BYTE PTR [edx],al
  d5:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
  d9:	00 00                	add    BYTE PTR [eax],al
  db:	00 00                	add    BYTE PTR [eax],al
  dd:	00 00                	add    BYTE PTR [eax],al
  df:	00 1e                	add    BYTE PTR [esi],bl
  e1:	00 00                	add    BYTE PTR [eax],al
  e3:	00 1f                	add    BYTE PTR [edi],bl
  e5:	00 00                	add    BYTE PTR [eax],al
  e7:	00 02                	add    BYTE PTR [edx],al
  e9:	00 74 04 1f          	add    BYTE PTR [esp+eax*1+0x1f],dh
  ed:	00 00                	add    BYTE PTR [eax],al
  ef:	00 21                	add    BYTE PTR [ecx],ah
  f1:	00 00                	add    BYTE PTR [eax],al
  f3:	00 02                	add    BYTE PTR [edx],al
  f5:	00 74 08 21          	add    BYTE PTR [eax+ecx*1+0x21],dh
  f9:	00 00                	add    BYTE PTR [eax],al
  fb:	00 8e 01 00 00 02    	add    BYTE PTR [esi+0x2000001],cl
 101:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 104:	8e 01                	mov    es,WORD PTR [ecx]
 106:	00 00                	add    BYTE PTR [eax],al
 108:	8f 01                	pop    DWORD PTR [ecx]
 10a:	00 00                	add    BYTE PTR [eax],al
 10c:	02 00                	add    al,BYTE PTR [eax]
 10e:	74 04                	je     114 <MB_FLAGS+0x114>
	...
 118:	8f 01                	pop    DWORD PTR [ecx]
 11a:	00 00                	add    BYTE PTR [eax],al
 11c:	90                   	nop
 11d:	01 00                	add    DWORD PTR [eax],eax
 11f:	00 02                	add    BYTE PTR [edx],al
 121:	00 74 04 90          	add    BYTE PTR [esp+eax*1-0x70],dh
 125:	01 00                	add    DWORD PTR [eax],eax
 127:	00 92 01 00 00 02    	add    BYTE PTR [edx+0x2000001],dl
 12d:	00 74 08 92          	add    BYTE PTR [eax+ecx*1-0x6e],dh
 131:	01 00                	add    DWORD PTR [eax],eax
 133:	00 ca                	add    dl,cl
 135:	01 00                	add    DWORD PTR [eax],eax
 137:	00 02                	add    BYTE PTR [edx],al
 139:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 13c:	ca 01 00             	retf   0x1
 13f:	00 cb                	add    bl,cl
 141:	01 00                	add    DWORD PTR [eax],eax
 143:	00 02                	add    BYTE PTR [edx],al
 145:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 149:	00 00                	add    BYTE PTR [eax],al
 14b:	00 00                	add    BYTE PTR [eax],al
 14d:	00 00                	add    BYTE PTR [eax],al
 14f:	00 cb                	add    bl,cl
 151:	01 00                	add    DWORD PTR [eax],eax
 153:	00 cc                	add    ah,cl
 155:	01 00                	add    DWORD PTR [eax],eax
 157:	00 02                	add    BYTE PTR [edx],al
 159:	00 74 04 cc          	add    BYTE PTR [esp+eax*1-0x34],dh
 15d:	01 00                	add    DWORD PTR [eax],eax
 15f:	00 ce                	add    dh,cl
 161:	01 00                	add    DWORD PTR [eax],eax
 163:	00 02                	add    BYTE PTR [edx],al
 165:	00 74 08 ce          	add    BYTE PTR [eax+ecx*1-0x32],dh
 169:	01 00                	add    DWORD PTR [eax],eax
 16b:	00 ad 02 00 00 02    	add    BYTE PTR [ebp+0x2000002],ch
 171:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 174:	ad                   	lods   eax,DWORD PTR ds:[esi]
 175:	02 00                	add    al,BYTE PTR [eax]
 177:	00 ae 02 00 00 02    	add    BYTE PTR [esi+0x2000002],ch
 17d:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
	...
 189:	00 00                	add    BYTE PTR [eax],al
 18b:	00 01                	add    BYTE PTR [ecx],al
 18d:	00 00                	add    BYTE PTR [eax],al
 18f:	00 02                	add    BYTE PTR [edx],al
 191:	00 74 04 01          	add    BYTE PTR [esp+eax*1+0x1],dh
 195:	00 00                	add    BYTE PTR [eax],al
 197:	00 03                	add    BYTE PTR [ebx],al
 199:	00 00                	add    BYTE PTR [eax],al
 19b:	00 02                	add    BYTE PTR [edx],al
 19d:	00 74 08 03          	add    BYTE PTR [eax+ecx*1+0x3],dh
 1a1:	00 00                	add    BYTE PTR [eax],al
 1a3:	00 29                	add    BYTE PTR [ecx],ch
 1a5:	00 00                	add    BYTE PTR [eax],al
 1a7:	00 02                	add    BYTE PTR [edx],al
 1a9:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 1ac:	29 00                	sub    DWORD PTR [eax],eax
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	2a 00                	sub    al,BYTE PTR [eax]
 1b2:	00 00                	add    BYTE PTR [eax],al
 1b4:	02 00                	add    al,BYTE PTR [eax]
 1b6:	74 04                	je     1bc <MB_FLAGS+0x1bc>
	...
 1c0:	2a 00                	sub    al,BYTE PTR [eax]
 1c2:	00 00                	add    BYTE PTR [eax],al
 1c4:	2b 00                	sub    eax,DWORD PTR [eax]
 1c6:	00 00                	add    BYTE PTR [eax],al
 1c8:	02 00                	add    al,BYTE PTR [eax]
 1ca:	74 04                	je     1d0 <MB_FLAGS+0x1d0>
 1cc:	2b 00                	sub    eax,DWORD PTR [eax]
 1ce:	00 00                	add    BYTE PTR [eax],al
 1d0:	2d 00 00 00 02       	sub    eax,0x2000000
 1d5:	00 74 08 2d          	add    BYTE PTR [eax+ecx*1+0x2d],dh
 1d9:	00 00                	add    BYTE PTR [eax],al
 1db:	00 47 00             	add    BYTE PTR [edi+0x0],al
 1de:	00 00                	add    BYTE PTR [eax],al
 1e0:	02 00                	add    al,BYTE PTR [eax]
 1e2:	75 08                	jne    1ec <MB_FLAGS+0x1ec>
 1e4:	47                   	inc    edi
 1e5:	00 00                	add    BYTE PTR [eax],al
 1e7:	00 48 00             	add    BYTE PTR [eax+0x0],cl
 1ea:	00 00                	add    BYTE PTR [eax],al
 1ec:	02 00                	add    al,BYTE PTR [eax]
 1ee:	74 04                	je     1f4 <MB_FLAGS+0x1f4>
	...
 1f8:	48                   	dec    eax
 1f9:	00 00                	add    BYTE PTR [eax],al
 1fb:	00 49 00             	add    BYTE PTR [ecx+0x0],cl
 1fe:	00 00                	add    BYTE PTR [eax],al
 200:	02 00                	add    al,BYTE PTR [eax]
 202:	74 04                	je     208 <MB_FLAGS+0x208>
 204:	49                   	dec    ecx
 205:	00 00                	add    BYTE PTR [eax],al
 207:	00 4b 00             	add    BYTE PTR [ebx+0x0],cl
 20a:	00 00                	add    BYTE PTR [eax],al
 20c:	02 00                	add    al,BYTE PTR [eax]
 20e:	74 08                	je     218 <MB_FLAGS+0x218>
 210:	4b                   	dec    ebx
 211:	00 00                	add    BYTE PTR [eax],al
 213:	00 6c 01 00          	add    BYTE PTR [ecx+eax*1+0x0],ch
 217:	00 02                	add    BYTE PTR [edx],al
 219:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 21c:	6c                   	ins    BYTE PTR es:[edi],dx
 21d:	01 00                	add    DWORD PTR [eax],eax
 21f:	00 6d 01             	add    BYTE PTR [ebp+0x1],ch
 222:	00 00                	add    BYTE PTR [eax],al
 224:	02 00                	add    al,BYTE PTR [eax]
 226:	74 04                	je     22c <MB_FLAGS+0x22c>
	...
 230:	6d                   	ins    DWORD PTR es:[edi],dx
 231:	01 00                	add    DWORD PTR [eax],eax
 233:	00 6e 01             	add    BYTE PTR [esi+0x1],ch
 236:	00 00                	add    BYTE PTR [eax],al
 238:	02 00                	add    al,BYTE PTR [eax]
 23a:	74 04                	je     240 <MB_FLAGS+0x240>
 23c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 23d:	01 00                	add    DWORD PTR [eax],eax
 23f:	00 70 01             	add    BYTE PTR [eax+0x1],dh
 242:	00 00                	add    BYTE PTR [eax],al
 244:	02 00                	add    al,BYTE PTR [eax]
 246:	74 08                	je     250 <MB_FLAGS+0x250>
 248:	70 01                	jo     24b <MB_FLAGS+0x24b>
 24a:	00 00                	add    BYTE PTR [eax],al
 24c:	95                   	xchg   ebp,eax
 24d:	01 00                	add    DWORD PTR [eax],eax
 24f:	00 02                	add    BYTE PTR [edx],al
 251:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 254:	95                   	xchg   ebp,eax
 255:	01 00                	add    DWORD PTR [eax],eax
 257:	00 96 01 00 00 02    	add    BYTE PTR [esi+0x2000001],dl
 25d:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 261:	00 00                	add    BYTE PTR [eax],al
 263:	00 00                	add    BYTE PTR [eax],al
 265:	00 00                	add    BYTE PTR [eax],al
 267:	00 96 01 00 00 97    	add    BYTE PTR [esi-0x68ffffff],dl
 26d:	01 00                	add    DWORD PTR [eax],eax
 26f:	00 02                	add    BYTE PTR [edx],al
 271:	00 74 04 97          	add    BYTE PTR [esp+eax*1-0x69],dh
 275:	01 00                	add    DWORD PTR [eax],eax
 277:	00 99 01 00 00 02    	add    BYTE PTR [ecx+0x2000001],bl
 27d:	00 74 08 99          	add    BYTE PTR [eax+ecx*1-0x67],dh
 281:	01 00                	add    DWORD PTR [eax],eax
 283:	00 cc                	add    ah,cl
 285:	01 00                	add    DWORD PTR [eax],eax
 287:	00 02                	add    BYTE PTR [edx],al
 289:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 28c:	cc                   	int3   
 28d:	01 00                	add    DWORD PTR [eax],eax
 28f:	00 cd                	add    ch,cl
 291:	01 00                	add    DWORD PTR [eax],eax
 293:	00 02                	add    BYTE PTR [edx],al
 295:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 299:	00 00                	add    BYTE PTR [eax],al
 29b:	00 00                	add    BYTE PTR [eax],al
 29d:	00 00                	add    BYTE PTR [eax],al
 29f:	00 cd                	add    ch,cl
 2a1:	01 00                	add    DWORD PTR [eax],eax
 2a3:	00 ce                	add    dh,cl
 2a5:	01 00                	add    DWORD PTR [eax],eax
 2a7:	00 02                	add    BYTE PTR [edx],al
 2a9:	00 74 04 ce          	add    BYTE PTR [esp+eax*1-0x32],dh
 2ad:	01 00                	add    DWORD PTR [eax],eax
 2af:	00 d0                	add    al,dl
 2b1:	01 00                	add    DWORD PTR [eax],eax
 2b3:	00 02                	add    BYTE PTR [edx],al
 2b5:	00 74 08 d0          	add    BYTE PTR [eax+ecx*1-0x30],dh
 2b9:	01 00                	add    DWORD PTR [eax],eax
 2bb:	00 eb                	add    bl,ch
 2bd:	01 00                	add    DWORD PTR [eax],eax
 2bf:	00 02                	add    BYTE PTR [edx],al
 2c1:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 2c4:	eb 01                	jmp    2c7 <MB_FLAGS+0x2c7>
 2c6:	00 00                	add    BYTE PTR [eax],al
 2c8:	ec                   	in     al,dx
 2c9:	01 00                	add    DWORD PTR [eax],eax
 2cb:	00 02                	add    BYTE PTR [edx],al
 2cd:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 2d1:	00 00                	add    BYTE PTR [eax],al
 2d3:	00 00                	add    BYTE PTR [eax],al
 2d5:	00 00                	add    BYTE PTR [eax],al
 2d7:	00 ec                	add    ah,ch
 2d9:	01 00                	add    DWORD PTR [eax],eax
 2db:	00 ed                	add    ch,ch
 2dd:	01 00                	add    DWORD PTR [eax],eax
 2df:	00 02                	add    BYTE PTR [edx],al
 2e1:	00 74 04 ed          	add    BYTE PTR [esp+eax*1-0x13],dh
 2e5:	01 00                	add    DWORD PTR [eax],eax
 2e7:	00 ef                	add    bh,ch
 2e9:	01 00                	add    DWORD PTR [eax],eax
 2eb:	00 02                	add    BYTE PTR [edx],al
 2ed:	00 74 08 ef          	add    BYTE PTR [eax+ecx*1-0x11],dh
 2f1:	01 00                	add    DWORD PTR [eax],eax
 2f3:	00 0a                	add    BYTE PTR [edx],cl
 2f5:	02 00                	add    al,BYTE PTR [eax]
 2f7:	00 02                	add    BYTE PTR [edx],al
 2f9:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 2fc:	0a 02                	or     al,BYTE PTR [edx]
 2fe:	00 00                	add    BYTE PTR [eax],al
 300:	0b 02                	or     eax,DWORD PTR [edx]
 302:	00 00                	add    BYTE PTR [eax],al
 304:	02 00                	add    al,BYTE PTR [eax]
 306:	74 04                	je     30c <MB_FLAGS+0x30c>
	...
 314:	01 00                	add    DWORD PTR [eax],eax
 316:	00 00                	add    BYTE PTR [eax],al
 318:	02 00                	add    al,BYTE PTR [eax]
 31a:	74 04                	je     320 <MB_FLAGS+0x320>
 31c:	01 00                	add    DWORD PTR [eax],eax
 31e:	00 00                	add    BYTE PTR [eax],al
 320:	03 00                	add    eax,DWORD PTR [eax]
 322:	00 00                	add    BYTE PTR [eax],al
 324:	02 00                	add    al,BYTE PTR [eax]
 326:	74 08                	je     330 <MB_FLAGS+0x330>
 328:	03 00                	add    eax,DWORD PTR [eax]
 32a:	00 00                	add    BYTE PTR [eax],al
 32c:	0c 00                	or     al,0x0
 32e:	00 00                	add    BYTE PTR [eax],al
 330:	02 00                	add    al,BYTE PTR [eax]
 332:	75 08                	jne    33c <MB_FLAGS+0x33c>
 334:	0c 00                	or     al,0x0
 336:	00 00                	add    BYTE PTR [eax],al
 338:	0d 00 00 00 02       	or     eax,0x2000000
 33d:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 341:	00 00                	add    BYTE PTR [eax],al
 343:	00 00                	add    BYTE PTR [eax],al
 345:	00 00                	add    BYTE PTR [eax],al
 347:	00 0d 00 00 00 0e    	add    BYTE PTR ds:0xe000000,cl
 34d:	00 00                	add    BYTE PTR [eax],al
 34f:	00 02                	add    BYTE PTR [edx],al
 351:	00 74 04 0e          	add    BYTE PTR [esp+eax*1+0xe],dh
 355:	00 00                	add    BYTE PTR [eax],al
 357:	00 10                	add    BYTE PTR [eax],dl
 359:	00 00                	add    BYTE PTR [eax],al
 35b:	00 02                	add    BYTE PTR [edx],al
 35d:	00 74 08 10          	add    BYTE PTR [eax+ecx*1+0x10],dh
 361:	00 00                	add    BYTE PTR [eax],al
 363:	00 90 00 00 00 02    	add    BYTE PTR [eax+0x2000000],dl
 369:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 36c:	90                   	nop
 36d:	00 00                	add    BYTE PTR [eax],al
 36f:	00 91 00 00 00 02    	add    BYTE PTR [ecx+0x2000000],dl
 375:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 379:	00 00                	add    BYTE PTR [eax],al
 37b:	00 00                	add    BYTE PTR [eax],al
 37d:	00 00                	add    BYTE PTR [eax],al
 37f:	00 91 00 00 00 92    	add    BYTE PTR [ecx-0x6e000000],dl
 385:	00 00                	add    BYTE PTR [eax],al
 387:	00 02                	add    BYTE PTR [edx],al
 389:	00 74 04 92          	add    BYTE PTR [esp+eax*1-0x6e],dh
 38d:	00 00                	add    BYTE PTR [eax],al
 38f:	00 94 00 00 00 02 00 	add    BYTE PTR [eax+eax*1+0x20000],dl
 396:	74 08                	je     3a0 <MB_FLAGS+0x3a0>
 398:	94                   	xchg   esp,eax
 399:	00 00                	add    BYTE PTR [eax],al
 39b:	00 64 02 00          	add    BYTE PTR [edx+eax*1+0x0],ah
 39f:	00 02                	add    BYTE PTR [edx],al
 3a1:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 3a4:	64 02 00             	add    al,BYTE PTR fs:[eax]
 3a7:	00 65 02             	add    BYTE PTR [ebp+0x2],ah
 3aa:	00 00                	add    BYTE PTR [eax],al
 3ac:	02 00                	add    al,BYTE PTR [eax]
 3ae:	74 04                	je     3b4 <MB_FLAGS+0x3b4>
	...
 3bc:	01 00                	add    DWORD PTR [eax],eax
 3be:	00 00                	add    BYTE PTR [eax],al
 3c0:	02 00                	add    al,BYTE PTR [eax]
 3c2:	74 04                	je     3c8 <MB_FLAGS+0x3c8>
 3c4:	01 00                	add    DWORD PTR [eax],eax
 3c6:	00 00                	add    BYTE PTR [eax],al
 3c8:	03 00                	add    eax,DWORD PTR [eax]
 3ca:	00 00                	add    BYTE PTR [eax],al
 3cc:	02 00                	add    al,BYTE PTR [eax]
 3ce:	74 08                	je     3d8 <MB_FLAGS+0x3d8>
 3d0:	03 00                	add    eax,DWORD PTR [eax]
 3d2:	00 00                	add    BYTE PTR [eax],al
 3d4:	0c 00                	or     al,0x0
 3d6:	00 00                	add    BYTE PTR [eax],al
 3d8:	02 00                	add    al,BYTE PTR [eax]
 3da:	75 08                	jne    3e4 <MB_FLAGS+0x3e4>
 3dc:	0c 00                	or     al,0x0
 3de:	00 00                	add    BYTE PTR [eax],al
 3e0:	0d 00 00 00 02       	or     eax,0x2000000
 3e5:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 3e9:	00 00                	add    BYTE PTR [eax],al
 3eb:	00 00                	add    BYTE PTR [eax],al
 3ed:	00 00                	add    BYTE PTR [eax],al
 3ef:	00 0d 00 00 00 0e    	add    BYTE PTR ds:0xe000000,cl
 3f5:	00 00                	add    BYTE PTR [eax],al
 3f7:	00 02                	add    BYTE PTR [edx],al
 3f9:	00 74 04 0e          	add    BYTE PTR [esp+eax*1+0xe],dh
 3fd:	00 00                	add    BYTE PTR [eax],al
 3ff:	00 10                	add    BYTE PTR [eax],dl
 401:	00 00                	add    BYTE PTR [eax],al
 403:	00 02                	add    BYTE PTR [edx],al
 405:	00 74 08 10          	add    BYTE PTR [eax+ecx*1+0x10],dh
 409:	00 00                	add    BYTE PTR [eax],al
 40b:	00 74 00 00          	add    BYTE PTR [eax+eax*1+0x0],dh
 40f:	00 02                	add    BYTE PTR [edx],al
 411:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 414:	74 00                	je     416 <MB_FLAGS+0x416>
 416:	00 00                	add    BYTE PTR [eax],al
 418:	75 00                	jne    41a <MB_FLAGS+0x41a>
 41a:	00 00                	add    BYTE PTR [eax],al
 41c:	02 00                	add    al,BYTE PTR [eax]
 41e:	74 04                	je     424 <MB_FLAGS+0x424>
	...
 428:	75 00                	jne    42a <MB_FLAGS+0x42a>
 42a:	00 00                	add    BYTE PTR [eax],al
 42c:	76 00                	jbe    42e <MB_FLAGS+0x42e>
 42e:	00 00                	add    BYTE PTR [eax],al
 430:	02 00                	add    al,BYTE PTR [eax]
 432:	74 04                	je     438 <MB_FLAGS+0x438>
 434:	76 00                	jbe    436 <MB_FLAGS+0x436>
 436:	00 00                	add    BYTE PTR [eax],al
 438:	78 00                	js     43a <MB_FLAGS+0x43a>
 43a:	00 00                	add    BYTE PTR [eax],al
 43c:	02 00                	add    al,BYTE PTR [eax]
 43e:	74 08                	je     448 <MB_FLAGS+0x448>
 440:	78 00                	js     442 <MB_FLAGS+0x442>
 442:	00 00                	add    BYTE PTR [eax],al
 444:	a8 00                	test   al,0x0
 446:	00 00                	add    BYTE PTR [eax],al
 448:	02 00                	add    al,BYTE PTR [eax]
 44a:	75 08                	jne    454 <MB_FLAGS+0x454>
 44c:	a8 00                	test   al,0x0
 44e:	00 00                	add    BYTE PTR [eax],al
 450:	a9 00 00 00 02       	test   eax,0x2000000
 455:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
	...
 461:	00 00                	add    BYTE PTR [eax],al
 463:	00 01                	add    BYTE PTR [ecx],al
 465:	00 00                	add    BYTE PTR [eax],al
 467:	00 02                	add    BYTE PTR [edx],al
 469:	00 74 04 01          	add    BYTE PTR [esp+eax*1+0x1],dh
 46d:	00 00                	add    BYTE PTR [eax],al
 46f:	00 03                	add    BYTE PTR [ebx],al
 471:	00 00                	add    BYTE PTR [eax],al
 473:	00 02                	add    BYTE PTR [edx],al
 475:	00 74 08 03          	add    BYTE PTR [eax+ecx*1+0x3],dh
 479:	00 00                	add    BYTE PTR [eax],al
 47b:	00 5c 00 00          	add    BYTE PTR [eax+eax*1+0x0],bl
 47f:	00 02                	add    BYTE PTR [edx],al
 481:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 484:	5c                   	pop    esp
 485:	00 00                	add    BYTE PTR [eax],al
 487:	00 5d 00             	add    BYTE PTR [ebp+0x0],bl
 48a:	00 00                	add    BYTE PTR [eax],al
 48c:	02 00                	add    al,BYTE PTR [eax]
 48e:	74 04                	je     494 <MB_FLAGS+0x494>
	...
 49c:	01 00                	add    DWORD PTR [eax],eax
 49e:	00 00                	add    BYTE PTR [eax],al
 4a0:	02 00                	add    al,BYTE PTR [eax]
 4a2:	74 04                	je     4a8 <MB_FLAGS+0x4a8>
 4a4:	01 00                	add    DWORD PTR [eax],eax
 4a6:	00 00                	add    BYTE PTR [eax],al
 4a8:	03 00                	add    eax,DWORD PTR [eax]
 4aa:	00 00                	add    BYTE PTR [eax],al
 4ac:	02 00                	add    al,BYTE PTR [eax]
 4ae:	74 08                	je     4b8 <MB_FLAGS+0x4b8>
 4b0:	03 00                	add    eax,DWORD PTR [eax]
 4b2:	00 00                	add    BYTE PTR [eax],al
 4b4:	1d 00 00 00 02       	sbb    eax,0x2000000
 4b9:	00 75 08             	add    BYTE PTR [ebp+0x8],dh
 4bc:	1d 00 00 00 1e       	sbb    eax,0x1e000000
 4c1:	00 00                	add    BYTE PTR [eax],al
 4c3:	00 02                	add    BYTE PTR [edx],al
 4c5:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 4c9:	00 00                	add    BYTE PTR [eax],al
 4cb:	00 00                	add    BYTE PTR [eax],al
 4cd:	00 00                	add    BYTE PTR [eax],al
 4cf:	00 1e                	add    BYTE PTR [esi],bl
 4d1:	00 00                	add    BYTE PTR [eax],al
 4d3:	00 1f                	add    BYTE PTR [edi],bl
 4d5:	00 00                	add    BYTE PTR [eax],al
 4d7:	00 02                	add    BYTE PTR [edx],al
 4d9:	00 74 04 1f          	add    BYTE PTR [esp+eax*1+0x1f],dh
 4dd:	00 00                	add    BYTE PTR [eax],al
 4df:	00 21                	add    BYTE PTR [ecx],ah
 4e1:	00 00                	add    BYTE PTR [eax],al
 4e3:	00 02                	add    BYTE PTR [edx],al
 4e5:	00 74 08 21          	add    BYTE PTR [eax+ecx*1+0x21],dh
 4e9:	00 00                	add    BYTE PTR [eax],al
 4eb:	00 5e 00             	add    BYTE PTR [esi+0x0],bl
 4ee:	00 00                	add    BYTE PTR [eax],al
 4f0:	02 00                	add    al,BYTE PTR [eax]
 4f2:	75 08                	jne    4fc <MB_FLAGS+0x4fc>
 4f4:	5e                   	pop    esi
 4f5:	00 00                	add    BYTE PTR [eax],al
 4f7:	00 5f 00             	add    BYTE PTR [edi+0x0],bl
 4fa:	00 00                	add    BYTE PTR [eax],al
 4fc:	02 00                	add    al,BYTE PTR [eax]
 4fe:	74 04                	je     504 <MB_FLAGS+0x504>
	...
 508:	5f                   	pop    edi
 509:	00 00                	add    BYTE PTR [eax],al
 50b:	00 60 00             	add    BYTE PTR [eax+0x0],ah
 50e:	00 00                	add    BYTE PTR [eax],al
 510:	02 00                	add    al,BYTE PTR [eax]
 512:	74 04                	je     518 <MB_FLAGS+0x518>
 514:	60                   	pusha  
 515:	00 00                	add    BYTE PTR [eax],al
 517:	00 62 00             	add    BYTE PTR [edx+0x0],ah
 51a:	00 00                	add    BYTE PTR [eax],al
 51c:	02 00                	add    al,BYTE PTR [eax]
 51e:	74 08                	je     528 <MB_FLAGS+0x528>
 520:	62 00                	bound  eax,QWORD PTR [eax]
 522:	00 00                	add    BYTE PTR [eax],al
 524:	c5 00                	lds    eax,FWORD PTR [eax]
 526:	00 00                	add    BYTE PTR [eax],al
 528:	02 00                	add    al,BYTE PTR [eax]
 52a:	75 08                	jne    534 <MB_FLAGS+0x534>
 52c:	c5 00                	lds    eax,FWORD PTR [eax]
 52e:	00 00                	add    BYTE PTR [eax],al
 530:	c6 00 00             	mov    BYTE PTR [eax],0x0
 533:	00 02                	add    BYTE PTR [edx],al
 535:	00 74 04 00          	add    BYTE PTR [esp+eax*1+0x0],dh
 539:	00 00                	add    BYTE PTR [eax],al
 53b:	00 00                	add    BYTE PTR [eax],al
 53d:	00 00                	add    BYTE PTR [eax],al
 53f:	00 c6                	add    dh,al
 541:	00 00                	add    BYTE PTR [eax],al
 543:	00 c7                	add    bh,al
 545:	00 00                	add    BYTE PTR [eax],al
 547:	00 02                	add    BYTE PTR [edx],al
 549:	00 74 04 c7          	add    BYTE PTR [esp+eax*1-0x39],dh
 54d:	00 00                	add    BYTE PTR [eax],al
 54f:	00 c9                	add    cl,cl
 551:	00 00                	add    BYTE PTR [eax],al
 553:	00 02                	add    BYTE PTR [edx],al
 555:	00 74 08 c9          	add    BYTE PTR [eax+ecx*1-0x37],dh
 559:	00 00                	add    BYTE PTR [eax],al
 55b:	00 4d 01             	add    BYTE PTR [ebp+0x1],cl
 55e:	00 00                	add    BYTE PTR [eax],al
 560:	02 00                	add    al,BYTE PTR [eax]
 562:	75 08                	jne    56c <MB_FLAGS+0x56c>
 564:	4d                   	dec    ebp
 565:	01 00                	add    DWORD PTR [eax],eax
 567:	00 4e 01             	add    BYTE PTR [esi+0x1],cl
 56a:	00 00                	add    BYTE PTR [eax],al
 56c:	02 00                	add    al,BYTE PTR [eax]
 56e:	74 04                	je     574 <MB_FLAGS+0x574>
	...

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	33 00                	xor    eax,DWORD PTR [eax]
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	0e                   	push   cs
   b:	02 00                	add    al,BYTE PTR [eax]
   d:	00 73 00             	add    BYTE PTR [ebx+0x0],dh
  10:	00 00                	add    BYTE PTR [eax],al
  12:	70 72                	jo     86 <MB_FLAGS+0x86>
  14:	69 6e 74 00 ce 00 00 	imul   ebp,DWORD PTR [esi+0x74],0xce00
  1b:	00 70 72             	add    BYTE PTR [eax+0x72],dh
  1e:	69 6e 74 63 68 61 72 	imul   ebp,DWORD PTR [esi+0x74],0x72616863
  25:	00 30                	add    BYTE PTR [eax],dh
  27:	01 00                	add    DWORD PTR [eax],eax
  29:	00 70 72             	add    BYTE PTR [eax+0x72],dh
  2c:	69 6e 74 6e 75 6d 00 	imul   ebp,DWORD PTR [esi+0x74],0x6d756e
  33:	00 00                	add    BYTE PTR [eax],al
  35:	00 00                	add    BYTE PTR [eax],al
  37:	36 00 00             	add    BYTE PTR ss:[eax],al
  3a:	00 02                	add    BYTE PTR [edx],al
  3c:	00 0e                	add    BYTE PTR [esi],cl
  3e:	02 00                	add    al,BYTE PTR [eax]
  40:	00 22                	add    BYTE PTR [edx],ah
  42:	02 00                	add    al,BYTE PTR [eax]
  44:	00 b3 00 00 00 64    	add    BYTE PTR [ebx+0x64000000],dh
  4a:	70 72                	jo     be <MB_FLAGS+0xbe>
  4c:	69 6e 74 00 02 01 00 	imul   ebp,DWORD PTR [esi+0x74],0x10200
  53:	00 64 70 72          	add    BYTE PTR [eax+esi*2+0x72],ah
  57:	69 6e 74 63 68 61 72 	imul   ebp,DWORD PTR [esi+0x74],0x72616863
  5e:	00 50 01             	add    BYTE PTR [eax+0x1],dl
  61:	00 00                	add    BYTE PTR [eax],al
  63:	64                   	fs
  64:	70 72                	jo     d8 <MB_FLAGS+0xd8>
  66:	69 6e 74 6e 75 6d 00 	imul   ebp,DWORD PTR [esi+0x74],0x6d756e
  6d:	00 00                	add    BYTE PTR [eax],al
  6f:	00 00                	add    BYTE PTR [eax],al
  71:	86 00                	xchg   BYTE PTR [eax],al
  73:	00 00                	add    BYTE PTR [eax],al
  75:	02 00                	add    al,BYTE PTR [eax]
  77:	30 04 00             	xor    BYTE PTR [eax+eax*1],al
  7a:	00 8e 02 00 00 38    	add    BYTE PTR [esi+0x38000002],cl
  80:	01 00                	add    DWORD PTR [eax],eax
  82:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
  85:	72 69                	jb     f0 <MB_FLAGS+0xf0>
  87:	61                   	popa   
  88:	6c                   	ins    BYTE PTR es:[edi],dx
  89:	50                   	push   eax
  8a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  8b:	72 74                	jb     101 <MB_FLAGS+0x101>
  8d:	5f                   	pop    edi
  8e:	49                   	dec    ecx
  8f:	6e                   	outs   dx,BYTE PTR ds:[esi]
  90:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  97:	65 
  98:	00 d7                	add    bh,dl
  9a:	01 00                	add    DWORD PTR [eax],eax
  9c:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
  9f:	72 69                	jb     10a <MB_FLAGS+0x10a>
  a1:	61                   	popa   
  a2:	6c                   	ins    BYTE PTR es:[edi],dx
  a3:	50                   	push   eax
  a4:	6f                   	outs   dx,DWORD PTR ds:[esi]
  a5:	72 74                	jb     11b <MB_FLAGS+0x11b>
  a7:	5f                   	pop    edi
  a8:	52                   	push   edx
  a9:	65                   	gs
  aa:	61                   	popa   
  ab:	64 00 03             	add    BYTE PTR fs:[ebx],al
  ae:	02 00                	add    al,BYTE PTR [eax]
  b0:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
  b3:	72 69                	jb     11e <MB_FLAGS+0x11e>
  b5:	61                   	popa   
  b6:	6c                   	ins    BYTE PTR es:[edi],dx
  b7:	50                   	push   eax
  b8:	6f                   	outs   dx,DWORD PTR ds:[esi]
  b9:	72 74                	jb     12f <MB_FLAGS+0x12f>
  bb:	5f                   	pop    edi
  bc:	57                   	push   edi
  bd:	72 69                	jb     128 <MB_FLAGS+0x128>
  bf:	74 65                	je     126 <MB_FLAGS+0x126>
  c1:	00 39                	add    BYTE PTR [ecx],bh
  c3:	02 00                	add    al,BYTE PTR [eax]
  c5:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
  c8:	72 69                	jb     133 <MB_FLAGS+0x133>
  ca:	61                   	popa   
  cb:	6c                   	ins    BYTE PTR es:[edi],dx
  cc:	50                   	push   eax
  cd:	6f                   	outs   dx,DWORD PTR ds:[esi]
  ce:	72 74                	jb     144 <MB_FLAGS+0x144>
  d0:	5f                   	pop    edi
  d1:	52                   	push   edx
  d2:	65 63 65 69          	arpl   WORD PTR gs:[ebp+0x69],sp
  d6:	76 65                	jbe    13d <MB_FLAGS+0x13d>
  d8:	64 00 65 02          	add    BYTE PTR fs:[ebp+0x2],ah
  dc:	00 00                	add    BYTE PTR [eax],al
  de:	53                   	push   ebx
  df:	65                   	gs
  e0:	72 69                	jb     14b <MB_FLAGS+0x14b>
  e2:	61                   	popa   
  e3:	6c                   	ins    BYTE PTR es:[edi],dx
  e4:	50                   	push   eax
  e5:	6f                   	outs   dx,DWORD PTR ds:[esi]
  e6:	72 74                	jb     15c <MB_FLAGS+0x15c>
  e8:	5f                   	pop    edi
  e9:	54                   	push   esp
  ea:	72 61                	jb     14d <MB_FLAGS+0x14d>
  ec:	6e                   	outs   dx,BYTE PTR ds:[esi]
  ed:	73 6d                	jae    15c <MB_FLAGS+0x15c>
  ef:	69 74 45 6d 70 74 79 	imul   esi,DWORD PTR [ebp+eax*2+0x6d],0x797470
  f6:	00 
  f7:	00 00                	add    BYTE PTR [eax],al
  f9:	00 00                	add    BYTE PTR [eax],al
  fb:	1b 00                	sbb    eax,DWORD PTR [eax]
  fd:	00 00                	add    BYTE PTR [eax],al
  ff:	02 00                	add    al,BYTE PTR [eax]
 101:	be 06 00 00 1e       	mov    esi,0x1e000006
 106:	02 00                	add    al,BYTE PTR [eax]
 108:	00 5f 01             	add    BYTE PTR [edi+0x1],bl
 10b:	00 00                	add    BYTE PTR [eax],al
 10d:	47                   	inc    edi
 10e:	64                   	fs
 10f:	74 5f                	je     170 <MB_FLAGS+0x170>
 111:	49                   	dec    ecx
 112:	6e                   	outs   dx,BYTE PTR ds:[esi]
 113:	69 74 00 00 00 00 00 	imul   esi,DWORD PTR [eax+eax*1+0x0],0x1b000000
 11a:	1b 
 11b:	00 00                	add    BYTE PTR [eax],al
 11d:	00 02                	add    BYTE PTR [edx],al
 11f:	00 dc                	add    ah,bl
 121:	08 00                	or     BYTE PTR [eax],al
 123:	00 03                	add    BYTE PTR [ebx],al
 125:	02 00                	add    al,BYTE PTR [eax]
 127:	00 52 01             	add    BYTE PTR [edx+0x1],dl
 12a:	00 00                	add    BYTE PTR [eax],al
 12c:	49                   	dec    ecx
 12d:	64                   	fs
 12e:	74 5f                	je     18f <MB_FLAGS+0x18f>
 130:	49                   	dec    ecx
 131:	6e                   	outs   dx,BYTE PTR ds:[esi]
 132:	69 74 00 00 00 00 00 	imul   esi,DWORD PTR [eax+eax*1+0x0],0x1a000000
 139:	1a 
 13a:	00 00                	add    BYTE PTR [eax],al
 13c:	00 02                	add    BYTE PTR [edx],al
 13e:	00 df                	add    bh,bl
 140:	0a 00                	or     al,BYTE PTR [eax]
 142:	00 a2 03 00 00 0f    	add    BYTE PTR [edx+0xf000003],ah
 148:	03 00                	add    eax,DWORD PTR [eax]
 14a:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 14d:	61                   	popa   
 14e:	72 74                	jb     1c4 <MB_FLAGS+0x1c4>
 150:	75 70                	jne    1c2 <MB_FLAGS+0x1c2>
 152:	00 00                	add    BYTE PTR [eax],al
 154:	00 00                	add    BYTE PTR [eax],al
 156:	00 5a 00             	add    BYTE PTR [edx+0x0],bl
 159:	00 00                	add    BYTE PTR [eax],al
 15b:	02 00                	add    al,BYTE PTR [eax]
 15d:	00 0f                	add    BYTE PTR [edi],cl
 15f:	00 00                	add    BYTE PTR [eax],al
 161:	7c 02                	jl     165 <MB_FLAGS+0x165>
 163:	00 00                	add    BYTE PTR [eax],al
 165:	a5                   	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 166:	01 00                	add    DWORD PTR [eax],eax
 168:	00 54 65 72          	add    BYTE PTR [ebp+eiz*2+0x72],dl
 16c:	6d                   	ins    DWORD PTR es:[edi],dx
 16d:	69 6e 61 6c 5f 49 6e 	imul   ebp,DWORD PTR [esi+0x61],0x6e495f6c
 174:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 17b:	65 
 17c:	00 ef                	add    bh,ch
 17e:	01 00                	add    DWORD PTR [eax],eax
 180:	00 54 65 72          	add    BYTE PTR [ebp+eiz*2+0x72],dl
 184:	6d                   	ins    DWORD PTR es:[edi],dx
 185:	69 6e 61 6c 5f 43 6c 	imul   ebp,DWORD PTR [esi+0x61],0x6c435f6c
 18c:	65                   	gs
 18d:	61                   	popa   
 18e:	72 43                	jb     1d3 <MB_FLAGS+0x1d3>
 190:	6f                   	outs   dx,DWORD PTR ds:[esi]
 191:	6e                   	outs   dx,BYTE PTR ds:[esi]
 192:	74 65                	je     1f9 <MB_FLAGS+0x1f9>
 194:	6e                   	outs   dx,BYTE PTR ds:[esi]
 195:	74 00                	je     197 <MB_FLAGS+0x197>
 197:	2f                   	das    
 198:	02 00                	add    al,BYTE PTR [eax]
 19a:	00 54 65 72          	add    BYTE PTR [ebp+eiz*2+0x72],dl
 19e:	6d                   	ins    DWORD PTR es:[edi],dx
 19f:	69 6e 61 6c 5f 55 70 	imul   ebp,DWORD PTR [esi+0x61],0x70555f6c
 1a6:	64                   	fs
 1a7:	61                   	popa   
 1a8:	74 65                	je     20f <MB_FLAGS+0x20f>
 1aa:	43                   	inc    ebx
 1ab:	75 72                	jne    21f <MB_FLAGS+0x21f>
 1ad:	73 6f                	jae    21e <MB_FLAGS+0x21e>
 1af:	72 00                	jb     1b1 <MB_FLAGS+0x1b1>
 1b1:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .debug_pubtypes:

00000000 <.debug_pubtypes>:
   0:	22 00                	and    al,BYTE PTR [eax]
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	0e                   	push   cs
   b:	02 00                	add    al,BYTE PTR [eax]
   d:	00 25 00 00 00 62    	add    BYTE PTR ds:0x62000000,ah
  13:	79 74                	jns    89 <MB_FLAGS+0x89>
  15:	65 00 5a 00          	add    BYTE PTR gs:[edx+0x0],bl
  19:	00 00                	add    BYTE PTR [eax],al
  1b:	75 69                	jne    86 <MB_FLAGS+0x86>
  1d:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1e:	74 31                	je     51 <MB_FLAGS+0x51>
  20:	36 00 00             	add    BYTE PTR ss:[eax],al
  23:	00 00                	add    BYTE PTR [eax],al
  25:	00 2c 00             	add    BYTE PTR [eax+eax*1],ch
  28:	00 00                	add    BYTE PTR [eax],al
  2a:	02 00                	add    al,BYTE PTR [eax]
  2c:	0e                   	push   cs
  2d:	02 00                	add    al,BYTE PTR [eax]
  2f:	00 22                	add    BYTE PTR [edx],ah
  31:	02 00                	add    al,BYTE PTR [eax]
  33:	00 25 00 00 00 62    	add    BYTE PTR ds:0x62000000,ah
  39:	79 74                	jns    af <MB_FLAGS+0xaf>
  3b:	65 00 53 00          	add    BYTE PTR gs:[ebx+0x0],dl
  3f:	00 00                	add    BYTE PTR [eax],al
  41:	75 69                	jne    ac <MB_FLAGS+0xac>
  43:	6e                   	outs   dx,BYTE PTR ds:[esi]
  44:	74 38                	je     7e <MB_FLAGS+0x7e>
  46:	00 65 00             	add    BYTE PTR [ebp+0x0],ah
  49:	00 00                	add    BYTE PTR [eax],al
  4b:	75 69                	jne    b6 <MB_FLAGS+0xb6>
  4d:	6e                   	outs   dx,BYTE PTR ds:[esi]
  4e:	74 31                	je     81 <MB_FLAGS+0x81>
  50:	36 00 00             	add    BYTE PTR ss:[eax],al
  53:	00 00                	add    BYTE PTR [eax],al
  55:	00 3b                	add    BYTE PTR [ebx],bh
  57:	00 00                	add    BYTE PTR [eax],al
  59:	00 02                	add    BYTE PTR [edx],al
  5b:	00 30                	add    BYTE PTR [eax],dh
  5d:	04 00                	add    al,0x0
  5f:	00 8e 02 00 00 25    	add    BYTE PTR [esi+0x25000002],cl
  65:	00 00                	add    BYTE PTR [eax],al
  67:	00 62 79             	add    BYTE PTR [edx+0x79],ah
  6a:	74 65                	je     d1 <MB_FLAGS+0xd1>
  6c:	00 53 00             	add    BYTE PTR [ebx+0x0],dl
  6f:	00 00                	add    BYTE PTR [eax],al
  71:	75 69                	jne    dc <MB_FLAGS+0xdc>
  73:	6e                   	outs   dx,BYTE PTR ds:[esi]
  74:	74 38                	je     ae <MB_FLAGS+0xae>
  76:	00 65 00             	add    BYTE PTR [ebp+0x0],ah
  79:	00 00                	add    BYTE PTR [eax],al
  7b:	75 69                	jne    e6 <MB_FLAGS+0xe6>
  7d:	6e                   	outs   dx,BYTE PTR ds:[esi]
  7e:	74 31                	je     b1 <MB_FLAGS+0xb1>
  80:	36 00 bf 00 00 00 53 	add    BYTE PTR ss:[edi+0x53000000],bh
  87:	65                   	gs
  88:	72 69                	jb     f3 <MB_FLAGS+0xf3>
  8a:	61                   	popa   
  8b:	6c                   	ins    BYTE PTR es:[edi],dx
  8c:	50                   	push   eax
  8d:	6f                   	outs   dx,DWORD PTR ds:[esi]
  8e:	72 74                	jb     104 <MB_FLAGS+0x104>
  90:	00 00                	add    BYTE PTR [eax],al
  92:	00 00                	add    BYTE PTR [eax],al
  94:	00 b2 00 00 00 02    	add    BYTE PTR [edx+0x2000000],dh
  9a:	00 be 06 00 00 1e    	add    BYTE PTR [esi+0x1e000006],bh
  a0:	02 00                	add    al,BYTE PTR [eax]
  a2:	00 25 00 00 00 62    	add    BYTE PTR ds:0x62000000,ah
  a8:	79 74                	jns    11e <MB_FLAGS+0x11e>
  aa:	65 00 53 00          	add    BYTE PTR gs:[ebx+0x0],dl
  ae:	00 00                	add    BYTE PTR [eax],al
  b0:	75 69                	jne    11b <MB_FLAGS+0x11b>
  b2:	6e                   	outs   dx,BYTE PTR ds:[esi]
  b3:	74 38                	je     ed <MB_FLAGS+0xed>
  b5:	00 65 00             	add    BYTE PTR [ebp+0x0],ah
  b8:	00 00                	add    BYTE PTR [eax],al
  ba:	75 69                	jne    125 <MB_FLAGS+0x125>
  bc:	6e                   	outs   dx,BYTE PTR ds:[esi]
  bd:	74 31                	je     f0 <MB_FLAGS+0xf0>
  bf:	36 00 70 00          	add    BYTE PTR ss:[eax+0x0],dh
  c3:	00 00                	add    BYTE PTR [eax],al
  c5:	75 69                	jne    130 <MB_FLAGS+0x130>
  c7:	6e                   	outs   dx,BYTE PTR ds:[esi]
  c8:	74 33                	je     fd <MB_FLAGS+0xfd>
  ca:	32 00                	xor    al,BYTE PTR [eax]
  cc:	89 00                	mov    DWORD PTR [eax],eax
  ce:	00 00                	add    BYTE PTR [eax],al
  d0:	67                   	addr16
  d1:	64                   	fs
  d2:	74 5f                	je     133 <MB_FLAGS+0x133>
  d4:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  d6:	74 72                	je     14a <MB_FLAGS+0x14a>
  d8:	79 5f                	jns    139 <MB_FLAGS+0x139>
  da:	73 74                	jae    150 <MB_FLAGS+0x150>
  dc:	72 75                	jb     153 <MB_FLAGS+0x153>
  de:	63 74 00 ea          	arpl   WORD PTR [eax+eax*1-0x16],si
  e2:	00 00                	add    BYTE PTR [eax],al
  e4:	00 67 64             	add    BYTE PTR [edi+0x64],ah
  e7:	74 5f                	je     148 <MB_FLAGS+0x148>
  e9:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  eb:	74 72                	je     15f <MB_FLAGS+0x15f>
  ed:	79 00                	jns    ef <MB_FLAGS+0xef>
  ef:	f5                   	cmc    
  f0:	00 00                	add    BYTE PTR [eax],al
  f2:	00 67 64             	add    BYTE PTR [edi+0x64],ah
  f5:	74 5f                	je     156 <MB_FLAGS+0x156>
  f7:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  f9:	74 72                	je     16d <MB_FLAGS+0x16d>
  fb:	79 5f                	jns    15c <MB_FLAGS+0x15c>
  fd:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 100:	74 61                	je     163 <MB_FLAGS+0x163>
 102:	69 6e 65 72 5f 73 74 	imul   ebp,DWORD PTR [esi+0x65],0x74735f72
 109:	72 75                	jb     180 <MB_FLAGS+0x180>
 10b:	63 74 00 20          	arpl   WORD PTR [eax+eax*1+0x20],si
 10f:	01 00                	add    DWORD PTR [eax],eax
 111:	00 67 64             	add    BYTE PTR [edi+0x64],ah
 114:	74 5f                	je     175 <MB_FLAGS+0x175>
 116:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 118:	74 72                	je     18c <MB_FLAGS+0x18c>
 11a:	79 5f                	jns    17b <MB_FLAGS+0x17b>
 11c:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 11f:	74 61                	je     182 <MB_FLAGS+0x182>
 121:	69 6e 65 72 00 2b 01 	imul   ebp,DWORD PTR [esi+0x65],0x12b0072
 128:	00 00                	add    BYTE PTR [eax],al
 12a:	67                   	addr16
 12b:	64                   	fs
 12c:	74 5f                	je     18d <MB_FLAGS+0x18d>
 12e:	70 74                	jo     1a4 <MB_FLAGS+0x1a4>
 130:	72 5f                	jb     191 <MB_FLAGS+0x191>
 132:	73 74                	jae    1a8 <MB_FLAGS+0x1a8>
 134:	72 75                	jb     1ab <MB_FLAGS+0x1ab>
 136:	63 74 00 54          	arpl   WORD PTR [eax+eax*1+0x54],si
 13a:	01 00                	add    DWORD PTR [eax],eax
 13c:	00 67 64             	add    BYTE PTR [edi+0x64],ah
 13f:	74 5f                	je     1a0 <MB_FLAGS+0x1a0>
 141:	70 74                	jo     1b7 <MB_FLAGS+0x1b7>
 143:	72 5f                	jb     1a4 <MB_FLAGS+0x1a4>
 145:	73 00                	jae    147 <MB_FLAGS+0x147>
 147:	00 00                	add    BYTE PTR [eax],al
 149:	00 00                	add    BYTE PTR [eax],al
 14b:	b2 00                	mov    dl,0x0
 14d:	00 00                	add    BYTE PTR [eax],al
 14f:	02 00                	add    al,BYTE PTR [eax]
 151:	dc 08                	fmul   QWORD PTR [eax]
 153:	00 00                	add    BYTE PTR [eax],al
 155:	03 02                	add    eax,DWORD PTR [edx]
 157:	00 00                	add    BYTE PTR [eax],al
 159:	25 00 00 00 62       	and    eax,0x62000000
 15e:	79 74                	jns    1d4 <MB_FLAGS+0x1d4>
 160:	65 00 53 00          	add    BYTE PTR gs:[ebx+0x0],dl
 164:	00 00                	add    BYTE PTR [eax],al
 166:	75 69                	jne    1d1 <MB_FLAGS+0x1d1>
 168:	6e                   	outs   dx,BYTE PTR ds:[esi]
 169:	74 38                	je     1a3 <MB_FLAGS+0x1a3>
 16b:	00 65 00             	add    BYTE PTR [ebp+0x0],ah
 16e:	00 00                	add    BYTE PTR [eax],al
 170:	75 69                	jne    1db <MB_FLAGS+0x1db>
 172:	6e                   	outs   dx,BYTE PTR ds:[esi]
 173:	74 31                	je     1a6 <MB_FLAGS+0x1a6>
 175:	36 00 70 00          	add    BYTE PTR ss:[eax+0x0],dh
 179:	00 00                	add    BYTE PTR [eax],al
 17b:	75 69                	jne    1e6 <MB_FLAGS+0x1e6>
 17d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 17e:	74 33                	je     1b3 <MB_FLAGS+0x1b3>
 180:	32 00                	xor    al,BYTE PTR [eax]
 182:	89 00                	mov    DWORD PTR [eax],eax
 184:	00 00                	add    BYTE PTR [eax],al
 186:	69 64 74 5f 65 6e 74 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x72746e65
 18d:	72 
 18e:	79 5f                	jns    1ef <MB_FLAGS+0x1ef>
 190:	73 74                	jae    206 <MB_FLAGS+0x206>
 192:	72 75                	jb     209 <MB_FLAGS+0x209>
 194:	63 74 00 dc          	arpl   WORD PTR [eax+eax*1-0x24],si
 198:	00 00                	add    BYTE PTR [eax],al
 19a:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 19d:	74 5f                	je     1fe <MB_FLAGS+0x1fe>
 19f:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 1a1:	74 72                	je     215 <MB_FLAGS+0x215>
 1a3:	79 00                	jns    1a5 <MB_FLAGS+0x1a5>
 1a5:	e7 00                	out    0x0,eax
 1a7:	00 00                	add    BYTE PTR [eax],al
 1a9:	69 64 74 5f 65 6e 74 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x72746e65
 1b0:	72 
 1b1:	79 5f                	jns    212 <MB_FLAGS+0x212>
 1b3:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 1b6:	74 61                	je     219 <MB_FLAGS+0x219>
 1b8:	69 6e 65 72 5f 73 74 	imul   ebp,DWORD PTR [esi+0x65],0x74735f72
 1bf:	72 75                	jb     236 <MB_FLAGS+0x236>
 1c1:	63 74 00 13          	arpl   WORD PTR [eax+eax*1+0x13],si
 1c5:	01 00                	add    DWORD PTR [eax],eax
 1c7:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 1ca:	74 5f                	je     22b <MB_FLAGS+0x22b>
 1cc:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 1ce:	74 72                	je     242 <MB_FLAGS+0x242>
 1d0:	79 5f                	jns    231 <MB_FLAGS+0x231>
 1d2:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 1d5:	74 61                	je     238 <MB_FLAGS+0x238>
 1d7:	69 6e 65 72 00 1e 01 	imul   ebp,DWORD PTR [esi+0x65],0x11e0072
 1de:	00 00                	add    BYTE PTR [eax],al
 1e0:	69 64 74 5f 70 74 72 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x5f727470
 1e7:	5f 
 1e8:	73 74                	jae    25e <MB_FLAGS+0x25e>
 1ea:	72 75                	jb     261 <MB_FLAGS+0x261>
 1ec:	63 74 00 47          	arpl   WORD PTR [eax+eax*1+0x47],si
 1f0:	01 00                	add    DWORD PTR [eax],eax
 1f2:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 1f5:	74 5f                	je     256 <MB_FLAGS+0x256>
 1f7:	70 74                	jo     26d <MB_FLAGS+0x26d>
 1f9:	72 5f                	jb     25a <MB_FLAGS+0x25a>
 1fb:	73 00                	jae    1fd <MB_FLAGS+0x1fd>
 1fd:	00 00                	add    BYTE PTR [eax],al
 1ff:	00 00                	add    BYTE PTR [eax],al
 201:	48                   	dec    eax
 202:	01 00                	add    DWORD PTR [eax],eax
 204:	00 02                	add    BYTE PTR [edx],al
 206:	00 df                	add    bh,bl
 208:	0a 00                	or     al,BYTE PTR [eax]
 20a:	00 a2 03 00 00 25    	add    BYTE PTR [edx+0x25000003],ah
 210:	00 00                	add    BYTE PTR [eax],al
 212:	00 62 79             	add    BYTE PTR [edx+0x79],ah
 215:	74 65                	je     27c <MB_FLAGS+0x27c>
 217:	00 53 00             	add    BYTE PTR [ebx+0x0],dl
 21a:	00 00                	add    BYTE PTR [eax],al
 21c:	75 69                	jne    287 <MB_FLAGS+0x287>
 21e:	6e                   	outs   dx,BYTE PTR ds:[esi]
 21f:	74 38                	je     259 <MB_FLAGS+0x259>
 221:	00 65 00             	add    BYTE PTR [ebp+0x0],ah
 224:	00 00                	add    BYTE PTR [eax],al
 226:	75 69                	jne    291 <MB_FLAGS+0x291>
 228:	6e                   	outs   dx,BYTE PTR ds:[esi]
 229:	74 31                	je     25c <MB_FLAGS+0x25c>
 22b:	36 00 70 00          	add    BYTE PTR ss:[eax+0x0],dh
 22f:	00 00                	add    BYTE PTR [eax],al
 231:	75 69                	jne    29c <MB_FLAGS+0x29c>
 233:	6e                   	outs   dx,BYTE PTR ds:[esi]
 234:	74 33                	je     269 <MB_FLAGS+0x269>
 236:	32 00                	xor    al,BYTE PTR [eax]
 238:	aa                   	stos   BYTE PTR es:[edi],al
 239:	00 00                	add    BYTE PTR [eax],al
 23b:	00 50 6f             	add    BYTE PTR [eax+0x6f],dl
 23e:	73 69                	jae    2a9 <MB_FLAGS+0x2a9>
 240:	74 69                	je     2ab <MB_FLAGS+0x2ab>
 242:	6f                   	outs   dx,DWORD PTR ds:[esi]
 243:	6e                   	outs   dx,BYTE PTR ds:[esi]
 244:	38 00                	cmp    BYTE PTR [eax],al
 246:	65 01 00             	add    DWORD PTR gs:[eax],eax
 249:	00 54 65 72          	add    BYTE PTR [ebp+eiz*2+0x72],dl
 24d:	6d                   	ins    DWORD PTR es:[edi],dx
 24e:	69 6e 61 6c 00 70 01 	imul   ebp,DWORD PTR [esi+0x61],0x170006c
 255:	00 00                	add    BYTE PTR [eax],al
 257:	67                   	addr16
 258:	64                   	fs
 259:	74 5f                	je     2ba <MB_FLAGS+0x2ba>
 25b:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 25d:	74 72                	je     2d1 <MB_FLAGS+0x2d1>
 25f:	79 5f                	jns    2c0 <MB_FLAGS+0x2c0>
 261:	73 74                	jae    2d7 <MB_FLAGS+0x2d7>
 263:	72 75                	jb     2da <MB_FLAGS+0x2da>
 265:	63 74 00 d1          	arpl   WORD PTR [eax+eax*1-0x2f],si
 269:	01 00                	add    DWORD PTR [eax],eax
 26b:	00 67 64             	add    BYTE PTR [edi+0x64],ah
 26e:	74 5f                	je     2cf <MB_FLAGS+0x2cf>
 270:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 272:	74 72                	je     2e6 <MB_FLAGS+0x2e6>
 274:	79 00                	jns    276 <MB_FLAGS+0x276>
 276:	dc 01                	fadd   QWORD PTR [ecx]
 278:	00 00                	add    BYTE PTR [eax],al
 27a:	67                   	addr16
 27b:	64                   	fs
 27c:	74 5f                	je     2dd <MB_FLAGS+0x2dd>
 27e:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 280:	74 72                	je     2f4 <MB_FLAGS+0x2f4>
 282:	79 5f                	jns    2e3 <MB_FLAGS+0x2e3>
 284:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 287:	74 61                	je     2ea <MB_FLAGS+0x2ea>
 289:	69 6e 65 72 5f 73 74 	imul   ebp,DWORD PTR [esi+0x65],0x74735f72
 290:	72 75                	jb     307 <MB_FLAGS+0x307>
 292:	63 74 00 07          	arpl   WORD PTR [eax+eax*1+0x7],si
 296:	02 00                	add    al,BYTE PTR [eax]
 298:	00 67 64             	add    BYTE PTR [edi+0x64],ah
 29b:	74 5f                	je     2fc <MB_FLAGS+0x2fc>
 29d:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 29f:	74 72                	je     313 <MB_FLAGS+0x313>
 2a1:	79 5f                	jns    302 <MB_FLAGS+0x302>
 2a3:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 2a6:	74 61                	je     309 <MB_FLAGS+0x309>
 2a8:	69 6e 65 72 00 12 02 	imul   ebp,DWORD PTR [esi+0x65],0x2120072
 2af:	00 00                	add    BYTE PTR [eax],al
 2b1:	67                   	addr16
 2b2:	64                   	fs
 2b3:	74 5f                	je     314 <MB_FLAGS+0x314>
 2b5:	70 74                	jo     32b <MB_FLAGS+0x32b>
 2b7:	72 5f                	jb     318 <MB_FLAGS+0x318>
 2b9:	73 74                	jae    32f <MB_FLAGS+0x32f>
 2bb:	72 75                	jb     332 <MB_FLAGS+0x332>
 2bd:	63 74 00 3b          	arpl   WORD PTR [eax+eax*1+0x3b],si
 2c1:	02 00                	add    al,BYTE PTR [eax]
 2c3:	00 67 64             	add    BYTE PTR [edi+0x64],ah
 2c6:	74 5f                	je     327 <MB_FLAGS+0x327>
 2c8:	70 74                	jo     33e <MB_FLAGS+0x33e>
 2ca:	72 5f                	jb     32b <MB_FLAGS+0x32b>
 2cc:	73 00                	jae    2ce <MB_FLAGS+0x2ce>
 2ce:	46                   	inc    esi
 2cf:	02 00                	add    al,BYTE PTR [eax]
 2d1:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 2d4:	74 5f                	je     335 <MB_FLAGS+0x335>
 2d6:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 2d8:	74 72                	je     34c <MB_FLAGS+0x34c>
 2da:	79 5f                	jns    33b <MB_FLAGS+0x33b>
 2dc:	73 74                	jae    352 <MB_FLAGS+0x352>
 2de:	72 75                	jb     355 <MB_FLAGS+0x355>
 2e0:	63 74 00 99          	arpl   WORD PTR [eax+eax*1-0x67],si
 2e4:	02 00                	add    al,BYTE PTR [eax]
 2e6:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 2e9:	74 5f                	je     34a <MB_FLAGS+0x34a>
 2eb:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 2ed:	74 72                	je     361 <MB_FLAGS+0x361>
 2ef:	79 00                	jns    2f1 <MB_FLAGS+0x2f1>
 2f1:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 2f2:	02 00                	add    al,BYTE PTR [eax]
 2f4:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 2f7:	74 5f                	je     358 <MB_FLAGS+0x358>
 2f9:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 2fb:	74 72                	je     36f <MB_FLAGS+0x36f>
 2fd:	79 5f                	jns    35e <MB_FLAGS+0x35e>
 2ff:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 302:	74 61                	je     365 <MB_FLAGS+0x365>
 304:	69 6e 65 72 5f 73 74 	imul   ebp,DWORD PTR [esi+0x65],0x74735f72
 30b:	72 75                	jb     382 <MB_FLAGS+0x382>
 30d:	63 74 00 d0          	arpl   WORD PTR [eax+eax*1-0x30],si
 311:	02 00                	add    al,BYTE PTR [eax]
 313:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 316:	74 5f                	je     377 <MB_FLAGS+0x377>
 318:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 31a:	74 72                	je     38e <MB_FLAGS+0x38e>
 31c:	79 5f                	jns    37d <MB_FLAGS+0x37d>
 31e:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 321:	74 61                	je     384 <MB_FLAGS+0x384>
 323:	69 6e 65 72 00 db 02 	imul   ebp,DWORD PTR [esi+0x65],0x2db0072
 32a:	00 00                	add    BYTE PTR [eax],al
 32c:	69 64 74 5f 70 74 72 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x5f727470
 333:	5f 
 334:	73 74                	jae    3aa <MB_FLAGS+0x3aa>
 336:	72 75                	jb     3ad <MB_FLAGS+0x3ad>
 338:	63 74 00 04          	arpl   WORD PTR [eax+eax*1+0x4],si
 33c:	03 00                	add    eax,DWORD PTR [eax]
 33e:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 341:	74 5f                	je     3a2 <MB_FLAGS+0x3a2>
 343:	70 74                	jo     3b9 <MB_FLAGS+0x3b9>
 345:	72 5f                	jb     3a6 <MB_FLAGS+0x3a6>
 347:	73 00                	jae    349 <MB_FLAGS+0x349>
 349:	00 00                	add    BYTE PTR [eax],al
 34b:	00 00                	add    BYTE PTR [eax],al
 34d:	17                   	pop    ss
 34e:	00 00                	add    BYTE PTR [eax],al
 350:	00 02                	add    BYTE PTR [edx],al
 352:	00 81 0e 00 00 7f    	add    BYTE PTR [ecx+0x7f00000e],al
 358:	00 00                	add    BYTE PTR [eax],al
 35a:	00 25 00 00 00 62    	add    BYTE PTR ds:0x62000000,ah
 360:	79 74                	jns    3d6 <MB_FLAGS+0x3d6>
 362:	65 00 00             	add    BYTE PTR gs:[eax],al
 365:	00 00                	add    BYTE PTR [eax],al
 367:	00 51 00             	add    BYTE PTR [ecx+0x0],dl
 36a:	00 00                	add    BYTE PTR [eax],al
 36c:	02 00                	add    al,BYTE PTR [eax]
 36e:	00 0f                	add    BYTE PTR [edi],cl
 370:	00 00                	add    BYTE PTR [eax],al
 372:	7c 02                	jl     376 <MB_FLAGS+0x376>
 374:	00 00                	add    BYTE PTR [eax],al
 376:	25 00 00 00 62       	and    eax,0x62000000
 37b:	79 74                	jns    3f1 <MB_FLAGS+0x3f1>
 37d:	65 00 53 00          	add    BYTE PTR gs:[ebx+0x0],dl
 381:	00 00                	add    BYTE PTR [eax],al
 383:	75 69                	jne    3ee <MB_FLAGS+0x3ee>
 385:	6e                   	outs   dx,BYTE PTR ds:[esi]
 386:	74 38                	je     3c0 <MB_FLAGS+0x3c0>
 388:	00 65 00             	add    BYTE PTR [ebp+0x0],ah
 38b:	00 00                	add    BYTE PTR [eax],al
 38d:	75 69                	jne    3f8 <MB_FLAGS+0x3f8>
 38f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 390:	74 31                	je     3c3 <MB_FLAGS+0x3c3>
 392:	36 00 9f 00 00 00 50 	add    BYTE PTR ss:[edi+0x50000000],bl
 399:	6f                   	outs   dx,DWORD PTR ds:[esi]
 39a:	73 69                	jae    405 <MB_FLAGS+0x405>
 39c:	74 69                	je     407 <MB_FLAGS+0x407>
 39e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 39f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3a0:	38 00                	cmp    BYTE PTR [eax],al
 3a2:	13 01                	adc    eax,DWORD PTR [ecx]
 3a4:	00 00                	add    BYTE PTR [eax],al
 3a6:	43                   	inc    ebx
 3a7:	4f                   	dec    edi
 3a8:	4c                   	dec    esp
 3a9:	4f                   	dec    edi
 3aa:	52                   	push   edx
 3ab:	00 65 01             	add    BYTE PTR [ebp+0x1],ah
 3ae:	00 00                	add    BYTE PTR [eax],al
 3b0:	54                   	push   esp
 3b1:	65                   	gs
 3b2:	72 6d                	jb     421 <MB_FLAGS+0x421>
 3b4:	69 6e 61 6c 00 00 00 	imul   ebp,DWORD PTR [esi+0x61],0x6c
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	0c 00                	or     al,0x0
  12:	10 00                	adc    BYTE PTR [eax],al
  14:	aa                   	stos   BYTE PTR es:[edi],al
  15:	02 00                	add    al,BYTE PTR [eax]
	...
  1f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  22:	00 00                	add    BYTE PTR [eax],al
  24:	02 00                	add    al,BYTE PTR [eax]
  26:	0e                   	push   cs
  27:	02 00                	add    al,BYTE PTR [eax]
  29:	00 04 00             	add    BYTE PTR [eax+eax*1],al
  2c:	00 00                	add    BYTE PTR [eax],al
  2e:	00 00                	add    BYTE PTR [eax],al
  30:	b8 02 10 00 ae       	mov    eax,0xae001002
  35:	02 00                	add    al,BYTE PTR [eax]
	...
  3f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  42:	00 00                	add    BYTE PTR [eax],al
  44:	02 00                	add    al,BYTE PTR [eax]
  46:	30 04 00             	xor    BYTE PTR [eax+eax*1],al
  49:	00 04 00             	add    BYTE PTR [eax+eax*1],al
  4c:	00 00                	add    BYTE PTR [eax],al
  4e:	00 00                	add    BYTE PTR [eax],al
  50:	68 05 10 00 0b       	push   0xb001005
  55:	02 00                	add    al,BYTE PTR [eax]
	...
  5f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  62:	00 00                	add    BYTE PTR [eax],al
  64:	02 00                	add    al,BYTE PTR [eax]
  66:	be 06 00 00 04       	mov    esi,0x4000006
  6b:	00 00                	add    BYTE PTR [eax],al
  6d:	00 00                	add    BYTE PTR [eax],al
  6f:	00 a8 07 10 00 65    	add    BYTE PTR [eax+0x65001007],ch
  75:	02 00                	add    al,BYTE PTR [eax]
	...
  7f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  82:	00 00                	add    BYTE PTR [eax],al
  84:	02 00                	add    al,BYTE PTR [eax]
  86:	dc 08                	fmul   QWORD PTR [eax]
  88:	00 00                	add    BYTE PTR [eax],al
  8a:	04 00                	add    al,0x0
  8c:	00 00                	add    BYTE PTR [eax],al
  8e:	00 00                	add    BYTE PTR [eax],al
  90:	20 0a                	and    BYTE PTR [edx],cl
  92:	10 00                	adc    BYTE PTR [eax],al
  94:	a9 00 00 00 00       	test   eax,0x0
  99:	00 00                	add    BYTE PTR [eax],al
  9b:	00 00                	add    BYTE PTR [eax],al
  9d:	00 00                	add    BYTE PTR [eax],al
  9f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  a2:	00 00                	add    BYTE PTR [eax],al
  a4:	02 00                	add    al,BYTE PTR [eax]
  a6:	df 0a                	fisttp WORD PTR [edx]
  a8:	00 00                	add    BYTE PTR [eax],al
  aa:	04 00                	add    al,0x0
  ac:	00 00                	add    BYTE PTR [eax],al
  ae:	00 00                	add    BYTE PTR [eax],al
  b0:	cc                   	int3   
  b1:	0a 10                	or     dl,BYTE PTR [eax]
  b3:	00 5d 00             	add    BYTE PTR [ebp+0x0],bl
	...
  be:	00 00                	add    BYTE PTR [eax],al
  c0:	1c 00                	sbb    al,0x0
  c2:	00 00                	add    BYTE PTR [eax],al
  c4:	02 00                	add    al,BYTE PTR [eax]
  c6:	00 0f                	add    BYTE PTR [edi],cl
  c8:	00 00                	add    BYTE PTR [eax],al
  ca:	04 00                	add    al,0x0
  cc:	00 00                	add    BYTE PTR [eax],al
  ce:	00 00                	add    BYTE PTR [eax],al
  d0:	2c 0b                	sub    al,0xb
  d2:	10 00                	adc    BYTE PTR [eax],al
  d4:	4e                   	dec    esi
  d5:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	47                   	inc    edi
   1:	4e                   	dec    esi
   2:	55                   	push   ebp
   3:	20 43 20             	and    BYTE PTR [ebx+0x20],al
   6:	34 2e                	xor    al,0x2e
   8:	35 2e 32 00 6c       	xor    eax,0x6c00322e
   d:	61                   	popa   
   e:	72 67                	jb     77 <MB_FLAGS+0x77>
  10:	65                   	gs
  11:	5f                   	pop    edi
  12:	64 69 67 69 74 73 00 	imul   esp,DWORD PTR fs:[edi+0x69],0x62007374
  19:	62 
  1a:	79 74                	jns    90 <MB_FLAGS+0x90>
  1c:	65 00 75 6e          	add    BYTE PTR gs:[ebp+0x6e],dh
  20:	73 69                	jae    8b <MB_FLAGS+0x8b>
  22:	67 6e                	outs   dx,BYTE PTR ds:[si]
  24:	65 64 20 63 68       	gs and BYTE PTR fs:gs:[ebx+0x68],ah
  29:	61                   	popa   
  2a:	72 00                	jb     2c <MB_FLAGS+0x2c>
  2c:	73 68                	jae    96 <MB_FLAGS+0x96>
  2e:	6f                   	outs   dx,DWORD PTR ds:[esi]
  2f:	72 74                	jb     a5 <MB_FLAGS+0xa5>
  31:	20 75 6e             	and    BYTE PTR [ebp+0x6e],dh
  34:	73 69                	jae    9f <MB_FLAGS+0x9f>
  36:	67 6e                	outs   dx,BYTE PTR ds:[si]
  38:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[ecx+0x6e],ch
  3d:	74 00                	je     3f <MB_FLAGS+0x3f>
  3f:	6c                   	ins    BYTE PTR es:[edi],dx
  40:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [edx+0x72],0x2f797261
  47:	73 6f                	jae    b8 <MB_FLAGS+0xb8>
  49:	75 72                	jne    bd <MB_FLAGS+0xbd>
  4b:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
  4e:	73 74                	jae    c4 <MB_FLAGS+0xc4>
  50:	64 69 6f 2e 63 00 75 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x69750063
  57:	69 
  58:	6e                   	outs   dx,BYTE PTR ds:[esi]
  59:	74 31                	je     8c <MB_FLAGS+0x8c>
  5b:	36 00 66 6c          	add    BYTE PTR ss:[esi+0x6c],ah
  5f:	61                   	popa   
  60:	67 00 73 6d          	add    BYTE PTR [bp+di+0x6d],dh
  64:	61                   	popa   
  65:	6c                   	ins    BYTE PTR es:[edi],dx
  66:	6c                   	ins    BYTE PTR es:[edi],dx
  67:	5f                   	pop    edi
  68:	64 69 67 69 74 73 00 	imul   esp,DWORD PTR fs:[edi+0x69],0x6c007374
  6f:	6c 
  70:	6f                   	outs   dx,DWORD PTR ds:[esi]
  71:	6e                   	outs   dx,BYTE PTR ds:[esi]
  72:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
  76:	6e                   	outs   dx,BYTE PTR ds:[esi]
  77:	67 20 75 6e          	and    BYTE PTR [di+0x6e],dh
  7b:	73 69                	jae    e6 <MB_FLAGS+0xe6>
  7d:	67 6e                	outs   dx,BYTE PTR ds:[si]
  7f:	65 64 20 69 6e       	gs and BYTE PTR fs:gs:[ecx+0x6e],ch
  84:	74 00                	je     86 <MB_FLAGS+0x86>
  86:	6c                   	ins    BYTE PTR es:[edi],dx
  87:	6f                   	outs   dx,DWORD PTR ds:[esi]
  88:	6e                   	outs   dx,BYTE PTR ds:[esi]
  89:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
  8d:	6e                   	outs   dx,BYTE PTR ds:[esi]
  8e:	67 20 69 6e          	and    BYTE PTR [bx+di+0x6e],ch
  92:	74 00                	je     94 <MB_FLAGS+0x94>
  94:	73 68                	jae    fe <MB_FLAGS+0xfe>
  96:	6f                   	outs   dx,DWORD PTR ds:[esi]
  97:	72 74                	jb     10d <MB_FLAGS+0x10d>
  99:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
  9c:	74 00                	je     9e <MB_FLAGS+0x9e>
  9e:	61                   	popa   
  9f:	72 67                	jb     108 <MB_FLAGS+0x108>
  a1:	73 00                	jae    a3 <MB_FLAGS+0xa3>
  a3:	2f                   	das    
  a4:	68 6f 6d 65 2f       	push   0x2f656d6f
  a9:	73 74                	jae    11f <MB_FLAGS+0x11f>
  ab:	65                   	gs
  ac:	66 61                	popaw  
  ae:	6e                   	outs   dx,BYTE PTR ds:[esi]
  af:	2f                   	das    
  b0:	77 6f                	ja     121 <MB_FLAGS+0x121>
  b2:	72 6b                	jb     11f <MB_FLAGS+0x11f>
  b4:	73 70                	jae    126 <MB_FLAGS+0x126>
  b6:	61                   	popa   
  b7:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
  ba:	6e                   	outs   dx,BYTE PTR ds:[esi]
  bb:	6e                   	outs   dx,BYTE PTR ds:[esi]
  bc:	4f                   	dec    edi
  bd:	53                   	push   ebx
  be:	00 44 4c 41          	add    BYTE PTR [esp+ecx*2+0x41],al
  c2:	52                   	push   edx
  c3:	47                   	inc    edi
  c4:	45                   	inc    ebp
  c5:	43                   	inc    ebx
  c6:	48                   	dec    eax
  c7:	41                   	inc    ecx
  c8:	52                   	push   edx
  c9:	53                   	push   ebx
  ca:	00 64 65 62          	add    BYTE PTR [ebp+eiz*2+0x62],ah
  ce:	75 67                	jne    137 <MB_FLAGS+0x137>
  d0:	2f                   	das    
  d1:	73 6f                	jae    142 <MB_FLAGS+0x142>
  d3:	75 72                	jne    147 <MB_FLAGS+0x147>
  d5:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
  d8:	64 65 62 75 67       	fs bound esi,QWORD PTR fs:gs:[ebp+0x67]
  dd:	2e 63 00             	arpl   WORD PTR cs:[eax],ax
  e0:	6f                   	outs   dx,DWORD PTR ds:[esi]
  e1:	75 74                	jne    157 <MB_FLAGS+0x157>
  e3:	62 00                	bound  eax,QWORD PTR [eax]
  e5:	64                   	fs
  e6:	70 72                	jo     15a <MB_FLAGS+0x15a>
  e8:	69 6e 74 00 64 70 72 	imul   ebp,DWORD PTR [esi+0x74],0x72706400
  ef:	69 6e 74 6e 75 6d 00 	imul   ebp,DWORD PTR [esi+0x74],0x6d756e
  f6:	70 6f                	jo     167 <MB_FLAGS+0x167>
  f8:	72 74                	jb     16e <MB_FLAGS+0x16e>
  fa:	00 75 69             	add    BYTE PTR [ebp+0x69],dh
  fd:	6e                   	outs   dx,BYTE PTR ds:[esi]
  fe:	74 38                	je     138 <MB_FLAGS+0x138>
 100:	00 64 70 72          	add    BYTE PTR [eax+esi*2+0x72],ah
 104:	69 6e 74 63 68 61 72 	imul   ebp,DWORD PTR [esi+0x74],0x72616863
 10b:	00 6d 5f             	add    BYTE PTR [ebp+0x5f],ch
 10e:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
 111:	73 00                	jae    113 <MB_FLAGS+0x113>
 113:	72 65                	jb     17a <MB_FLAGS+0x17a>
 115:	74 75                	je     18c <MB_FLAGS+0x18c>
 117:	72 6e                	jb     187 <MB_FLAGS+0x187>
 119:	5f                   	pop    edi
 11a:	76 61                	jbe    17d <MB_FLAGS+0x17d>
 11c:	6c                   	ins    BYTE PTR es:[edi],dx
 11d:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
 120:	72 69                	jb     18b <MB_FLAGS+0x18b>
 122:	61                   	popa   
 123:	6c                   	ins    BYTE PTR es:[edi],dx
 124:	50                   	push   eax
 125:	6f                   	outs   dx,DWORD PTR ds:[esi]
 126:	72 74                	jb     19c <MB_FLAGS+0x19c>
 128:	5f                   	pop    edi
 129:	52                   	push   edx
 12a:	65 63 65 69          	arpl   WORD PTR gs:[ebp+0x69],sp
 12e:	76 65                	jbe    195 <MB_FLAGS+0x195>
 130:	64 00 53 65          	add    BYTE PTR fs:[ebx+0x65],dl
 134:	72 69                	jb     19f <MB_FLAGS+0x19f>
 136:	61                   	popa   
 137:	6c                   	ins    BYTE PTR es:[edi],dx
 138:	50                   	push   eax
 139:	6f                   	outs   dx,DWORD PTR ds:[esi]
 13a:	72 74                	jb     1b0 <MB_FLAGS+0x1b0>
 13c:	5f                   	pop    edi
 13d:	52                   	push   edx
 13e:	65                   	gs
 13f:	61                   	popa   
 140:	64 00 53 65          	add    BYTE PTR fs:[ebx+0x65],dl
 144:	72 69                	jb     1af <MB_FLAGS+0x1af>
 146:	61                   	popa   
 147:	6c                   	ins    BYTE PTR es:[edi],dx
 148:	50                   	push   eax
 149:	6f                   	outs   dx,DWORD PTR ds:[esi]
 14a:	72 74                	jb     1c0 <MB_FLAGS+0x1c0>
 14c:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
 14f:	72 69                	jb     1ba <MB_FLAGS+0x1ba>
 151:	61                   	popa   
 152:	6c                   	ins    BYTE PTR es:[edi],dx
 153:	50                   	push   eax
 154:	6f                   	outs   dx,DWORD PTR ds:[esi]
 155:	72 74                	jb     1cb <MB_FLAGS+0x1cb>
 157:	5f                   	pop    edi
 158:	49                   	dec    ecx
 159:	6e                   	outs   dx,BYTE PTR ds:[esi]
 15a:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 161:	65 
 162:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
 165:	72 69                	jb     1d0 <MB_FLAGS+0x1d0>
 167:	61                   	popa   
 168:	6c                   	ins    BYTE PTR es:[edi],dx
 169:	50                   	push   eax
 16a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 16b:	72 74                	jb     1e1 <MB_FLAGS+0x1e1>
 16d:	5f                   	pop    edi
 16e:	57                   	push   edi
 16f:	72 69                	jb     1da <MB_FLAGS+0x1da>
 171:	74 65                	je     1d8 <MB_FLAGS+0x1d8>
 173:	00 6d 5f             	add    BYTE PTR [ebp+0x5f],ch
 176:	62 61 75             	bound  esp,QWORD PTR [ecx+0x75]
 179:	64 00 73 65          	add    BYTE PTR fs:[ebx+0x65],dh
 17d:	6c                   	ins    BYTE PTR es:[edi],dx
 17e:	66                   	data16
 17f:	00 64 69 76          	add    BYTE PTR [ecx+ebp*2+0x76],ah
 183:	69 73 6f 72 00 6d 5f 	imul   esi,DWORD PTR [ebx+0x6f],0x5f6d0072
 18a:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 18d:	65 00 53 65          	add    BYTE PTR gs:[ebx+0x65],dl
 191:	72 69                	jb     1fc <MB_FLAGS+0x1fc>
 193:	61                   	popa   
 194:	6c                   	ins    BYTE PTR es:[edi],dx
 195:	50                   	push   eax
 196:	6f                   	outs   dx,DWORD PTR ds:[esi]
 197:	72 74                	jb     20d <MB_FLAGS+0x20d>
 199:	5f                   	pop    edi
 19a:	54                   	push   esp
 19b:	72 61                	jb     1fe <MB_FLAGS+0x1fe>
 19d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 19e:	73 6d                	jae    20d <MB_FLAGS+0x20d>
 1a0:	69 74 45 6d 70 74 79 	imul   esi,DWORD PTR [ebp+eax*2+0x6d],0x797470
 1a7:	00 
 1a8:	61                   	popa   
 1a9:	72 63                	jb     20e <MB_FLAGS+0x20e>
 1ab:	68 2f 78 38 36       	push   0x3638782f
 1b0:	2f                   	das    
 1b1:	70 6f                	jo     222 <MB_FLAGS+0x222>
 1b3:	72 74                	jb     229 <MB_FLAGS+0x229>
 1b5:	73 2f                	jae    1e6 <MB_FLAGS+0x1e6>
 1b7:	73 6f                	jae    228 <MB_FLAGS+0x228>
 1b9:	75 72                	jne    22d <MB_FLAGS+0x22d>
 1bb:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 1be:	53                   	push   ebx
 1bf:	65                   	gs
 1c0:	72 69                	jb     22b <MB_FLAGS+0x22b>
 1c2:	61                   	popa   
 1c3:	6c                   	ins    BYTE PTR es:[edi],dx
 1c4:	50                   	push   eax
 1c5:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1c6:	72 74                	jb     23c <MB_FLAGS+0x23c>
 1c8:	2e 63 00             	arpl   WORD PTR cs:[eax],ax
 1cb:	6d                   	ins    DWORD PTR es:[edi],dx
 1cc:	5f                   	pop    edi
 1cd:	70 61                	jo     230 <MB_FLAGS+0x230>
 1cf:	72 69                	jb     23a <MB_FLAGS+0x23a>
 1d1:	74 79                	je     24c <MB_FLAGS+0x24c>
 1d3:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 1d6:	63 68 2f             	arpl   WORD PTR [eax+0x2f],bp
 1d9:	78 38                	js     213 <MB_FLAGS+0x213>
 1db:	36                   	ss
 1dc:	2f                   	das    
 1dd:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 1e0:	6d                   	ins    DWORD PTR es:[edi],dx
 1e1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1e2:	6e                   	outs   dx,BYTE PTR ds:[esi]
 1e3:	2f                   	das    
 1e4:	73 6f                	jae    255 <MB_FLAGS+0x255>
 1e6:	75 72                	jne    25a <MB_FLAGS+0x25a>
 1e8:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 1eb:	47                   	inc    edi
 1ec:	6c                   	ins    BYTE PTR es:[edi],dx
 1ed:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1ee:	62 61 6c             	bound  esp,QWORD PTR [ecx+0x6c]
 1f1:	44                   	inc    esp
 1f2:	65                   	gs
 1f3:	73 63                	jae    258 <MB_FLAGS+0x258>
 1f5:	72 69                	jb     260 <MB_FLAGS+0x260>
 1f7:	70 74                	jo     26d <MB_FLAGS+0x26d>
 1f9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1fa:	72 54                	jb     250 <MB_FLAGS+0x250>
 1fc:	61                   	popa   
 1fd:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 201:	63 00                	arpl   WORD PTR [eax],ax
 203:	67                   	addr16
 204:	64                   	fs
 205:	74 5f                	je     266 <MB_FLAGS+0x266>
 207:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 209:	74 72                	je     27d <MB_FLAGS+0x27d>
 20b:	79 00                	jns    20d <MB_FLAGS+0x20d>
 20d:	67                   	addr16
 20e:	64                   	fs
 20f:	74 5f                	je     270 <MB_FLAGS+0x270>
 211:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 213:	74 72                	je     287 <MB_FLAGS+0x287>
 215:	79 5f                	jns    276 <MB_FLAGS+0x276>
 217:	73 74                	jae    28d <MB_FLAGS+0x28d>
 219:	72 75                	jb     290 <MB_FLAGS+0x290>
 21b:	63 74 00 67          	arpl   WORD PTR [eax+eax*1+0x67],si
 21f:	64                   	fs
 220:	74 5f                	je     281 <MB_FLAGS+0x281>
 222:	70 74                	jo     298 <MB_FLAGS+0x298>
 224:	72 00                	jb     226 <MB_FLAGS+0x226>
 226:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 229:	65                   	gs
 22a:	5f                   	pop    edi
 22b:	68 69 67 68 00       	push   0x686769
 230:	67 72 61             	addr16 jb 294 <MB_FLAGS+0x294>
 233:	6e                   	outs   dx,BYTE PTR ds:[esi]
 234:	75 6c                	jne    2a2 <MB_FLAGS+0x2a2>
 236:	61                   	popa   
 237:	72 69                	jb     2a2 <MB_FLAGS+0x2a2>
 239:	74 79                	je     2b4 <MB_FLAGS+0x2b4>
 23b:	00 67 64             	add    BYTE PTR [edi+0x64],ah
 23e:	74 5f                	je     29f <MB_FLAGS+0x29f>
 240:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 242:	74 72                	je     2b6 <MB_FLAGS+0x2b6>
 244:	79 5f                	jns    2a5 <MB_FLAGS+0x2a5>
 246:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 249:	74 61                	je     2ac <MB_FLAGS+0x2ac>
 24b:	69 6e 65 72 5f 73 74 	imul   ebp,DWORD PTR [esi+0x65],0x74735f72
 252:	72 75                	jb     2c9 <MB_FLAGS+0x2c9>
 254:	63 74 00 47          	arpl   WORD PTR [eax+eax*1+0x47],si
 258:	64                   	fs
 259:	74 5f                	je     2ba <MB_FLAGS+0x2ba>
 25b:	49                   	dec    ecx
 25c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 25d:	69 74 00 75 69 6e 74 	imul   esi,DWORD PTR [eax+eax*1+0x75],0x33746e69
 264:	33 
 265:	32 00                	xor    al,BYTE PTR [eax]
 267:	67                   	addr16
 268:	64                   	fs
 269:	74 5f                	je     2ca <MB_FLAGS+0x2ca>
 26b:	70 74                	jo     2e1 <MB_FLAGS+0x2e1>
 26d:	72 5f                	jb     2ce <MB_FLAGS+0x2ce>
 26f:	73 00                	jae    271 <MB_FLAGS+0x271>
 271:	61                   	popa   
 272:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
 275:	73 73                	jae    2ea <MB_FLAGS+0x2ea>
 277:	00 6c 69 6d          	add    BYTE PTR [ecx+ebp*2+0x6d],ch
 27b:	69 74 00 62 61 73 65 	imul   esi,DWORD PTR [eax+eax*1+0x62],0x5f657361
 282:	5f 
 283:	6c                   	ins    BYTE PTR es:[edi],dx
 284:	6f                   	outs   dx,DWORD PTR ds:[esi]
 285:	77 00                	ja     287 <MB_FLAGS+0x287>
 287:	69 6e 64 65 78 00 47 	imul   ebp,DWORD PTR [esi+0x64],0x47007865
 28e:	64                   	fs
 28f:	74 5f                	je     2f0 <MB_FLAGS+0x2f0>
 291:	49                   	dec    ecx
 292:	6e                   	outs   dx,BYTE PTR ds:[esi]
 293:	73 74                	jae    309 <MB_FLAGS+0x309>
 295:	61                   	popa   
 296:	6c                   	ins    BYTE PTR es:[edi],dx
 297:	6c                   	ins    BYTE PTR es:[edi],dx
 298:	45                   	inc    ebp
 299:	6e                   	outs   dx,BYTE PTR ds:[esi]
 29a:	74 72                	je     30e <MB_FLAGS+0x30e>
 29c:	69 65 73 00 67 64 74 	imul   esp,DWORD PTR [ebp+0x73],0x74646700
 2a3:	5f                   	pop    edi
 2a4:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 2a6:	74 72                	je     31a <MB_FLAGS+0x31a>
 2a8:	79 5f                	jns    309 <MB_FLAGS+0x309>
 2aa:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 2ad:	74 61                	je     310 <MB_FLAGS+0x310>
 2af:	69 6e 65 72 00 67 72 	imul   ebp,DWORD PTR [esi+0x65],0x72670072
 2b6:	61                   	popa   
 2b7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2b8:	00 67 64             	add    BYTE PTR [edi+0x64],ah
 2bb:	74 5f                	je     31c <MB_FLAGS+0x31c>
 2bd:	70 74                	jo     333 <MB_FLAGS+0x333>
 2bf:	72 5f                	jb     320 <MB_FLAGS+0x320>
 2c1:	73 74                	jae    337 <MB_FLAGS+0x337>
 2c3:	72 75                	jb     33a <MB_FLAGS+0x33a>
 2c5:	63 74 00 62          	arpl   WORD PTR [eax+eax*1+0x62],si
 2c9:	61                   	popa   
 2ca:	73 65                	jae    331 <MB_FLAGS+0x331>
 2cc:	5f                   	pop    edi
 2cd:	6d                   	ins    DWORD PTR es:[edi],dx
 2ce:	69 64 64 6c 65 00 6c 	imul   esp,DWORD PTR [esp+eiz*2+0x6c],0x696c0065
 2d5:	69 
 2d6:	6d                   	ins    DWORD PTR es:[edi],dx
 2d7:	69 74 5f 6c 6f 77 00 	imul   esi,DWORD PTR [edi+ebx*2+0x6c],0x4700776f
 2de:	47 
 2df:	64                   	fs
 2e0:	74 5f                	je     341 <MB_FLAGS+0x341>
 2e2:	53                   	push   ebx
 2e3:	65                   	gs
 2e4:	74 45                	je     32b <MB_FLAGS+0x32b>
 2e6:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2e7:	74 72                	je     35b <MB_FLAGS+0x35b>
 2e9:	79 00                	jns    2eb <MB_FLAGS+0x2eb>
 2eb:	69 64 74 5f 65 6e 74 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x72746e65
 2f2:	72 
 2f3:	79 5f                	jns    354 <MB_FLAGS+0x354>
 2f5:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 2f8:	74 61                	je     35b <MB_FLAGS+0x35b>
 2fa:	69 6e 65 72 00 69 64 	imul   ebp,DWORD PTR [esi+0x65],0x64690072
 301:	74 5f                	je     362 <MB_FLAGS+0x362>
 303:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 305:	74 72                	je     379 <MB_FLAGS+0x379>
 307:	79 00                	jns    309 <MB_FLAGS+0x309>
 309:	49                   	dec    ecx
 30a:	64                   	fs
 30b:	74 5f                	je     36c <MB_FLAGS+0x36c>
 30d:	49                   	dec    ecx
 30e:	6e                   	outs   dx,BYTE PTR ds:[esi]
 30f:	69 74 00 61 72 63 68 	imul   esi,DWORD PTR [eax+eax*1+0x61],0x2f686372
 316:	2f 
 317:	78 38                	js     351 <MB_FLAGS+0x351>
 319:	36                   	ss
 31a:	2f                   	das    
 31b:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 31e:	6d                   	ins    DWORD PTR es:[edi],dx
 31f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 320:	6e                   	outs   dx,BYTE PTR ds:[esi]
 321:	2f                   	das    
 322:	73 6f                	jae    393 <MB_FLAGS+0x393>
 324:	75 72                	jne    398 <MB_FLAGS+0x398>
 326:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 329:	49                   	dec    ecx
 32a:	6e                   	outs   dx,BYTE PTR ds:[esi]
 32b:	74 65                	je     392 <MB_FLAGS+0x392>
 32d:	72 72                	jb     3a1 <MB_FLAGS+0x3a1>
 32f:	75 70                	jne    3a1 <MB_FLAGS+0x3a1>
 331:	74 44                	je     377 <MB_FLAGS+0x377>
 333:	65                   	gs
 334:	73 63                	jae    399 <MB_FLAGS+0x399>
 336:	72 69                	jb     3a1 <MB_FLAGS+0x3a1>
 338:	70 74                	jo     3ae <MB_FLAGS+0x3ae>
 33a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 33b:	72 54                	jb     391 <MB_FLAGS+0x391>
 33d:	61                   	popa   
 33e:	62 6c 65 2e          	bound  ebp,QWORD PTR [ebp+eiz*2+0x2e]
 342:	63 00                	arpl   WORD PTR [eax],ax
 344:	69 64 74 5f 70 74 72 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x5f727470
 34b:	5f 
 34c:	73 00                	jae    34e <MB_FLAGS+0x34e>
 34e:	69 64 74 5f 70 74 72 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x727470
 355:	00 
 356:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 359:	65                   	gs
 35a:	5f                   	pop    edi
 35b:	6c                   	ins    BYTE PTR es:[edi],dx
 35c:	6f                   	outs   dx,DWORD PTR ds:[esi]
 35d:	00 69 64             	add    BYTE PTR [ecx+0x64],ch
 360:	74 5f                	je     3c1 <MB_FLAGS+0x3c1>
 362:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 364:	74 72                	je     3d8 <MB_FLAGS+0x3d8>
 366:	79 5f                	jns    3c7 <MB_FLAGS+0x3c7>
 368:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 36b:	74 61                	je     3ce <MB_FLAGS+0x3ce>
 36d:	69 6e 65 72 5f 73 74 	imul   ebp,DWORD PTR [esi+0x65],0x74735f72
 374:	72 75                	jb     3eb <MB_FLAGS+0x3eb>
 376:	63 74 00 62          	arpl   WORD PTR [eax+eax*1+0x62],si
 37a:	61                   	popa   
 37b:	73 65                	jae    3e2 <MB_FLAGS+0x3e2>
 37d:	5f                   	pop    edi
 37e:	68 69 00 66 6c       	push   0x6c660069
 383:	61                   	popa   
 384:	67 73 00             	addr16 jae 387 <MB_FLAGS+0x387>
 387:	69 64 74 5f 65 6e 74 	imul   esp,DWORD PTR [esp+esi*2+0x5f],0x72746e65
 38e:	72 
 38f:	79 5f                	jns    3f0 <MB_FLAGS+0x3f0>
 391:	73 74                	jae    407 <MB_FLAGS+0x407>
 393:	72 75                	jb     40a <MB_FLAGS+0x40a>
 395:	63 74 00 49          	arpl   WORD PTR [eax+eax*1+0x49],si
 399:	64                   	fs
 39a:	74 5f                	je     3fb <MB_FLAGS+0x3fb>
 39c:	53                   	push   ebx
 39d:	65                   	gs
 39e:	74 45                	je     3e5 <MB_FLAGS+0x3e5>
 3a0:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3a1:	74 72                	je     415 <MB_FLAGS+0x415>
 3a3:	79 00                	jns    3a5 <MB_FLAGS+0x3a5>
 3a5:	49                   	dec    ecx
 3a6:	64                   	fs
 3a7:	74 5f                	je     408 <MB_FLAGS+0x408>
 3a9:	49                   	dec    ecx
 3aa:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3ab:	73 74                	jae    421 <MB_FLAGS+0x421>
 3ad:	61                   	popa   
 3ae:	6c                   	ins    BYTE PTR es:[edi],dx
 3af:	6c                   	ins    BYTE PTR es:[edi],dx
 3b0:	45                   	inc    ebp
 3b1:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3b2:	74 72                	je     426 <MB_FLAGS+0x426>
 3b4:	69 65 73 00 69 64 74 	imul   esp,DWORD PTR [ebp+0x73],0x74646900
 3bb:	5f                   	pop    edi
 3bc:	70 74                	jo     432 <MB_FLAGS+0x432>
 3be:	72 5f                	jb     41f <MB_FLAGS+0x41f>
 3c0:	73 74                	jae    436 <MB_FLAGS+0x436>
 3c2:	72 75                	jb     439 <MB_FLAGS+0x439>
 3c4:	63 74 00 73          	arpl   WORD PTR [eax+eax*1+0x73],si
 3c8:	74 61                	je     42b <MB_FLAGS+0x42b>
 3ca:	72 74                	jb     440 <MB_FLAGS+0x440>
 3cc:	75 70                	jne    43e <MB_FLAGS+0x43e>
 3ce:	00 6d 5f             	add    BYTE PTR [ebp+0x5f],ch
 3d1:	66 6f                	outs   dx,WORD PTR ds:[esi]
 3d3:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3d4:	74 63                	je     439 <MB_FLAGS+0x439>
 3d6:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3d7:	6c                   	ins    BYTE PTR es:[edi],dx
 3d8:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3d9:	72 00                	jb     3db <MB_FLAGS+0x3db>
 3db:	4c                   	dec    esp
 3dc:	49                   	dec    ecx
 3dd:	47                   	inc    edi
 3de:	48                   	dec    eax
 3df:	54                   	push   esp
 3e0:	43                   	inc    ebx
 3e1:	59                   	pop    ecx
 3e2:	41                   	inc    ecx
 3e3:	4e                   	dec    esi
 3e4:	00 4c 49 47          	add    BYTE PTR [ecx+ecx*2+0x47],cl
 3e8:	48                   	dec    eax
 3e9:	54                   	push   esp
 3ea:	47                   	inc    edi
 3eb:	52                   	push   edx
 3ec:	45                   	inc    ebp
 3ed:	59                   	pop    ecx
 3ee:	00 6d 5f             	add    BYTE PTR [ebp+0x5f],ch
 3f1:	70 6f                	jo     462 <MB_FLAGS+0x462>
 3f3:	73 69                	jae    45e <MB_FLAGS+0x45e>
 3f5:	74 69                	je     460 <MB_FLAGS+0x460>
 3f7:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3f8:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3f9:	00 6d 5f             	add    BYTE PTR [ebp+0x5f],ch
 3fc:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 3ff:	74 65                	je     466 <MB_FLAGS+0x466>
 401:	6e                   	outs   dx,BYTE PTR ds:[esi]
 402:	74 00                	je     404 <MB_FLAGS+0x404>
 404:	42                   	inc    edx
 405:	52                   	push   edx
 406:	4f                   	dec    edi
 407:	57                   	push   edi
 408:	4e                   	dec    esi
 409:	00 44 41 52          	add    BYTE PTR [ecx+eax*2+0x52],al
 40d:	4b                   	dec    ebx
 40e:	47                   	inc    edi
 40f:	52                   	push   edx
 410:	45                   	inc    ebp
 411:	59                   	pop    ecx
 412:	00 4c 49 47          	add    BYTE PTR [ecx+ecx*2+0x47],cl
 416:	48                   	dec    eax
 417:	54                   	push   esp
 418:	47                   	inc    edi
 419:	52                   	push   edx
 41a:	45                   	inc    ebp
 41b:	45                   	inc    ebp
 41c:	4e                   	dec    esi
 41d:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 420:	6d                   	ins    DWORD PTR es:[edi],dx
 421:	6d                   	ins    DWORD PTR es:[edi],dx
 422:	6f                   	outs   dx,DWORD PTR ds:[esi]
 423:	6e                   	outs   dx,BYTE PTR ds:[esi]
 424:	2f                   	das    
 425:	73 6f                	jae    496 <MB_FLAGS+0x496>
 427:	75 72                	jne    49b <MB_FLAGS+0x49b>
 429:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 42c:	6b 65 72 6e          	imul   esp,DWORD PTR [ebp+0x72],0x6e
 430:	65                   	gs
 431:	6c                   	ins    BYTE PTR es:[edi],dx
 432:	2f                   	das    
 433:	6d                   	ins    DWORD PTR es:[edi],dx
 434:	61                   	popa   
 435:	69 6e 2e 63 00 57 48 	imul   ebp,DWORD PTR [esi+0x2e],0x48570063
 43c:	49                   	dec    ecx
 43d:	54                   	push   esp
 43e:	45                   	inc    ebp
 43f:	00 42 4c             	add    BYTE PTR [edx+0x4c],al
 442:	41                   	inc    ecx
 443:	43                   	inc    ebx
 444:	4b                   	dec    ebx
 445:	00 54 65 72          	add    BYTE PTR [ebp+eiz*2+0x72],dl
 449:	6d                   	ins    DWORD PTR es:[edi],dx
 44a:	69 6e 61 6c 00 50 6f 	imul   ebp,DWORD PTR [esi+0x61],0x6f50006c
 451:	73 69                	jae    4bc <MB_FLAGS+0x4bc>
 453:	74 69                	je     4be <MB_FLAGS+0x4be>
 455:	6f                   	outs   dx,DWORD PTR ds:[esi]
 456:	6e                   	outs   dx,BYTE PTR ds:[esi]
 457:	38 00                	cmp    BYTE PTR [eax],al
 459:	4c                   	dec    esp
 45a:	49                   	dec    ecx
 45b:	47                   	inc    edi
 45c:	48                   	dec    eax
 45d:	54                   	push   esp
 45e:	42                   	inc    edx
 45f:	4c                   	dec    esp
 460:	55                   	push   ebp
 461:	45                   	inc    ebp
 462:	00 4c 49 47          	add    BYTE PTR [ecx+ecx*2+0x47],cl
 466:	48                   	dec    eax
 467:	54                   	push   esp
 468:	4d                   	dec    ebp
 469:	41                   	inc    ecx
 46a:	47                   	inc    edi
 46b:	45                   	inc    ebp
 46c:	4e                   	dec    esi
 46d:	54                   	push   esp
 46e:	41                   	inc    ecx
 46f:	00 4c 49 47          	add    BYTE PTR [ecx+ecx*2+0x47],cl
 473:	48                   	dec    eax
 474:	54                   	push   esp
 475:	52                   	push   edx
 476:	45                   	inc    ebp
 477:	44                   	inc    esp
 478:	00 6d 5f             	add    BYTE PTR [ebp+0x5f],ch
 47b:	62 67 63             	bound  esp,QWORD PTR [edi+0x63]
 47e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 47f:	6c                   	ins    BYTE PTR es:[edi],dx
 480:	6f                   	outs   dx,DWORD PTR ds:[esi]
 481:	72 00                	jb     483 <MB_FLAGS+0x483>
 483:	59                   	pop    ecx
 484:	45                   	inc    ebp
 485:	4c                   	dec    esp
 486:	4c                   	dec    esp
 487:	4f                   	dec    edi
 488:	57                   	push   edi
 489:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 48c:	6d                   	ins    DWORD PTR es:[edi],dx
 48d:	6d                   	ins    DWORD PTR es:[edi],dx
 48e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 48f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 490:	2f                   	das    
 491:	73 6f                	jae    502 <MB_FLAGS+0x502>
 493:	75 72                	jne    507 <MB_FLAGS+0x507>
 495:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 498:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 49b:	73 6f                	jae    50c <MB_FLAGS+0x50c>
 49d:	6c                   	ins    BYTE PTR es:[edi],dx
 49e:	65                   	gs
 49f:	2f                   	das    
 4a0:	43                   	inc    ebx
 4a1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 4a2:	6e                   	outs   dx,BYTE PTR ds:[esi]
 4a3:	73 6f                	jae    514 <MB_FLAGS+0x514>
 4a5:	6c                   	ins    BYTE PTR es:[edi],dx
 4a6:	65 2e 63 00          	gs arpl WORD PTR cs:gs:[eax],ax
 4aa:	54                   	push   esp
 4ab:	65                   	gs
 4ac:	72 6d                	jb     51b <MB_FLAGS+0x51b>
 4ae:	69 6e 61 6c 5f 43 6c 	imul   ebp,DWORD PTR [esi+0x61],0x6c435f6c
 4b5:	65                   	gs
 4b6:	61                   	popa   
 4b7:	72 43                	jb     4fc <MB_FLAGS+0x4fc>
 4b9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 4ba:	6e                   	outs   dx,BYTE PTR ds:[esi]
 4bb:	74 65                	je     522 <MB_FLAGS+0x522>
 4bd:	6e                   	outs   dx,BYTE PTR ds:[esi]
 4be:	74 00                	je     4c0 <MB_FLAGS+0x4c0>
 4c0:	54                   	push   esp
 4c1:	65                   	gs
 4c2:	72 6d                	jb     531 <MB_FLAGS+0x531>
 4c4:	69 6e 61 6c 5f 55 70 	imul   ebp,DWORD PTR [esi+0x61],0x70555f6c
 4cb:	64                   	fs
 4cc:	61                   	popa   
 4cd:	74 65                	je     534 <MB_FLAGS+0x534>
 4cf:	43                   	inc    ebx
 4d0:	75 72                	jne    544 <MB_FLAGS+0x544>
 4d2:	73 6f                	jae    543 <MB_FLAGS+0x543>
 4d4:	72 00                	jb     4d6 <MB_FLAGS+0x4d6>
 4d6:	54                   	push   esp
 4d7:	65                   	gs
 4d8:	72 6d                	jb     547 <MB_FLAGS+0x547>
 4da:	69 6e 61 6c 5f 49 6e 	imul   ebp,DWORD PTR [esi+0x61],0x6e495f6c
 4e1:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 4e8:	65 
 4e9:	00 43 4f             	add    BYTE PTR [ebx+0x4f],al
 4ec:	4c                   	dec    esp
 4ed:	4f                   	dec    edi
 4ee:	52                   	push   edx
 4ef:	00 63 6f             	add    BYTE PTR [ebx+0x6f],ah
 4f2:	6d                   	ins    DWORD PTR es:[edi],dx
 4f3:	6d                   	ins    DWORD PTR es:[edi],dx
 4f4:	6f                   	outs   dx,DWORD PTR ds:[esi]
 4f5:	6e                   	outs   dx,BYTE PTR ds:[esi]
 4f6:	2f                   	das    
 4f7:	73 6f                	jae    568 <MB_FLAGS+0x568>
 4f9:	75 72                	jne    56d <MB_FLAGS+0x56d>
 4fb:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
 4fe:	63 6f 6e             	arpl   WORD PTR [edi+0x6e],bp
 501:	73 6f                	jae    572 <MB_FLAGS+0x572>
 503:	6c                   	ins    BYTE PTR es:[edi],dx
 504:	65                   	gs
 505:	2f                   	das    
 506:	54                   	push   esp
 507:	65                   	gs
 508:	72 6d                	jb     577 <MB_FLAGS+0x577>
 50a:	69 6e 61 6c 2e 63 00 	imul   ebp,DWORD PTR [esi+0x61],0x632e6c

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <MB_FLAGS+0x78>
   a:	74 75                	je     81 <MB_FLAGS+0x81>
   c:	2f                   	das    
   d:	4c                   	dec    esp
   e:	69 6e 61 72 6f 20 34 	imul   ebp,DWORD PTR [esi+0x61],0x34206f72
  15:	2e                   	cs
  16:	35 2e 32 2d 38       	xor    eax,0x382d322e
  1b:	75 62                	jne    7f <MB_FLAGS+0x7f>
  1d:	75 6e                	jne    8d <MB_FLAGS+0x8d>
  1f:	74 75                	je     96 <MB_FLAGS+0x96>
  21:	34 29                	xor    al,0x29
  23:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  26:	35                   	.byte 0x35
  27:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	10 00                	adc    BYTE PTR [eax],al
   2:	00 00                	add    BYTE PTR [eax],al
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 01                	inc    DWORD PTR [ecx]
   9:	00 01                	add    BYTE PTR [ecx],al
   b:	7c 08                	jl     15 <MB_FLAGS+0x15>
   d:	0c 04                	or     al,0x4
   f:	04 88                	add    al,0x88
  11:	01 00                	add    DWORD PTR [eax],eax
  13:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  16:	00 00                	add    BYTE PTR [eax],al
  18:	00 00                	add    BYTE PTR [eax],al
  1a:	00 00                	add    BYTE PTR [eax],al
  1c:	0c 00                	or     al,0x0
  1e:	10 00                	adc    BYTE PTR [eax],al
  20:	5a                   	pop    edx
  21:	01 00                	add    DWORD PTR [eax],eax
  23:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  26:	08 42 85             	or     BYTE PTR [edx-0x7b],al
  29:	02 0d 05 03 56 01    	add    cl,BYTE PTR ds:0x1560305
  2f:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  32:	04 00                	add    al,0x0
  34:	20 00                	and    BYTE PTR [eax],al
  36:	00 00                	add    BYTE PTR [eax],al
  38:	00 00                	add    BYTE PTR [eax],al
  3a:	00 00                	add    BYTE PTR [eax],al
  3c:	66 01 10             	add    WORD PTR [eax],dx
  3f:	00 60 00             	add    BYTE PTR [eax+0x0],ah
  42:	00 00                	add    BYTE PTR [eax],al
  44:	41                   	inc    ecx
  45:	0e                   	push   cs
  46:	08 42 85             	or     BYTE PTR [edx-0x7b],al
  49:	02 0d 05 47 83 03    	add    cl,BYTE PTR ds:0x3834705
  4f:	02 54 c3 41          	add    dl,BYTE PTR [ebx+eax*8+0x41]
  53:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  56:	04 00                	add    al,0x0
  58:	1c 00                	sbb    al,0x0
  5a:	00 00                	add    BYTE PTR [eax],al
  5c:	00 00                	add    BYTE PTR [eax],al
  5e:	00 00                	add    BYTE PTR [eax],al
  60:	c6 01 10             	mov    BYTE PTR [ecx],0x10
  63:	00 f0                	add    al,dh
  65:	00 00                	add    BYTE PTR [eax],al
  67:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  6a:	08 42 85             	or     BYTE PTR [edx-0x7b],al
  6d:	02 0d 05 02 ec c5    	add    cl,BYTE PTR ds:0xc5ec0205
  73:	0c 04                	or     al,0x4
  75:	04 00                	add    al,0x0
  77:	00 10                	add    BYTE PTR [eax],dl
  79:	00 00                	add    BYTE PTR [eax],al
  7b:	00 ff                	add    bh,bh
  7d:	ff                   	(bad)  
  7e:	ff                   	(bad)  
  7f:	ff 01                	inc    DWORD PTR [ecx]
  81:	00 01                	add    BYTE PTR [ecx],al
  83:	7c 08                	jl     8d <MB_FLAGS+0x8d>
  85:	0c 04                	or     al,0x4
  87:	04 88                	add    al,0x88
  89:	01 00                	add    DWORD PTR [eax],eax
  8b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  8e:	00 00                	add    BYTE PTR [eax],al
  90:	78 00                	js     92 <MB_FLAGS+0x92>
  92:	00 00                	add    BYTE PTR [eax],al
  94:	b8 02 10 00 1e       	mov    eax,0x1e001002
  99:	00 00                	add    BYTE PTR [eax],al
  9b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
  9e:	08 42 85             	or     BYTE PTR [edx-0x7b],al
  a1:	02 0d 05 5a c5 0c    	add    cl,BYTE PTR ds:0xcc55a05
  a7:	04 04                	add    al,0x4
  a9:	00 00                	add    BYTE PTR [eax],al
  ab:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  ae:	00 00                	add    BYTE PTR [eax],al
  b0:	78 00                	js     b2 <MB_FLAGS+0xb2>
  b2:	00 00                	add    BYTE PTR [eax],al
  b4:	d6                   	(bad)  
  b5:	02 10                	add    dl,BYTE PTR [eax]
  b7:	00 71 01             	add    BYTE PTR [ecx+0x1],dh
  ba:	00 00                	add    BYTE PTR [eax],al
  bc:	41                   	inc    ecx
  bd:	0e                   	push   cs
  be:	08 42 85             	or     BYTE PTR [edx-0x7b],al
  c1:	02 0d 05 03 6d 01    	add    cl,BYTE PTR ds:0x16d0305
  c7:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  ca:	04 00                	add    al,0x0
  cc:	20 00                	and    BYTE PTR [eax],al
  ce:	00 00                	add    BYTE PTR [eax],al
  d0:	78 00                	js     d2 <MB_FLAGS+0xd2>
  d2:	00 00                	add    BYTE PTR [eax],al
  d4:	47                   	inc    edi
  d5:	04 10                	add    al,0x10
  d7:	00 3c 00             	add    BYTE PTR [eax+eax*1],bh
  da:	00 00                	add    BYTE PTR [eax],al
  dc:	41                   	inc    ecx
  dd:	0e                   	push   cs
  de:	08 42 85             	or     BYTE PTR [edx-0x7b],al
  e1:	02 0d 05 47 83 03    	add    cl,BYTE PTR ds:0x3834705
  e7:	70 c3                	jo     ac <MB_FLAGS+0xac>
  e9:	41                   	inc    ecx
  ea:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
  ed:	04 00                	add    al,0x0
  ef:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
  f2:	00 00                	add    BYTE PTR [eax],al
  f4:	78 00                	js     f6 <MB_FLAGS+0xf6>
  f6:	00 00                	add    BYTE PTR [eax],al
  f8:	83 04 10 00          	add    DWORD PTR [eax+edx*1],0x0
  fc:	e3 00                	jecxz  fe <MB_FLAGS+0xfe>
  fe:	00 00                	add    BYTE PTR [eax],al
 100:	41                   	inc    ecx
 101:	0e                   	push   cs
 102:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 105:	02 0d 05 02 df c5    	add    cl,BYTE PTR ds:0xc5df0205
 10b:	0c 04                	or     al,0x4
 10d:	04 00                	add    al,0x0
 10f:	00 10                	add    BYTE PTR [eax],dl
 111:	00 00                	add    BYTE PTR [eax],al
 113:	00 ff                	add    bh,bh
 115:	ff                   	(bad)  
 116:	ff                   	(bad)  
 117:	ff 01                	inc    DWORD PTR [ecx]
 119:	00 01                	add    BYTE PTR [ecx],al
 11b:	7c 08                	jl     125 <MB_FLAGS+0x125>
 11d:	0c 04                	or     al,0x4
 11f:	04 88                	add    al,0x88
 121:	01 00                	add    DWORD PTR [eax],eax
 123:	00 20                	add    BYTE PTR [eax],ah
 125:	00 00                	add    BYTE PTR [eax],al
 127:	00 10                	add    BYTE PTR [eax],dl
 129:	01 00                	add    DWORD PTR [eax],eax
 12b:	00 68 05             	add    BYTE PTR [eax+0x5],ch
 12e:	10 00                	adc    BYTE PTR [eax],al
 130:	2a 00                	sub    al,BYTE PTR [eax]
 132:	00 00                	add    BYTE PTR [eax],al
 134:	41                   	inc    ecx
 135:	0e                   	push   cs
 136:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 139:	02 0d 05 5a 83 03    	add    cl,BYTE PTR ds:0x3835a05
 13f:	4b                   	dec    ebx
 140:	c3                   	ret    
 141:	41                   	inc    ecx
 142:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 145:	04 00                	add    al,0x0
 147:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 14a:	00 00                	add    BYTE PTR [eax],al
 14c:	10 01                	adc    BYTE PTR [ecx],al
 14e:	00 00                	add    BYTE PTR [eax],al
 150:	92                   	xchg   edx,eax
 151:	05 10 00 1e 00       	add    eax,0x1e0010
 156:	00 00                	add    BYTE PTR [eax],al
 158:	41                   	inc    ecx
 159:	0e                   	push   cs
 15a:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 15d:	02 0d 05 5a c5 0c    	add    cl,BYTE PTR ds:0xcc55a05
 163:	04 04                	add    al,0x4
 165:	00 00                	add    BYTE PTR [eax],al
 167:	00 20                	add    BYTE PTR [eax],ah
 169:	00 00                	add    BYTE PTR [eax],al
 16b:	00 10                	add    BYTE PTR [eax],dl
 16d:	01 00                	add    DWORD PTR [eax],eax
 16f:	00 b0 05 10 00 25    	add    BYTE PTR [eax+0x25001005],dh
 175:	01 00                	add    DWORD PTR [eax],eax
 177:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 17a:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 17d:	02 0d 05 47 83 03    	add    cl,BYTE PTR ds:0x3834705
 183:	03 19                	add    ebx,DWORD PTR [ecx]
 185:	01 c3                	add    ebx,eax
 187:	41                   	inc    ecx
 188:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 18b:	04 1c                	add    al,0x1c
 18d:	00 00                	add    BYTE PTR [eax],al
 18f:	00 10                	add    BYTE PTR [eax],dl
 191:	01 00                	add    DWORD PTR [eax],eax
 193:	00 d5                	add    ch,dl
 195:	06                   	push   es
 196:	10 00                	adc    BYTE PTR [eax],al
 198:	29 00                	sub    DWORD PTR [eax],eax
 19a:	00 00                	add    BYTE PTR [eax],al
 19c:	41                   	inc    ecx
 19d:	0e                   	push   cs
 19e:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 1a1:	02 0d 05 65 c5 0c    	add    cl,BYTE PTR ds:0xcc56505
 1a7:	04 04                	add    al,0x4
 1a9:	00 00                	add    BYTE PTR [eax],al
 1ab:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	10 01                	adc    BYTE PTR [ecx],al
 1b2:	00 00                	add    BYTE PTR [eax],al
 1b4:	fe 06                	inc    BYTE PTR [esi]
 1b6:	10 00                	adc    BYTE PTR [eax],al
 1b8:	37                   	aaa    
 1b9:	00 00                	add    BYTE PTR [eax],al
 1bb:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 1be:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 1c1:	02 0d 05 73 c5 0c    	add    cl,BYTE PTR ds:0xcc57305
 1c7:	04 04                	add    al,0x4
 1c9:	00 00                	add    BYTE PTR [eax],al
 1cb:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 1ce:	00 00                	add    BYTE PTR [eax],al
 1d0:	10 01                	adc    BYTE PTR [ecx],al
 1d2:	00 00                	add    BYTE PTR [eax],al
 1d4:	35 07 10 00 1f       	xor    eax,0x1f001007
 1d9:	00 00                	add    BYTE PTR [eax],al
 1db:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 1de:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 1e1:	02 0d 05 5b c5 0c    	add    cl,BYTE PTR ds:0xcc55b05
 1e7:	04 04                	add    al,0x4
 1e9:	00 00                	add    BYTE PTR [eax],al
 1eb:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 1ee:	00 00                	add    BYTE PTR [eax],al
 1f0:	10 01                	adc    BYTE PTR [ecx],al
 1f2:	00 00                	add    BYTE PTR [eax],al
 1f4:	54                   	push   esp
 1f5:	07                   	pop    es
 1f6:	10 00                	adc    BYTE PTR [eax],al
 1f8:	1f                   	pop    ds
 1f9:	00 00                	add    BYTE PTR [eax],al
 1fb:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 1fe:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 201:	02 0d 05 5b c5 0c    	add    cl,BYTE PTR ds:0xcc55b05
 207:	04 04                	add    al,0x4
 209:	00 00                	add    BYTE PTR [eax],al
 20b:	00 10                	add    BYTE PTR [eax],dl
 20d:	00 00                	add    BYTE PTR [eax],al
 20f:	00 ff                	add    bh,bh
 211:	ff                   	(bad)  
 212:	ff                   	(bad)  
 213:	ff 01                	inc    DWORD PTR [ecx]
 215:	00 01                	add    BYTE PTR [ecx],al
 217:	7c 08                	jl     221 <MB_FLAGS+0x221>
 219:	0c 04                	or     al,0x4
 21b:	04 88                	add    al,0x88
 21d:	01 00                	add    DWORD PTR [eax],eax
 21f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 222:	00 00                	add    BYTE PTR [eax],al
 224:	0c 02                	or     al,0x2
 226:	00 00                	add    BYTE PTR [eax],al
 228:	a8 07                	test   al,0x7
 22a:	10 00                	adc    BYTE PTR [eax],al
 22c:	0d 00 00 00 41       	or     eax,0x41000000
 231:	0e                   	push   cs
 232:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 235:	02 0d 05 49 c5 0c    	add    cl,BYTE PTR ds:0xcc54905
 23b:	04 04                	add    al,0x4
 23d:	00 00                	add    BYTE PTR [eax],al
 23f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 242:	00 00                	add    BYTE PTR [eax],al
 244:	0c 02                	or     al,0x2
 246:	00 00                	add    BYTE PTR [eax],al
 248:	b5 07                	mov    ch,0x7
 24a:	10 00                	adc    BYTE PTR [eax],al
 24c:	84 00                	test   BYTE PTR [eax],al
 24e:	00 00                	add    BYTE PTR [eax],al
 250:	41                   	inc    ecx
 251:	0e                   	push   cs
 252:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 255:	02 0d 05 02 80 c5    	add    cl,BYTE PTR ds:0xc5800205
 25b:	0c 04                	or     al,0x4
 25d:	04 00                	add    al,0x0
 25f:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 262:	00 00                	add    BYTE PTR [eax],al
 264:	0c 02                	or     al,0x2
 266:	00 00                	add    BYTE PTR [eax],al
 268:	39 08                	cmp    DWORD PTR [eax],ecx
 26a:	10 00                	adc    BYTE PTR [eax],al
 26c:	d4 01                	aam    0x1
 26e:	00 00                	add    BYTE PTR [eax],al
 270:	41                   	inc    ecx
 271:	0e                   	push   cs
 272:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 275:	02 0d 05 03 d0 01    	add    cl,BYTE PTR ds:0x1d00305
 27b:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 27e:	04 00                	add    al,0x0
 280:	10 00                	adc    BYTE PTR [eax],al
 282:	00 00                	add    BYTE PTR [eax],al
 284:	ff                   	(bad)  
 285:	ff                   	(bad)  
 286:	ff                   	(bad)  
 287:	ff 01                	inc    DWORD PTR [ecx]
 289:	00 01                	add    BYTE PTR [ecx],al
 28b:	7c 08                	jl     295 <MB_FLAGS+0x295>
 28d:	0c 04                	or     al,0x4
 28f:	04 88                	add    al,0x88
 291:	01 00                	add    DWORD PTR [eax],eax
 293:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 296:	00 00                	add    BYTE PTR [eax],al
 298:	80 02 00             	add    BYTE PTR [edx],0x0
 29b:	00 20                	add    BYTE PTR [eax],ah
 29d:	0a 10                	or     dl,BYTE PTR [eax]
 29f:	00 0d 00 00 00 41    	add    BYTE PTR ds:0x41000000,cl
 2a5:	0e                   	push   cs
 2a6:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 2a9:	02 0d 05 49 c5 0c    	add    cl,BYTE PTR ds:0xcc54905
 2af:	04 04                	add    al,0x4
 2b1:	00 00                	add    BYTE PTR [eax],al
 2b3:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 2b6:	00 00                	add    BYTE PTR [eax],al
 2b8:	80 02 00             	add    BYTE PTR [edx],0x0
 2bb:	00 2d 0a 10 00 68    	add    BYTE PTR ds:0x6800100a,ch
 2c1:	00 00                	add    BYTE PTR [eax],al
 2c3:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 2c6:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 2c9:	02 0d 05 02 64 c5    	add    cl,BYTE PTR ds:0xc5640205
 2cf:	0c 04                	or     al,0x4
 2d1:	04 00                	add    al,0x0
 2d3:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 2d6:	00 00                	add    BYTE PTR [eax],al
 2d8:	80 02 00             	add    BYTE PTR [edx],0x0
 2db:	00 95 0a 10 00 34    	add    BYTE PTR [ebp+0x3400100a],dl
 2e1:	00 00                	add    BYTE PTR [eax],al
 2e3:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 2e6:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 2e9:	02 0d 05 70 c5 0c    	add    cl,BYTE PTR ds:0xcc57005
 2ef:	04 04                	add    al,0x4
 2f1:	00 00                	add    BYTE PTR [eax],al
 2f3:	00 10                	add    BYTE PTR [eax],dl
 2f5:	00 00                	add    BYTE PTR [eax],al
 2f7:	00 ff                	add    bh,bh
 2f9:	ff                   	(bad)  
 2fa:	ff                   	(bad)  
 2fb:	ff 01                	inc    DWORD PTR [ecx]
 2fd:	00 01                	add    BYTE PTR [ecx],al
 2ff:	7c 08                	jl     309 <MB_FLAGS+0x309>
 301:	0c 04                	or     al,0x4
 303:	04 88                	add    al,0x88
 305:	01 00                	add    DWORD PTR [eax],eax
 307:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 30a:	00 00                	add    BYTE PTR [eax],al
 30c:	f4                   	hlt    
 30d:	02 00                	add    al,BYTE PTR [eax]
 30f:	00 cc                	add    ah,cl
 311:	0a 10                	or     dl,BYTE PTR [eax]
 313:	00 5d 00             	add    BYTE PTR [ebp+0x0],bl
 316:	00 00                	add    BYTE PTR [eax],al
 318:	41                   	inc    ecx
 319:	0e                   	push   cs
 31a:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 31d:	02 0d 05 02 59 c5    	add    cl,BYTE PTR ds:0xc5590205
 323:	0c 04                	or     al,0x4
 325:	04 00                	add    al,0x0
 327:	00 10                	add    BYTE PTR [eax],dl
 329:	00 00                	add    BYTE PTR [eax],al
 32b:	00 ff                	add    bh,bh
 32d:	ff                   	(bad)  
 32e:	ff                   	(bad)  
 32f:	ff 01                	inc    DWORD PTR [ecx]
 331:	00 01                	add    BYTE PTR [ecx],al
 333:	7c 08                	jl     33d <MB_FLAGS+0x33d>
 335:	0c 04                	or     al,0x4
 337:	04 88                	add    al,0x88
 339:	01 00                	add    DWORD PTR [eax],eax
 33b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 33e:	00 00                	add    BYTE PTR [eax],al
 340:	28 03                	sub    BYTE PTR [ebx],al
 342:	00 00                	add    BYTE PTR [eax],al
 344:	2c 0b                	sub    al,0xb
 346:	10 00                	adc    BYTE PTR [eax],al
 348:	1e                   	push   ds
 349:	00 00                	add    BYTE PTR [eax],al
 34b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 34e:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 351:	02 0d 05 5a c5 0c    	add    cl,BYTE PTR ds:0xcc55a05
 357:	04 04                	add    al,0x4
 359:	00 00                	add    BYTE PTR [eax],al
 35b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 35e:	00 00                	add    BYTE PTR [eax],al
 360:	28 03                	sub    BYTE PTR [ebx],al
 362:	00 00                	add    BYTE PTR [eax],al
 364:	4a                   	dec    edx
 365:	0b 10                	or     edx,DWORD PTR [eax]
 367:	00 41 00             	add    BYTE PTR [ecx+0x0],al
 36a:	00 00                	add    BYTE PTR [eax],al
 36c:	41                   	inc    ecx
 36d:	0e                   	push   cs
 36e:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 371:	02 0d 05 7d c5 0c    	add    cl,BYTE PTR ds:0xcc57d05
 377:	04 04                	add    al,0x4
 379:	00 00                	add    BYTE PTR [eax],al
 37b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 37e:	00 00                	add    BYTE PTR [eax],al
 380:	28 03                	sub    BYTE PTR [ebx],al
 382:	00 00                	add    BYTE PTR [eax],al
 384:	8b 0b                	mov    ecx,DWORD PTR [ebx]
 386:	10 00                	adc    BYTE PTR [eax],al
 388:	67 00 00             	add    BYTE PTR [bx+si],al
 38b:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 38e:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 391:	02 0d 05 02 63 c5    	add    cl,BYTE PTR ds:0xc5630205
 397:	0c 04                	or     al,0x4
 399:	04 00                	add    al,0x0
 39b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 39e:	00 00                	add    BYTE PTR [eax],al
 3a0:	28 03                	sub    BYTE PTR [ebx],al
 3a2:	00 00                	add    BYTE PTR [eax],al
 3a4:	f2 0b 10             	repnz or edx,DWORD PTR [eax]
 3a7:	00 88 00 00 00 41    	add    BYTE PTR [eax+0x41000000],cl
 3ad:	0e                   	push   cs
 3ae:	08 42 85             	or     BYTE PTR [edx-0x7b],al
 3b1:	02 0d 05 02 84 c5    	add    cl,BYTE PTR ds:0xc5840205
 3b7:	0c 04                	or     al,0x4
 3b9:	04 00                	add    al,0x0
	...
